{"version":3,"file":"5678.bundle.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/adapters/adapter.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/tokens.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/utils.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/ws-connection/server-capability-registration.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-ws-jsonrpc/lib/socket/reader.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/connection.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/connection_manager.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/positioning.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-ws-jsonrpc/lib/socket/writer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-ws-jsonrpc/lib/logger.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/ws-connection/ws-connection.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-ws-jsonrpc/lib/connection.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-ws-jsonrpc/lib/socket/connection.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/extractors/manager.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/extractors/text_extractor.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/feature.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/manager.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/lsp/lib/virtual/document.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/lodash.mergewith/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/browser/main.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/browser/ril.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/api.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/cancellation.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/connection.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/disposable.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/events.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/is.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/linkedMap.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/messageBuffer.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/messageReader.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/messageWriter.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/messages.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/ral.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/semaphore.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/vscode-jsonrpc/lib/common/sharedArrayCancellation.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport mergeWith from 'lodash.mergewith';\nimport { Dialog, showDialog } from '@jupyterlab/apputils';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { Signal } from '@lumino/signaling';\nconst createButton = Dialog.createButton;\n/**\n * The values should follow the https://microsoft.github.io/language-server-protocol/specification guidelines\n */\nconst MIME_TYPE_LANGUAGE_MAP = {\n    'text/x-rsrc': 'r',\n    'text/x-r-source': 'r',\n    // currently there are no LSP servers for IPython we are aware of\n    'text/x-ipython': 'python'\n};\n/**\n * Foreign code: low level adapter is not aware of the presence of foreign languages;\n * it operates on the virtual document and must not attempt to infer the language dependencies\n * as this would make the logic of inspections caching impossible to maintain, thus the WidgetAdapter\n * has to handle that, keeping multiple connections and multiple virtual documents.\n */\nexport class WidgetLSPAdapter {\n    // note: it could be using namespace/IOptions pattern,\n    // but I do not know how to make it work with the generic type T\n    // (other than using 'any' in the IOptions interface)\n    constructor(widget, options) {\n        this.widget = widget;\n        this.options = options;\n        /**\n         * Signal emitted when the adapter is connected.\n         */\n        this._adapterConnected = new Signal(this);\n        /**\n         * Signal emitted when the active editor have changed.\n         */\n        this._activeEditorChanged = new Signal(this);\n        /**\n         * Signal emitted when an editor is changed.\n         */\n        this._editorAdded = new Signal(this);\n        /**\n         * Signal emitted when an editor is removed.\n         */\n        this._editorRemoved = new Signal(this);\n        /**\n         * Signal emitted when the adapter is disposed.\n         */\n        this._disposed = new Signal(this);\n        this._isDisposed = false;\n        this._virtualDocument = null;\n        this._connectionManager = options.connectionManager;\n        this._isConnected = false;\n        this._trans = (options.translator || nullTranslator).load('jupyterlab');\n        // set up signal connections\n        this.widget.context.saveState.connect(this.onSaveState, this);\n        this.connectionManager.closed.connect(this.onConnectionClosed, this);\n        this.widget.disposed.connect(this.dispose, this);\n    }\n    /**\n     * Check if the adapter is disposed\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Check if the document contains multiple editors\n     */\n    get hasMultipleEditors() {\n        return this.editors.length > 1;\n    }\n    /**\n     * Get the ID of the internal widget.\n     */\n    get widgetId() {\n        return this.widget.id;\n    }\n    /**\n     * Get the language identifier of the document\n     */\n    get language() {\n        // the values should follow https://microsoft.github.io/language-server-protocol/specification guidelines,\n        // see the table in https://microsoft.github.io/language-server-protocol/specification#textDocumentItem\n        if (MIME_TYPE_LANGUAGE_MAP.hasOwnProperty(this.mimeType)) {\n            return MIME_TYPE_LANGUAGE_MAP[this.mimeType];\n        }\n        else {\n            let withoutParameters = this.mimeType.split(';')[0];\n            let [type, subtype] = withoutParameters.split('/');\n            if (type === 'application' || type === 'text') {\n                if (subtype.startsWith('x-')) {\n                    return subtype.substring(2);\n                }\n                else {\n                    return subtype;\n                }\n            }\n            else {\n                return this.mimeType;\n            }\n        }\n    }\n    /**\n     * Signal emitted when the adapter is connected.\n     */\n    get adapterConnected() {\n        return this._adapterConnected;\n    }\n    /**\n     * Signal emitted when the active editor have changed.\n     */\n    get activeEditorChanged() {\n        return this._activeEditorChanged;\n    }\n    /**\n     * Signal emitted when the adapter is disposed.\n     */\n    get disposed() {\n        return this._disposed;\n    }\n    /**\n     * Signal emitted when the an editor is changed.\n     */\n    get editorAdded() {\n        return this._editorAdded;\n    }\n    /**\n     * Signal emitted when the an editor is removed.\n     */\n    get editorRemoved() {\n        return this._editorRemoved;\n    }\n    /**\n     * The virtual document is connected or not\n     */\n    get isConnected() {\n        return this._isConnected;\n    }\n    /**\n     * The LSP document and connection manager instance.\n     */\n    get connectionManager() {\n        return this._connectionManager;\n    }\n    /**\n     * The translator provider.\n     */\n    get trans() {\n        return this._trans;\n    }\n    /**\n     * Promise that resolves once the document is updated\n     */\n    get updateFinished() {\n        return this._updateFinished;\n    }\n    /**\n     * Internal virtual document of the adapter.\n     */\n    get virtualDocument() {\n        return this._virtualDocument;\n    }\n    /**\n     * Callback on connection closed event.\n     */\n    onConnectionClosed(_, { virtualDocument }) {\n        if (virtualDocument === this.virtualDocument) {\n            this.dispose();\n        }\n    }\n    /**\n     * Dispose the adapter.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this.disconnect();\n        this._virtualDocument = null;\n        this._disposed.emit();\n        Signal.clearData(this);\n    }\n    /**\n     * Disconnect virtual document from the language server.\n     */\n    disconnect() {\n        var _a, _b;\n        const uri = (_a = this.virtualDocument) === null || _a === void 0 ? void 0 : _a.uri;\n        const { model } = this.widget.context;\n        if (uri) {\n            this.connectionManager.unregisterDocument(uri);\n        }\n        model.contentChanged.disconnect(this._onContentChanged, this);\n        // pretend that all editors were removed to trigger the disconnection of even handlers\n        // they will be connected again on new connection\n        for (let { ceEditor: editor } of this.editors) {\n            this._editorRemoved.emit({\n                editor: editor\n            });\n        }\n        (_b = this.virtualDocument) === null || _b === void 0 ? void 0 : _b.dispose();\n    }\n    /**\n     * Update the virtual document.\n     */\n    updateDocuments() {\n        if (this._isDisposed) {\n            console.warn('Cannot update documents: adapter disposed');\n            return Promise.reject('Cannot update documents: adapter disposed');\n        }\n        return this.virtualDocument.updateManager.updateDocuments(this.editors);\n    }\n    /**\n     * Callback called on the document changed event.\n     */\n    documentChanged(virtualDocument, document, isInit = false) {\n        if (this._isDisposed) {\n            console.warn('Cannot swap document: adapter disposed');\n            return;\n        }\n        // TODO only send the difference, using connection.sendSelectiveChange()\n        let connection = this.connectionManager.connections.get(virtualDocument.uri);\n        if (!(connection === null || connection === void 0 ? void 0 : connection.isReady)) {\n            console.log('Skipping document update signal: connection not ready');\n            return;\n        }\n        connection.sendFullTextChange(virtualDocument.value, virtualDocument.documentInfo);\n    }\n    // equivalent to triggering didClose and didOpen, as per syncing specification,\n    // but also reloads the connection; used during file rename (or when it was moved)\n    reloadConnection() {\n        // ignore premature calls (before the editor was initialized)\n        if (this.virtualDocument === null) {\n            return;\n        }\n        // disconnect all existing connections (and dispose adapters)\n        this.disconnect();\n        // recreate virtual document using current path and language\n        // as virtual editor assumes it gets the virtual document at init,\n        // just dispose virtual editor (which disposes virtual document too)\n        // and re-initialize both virtual editor and document\n        this.initVirtual();\n        // reconnect\n        this.connectDocument(this.virtualDocument, true).catch(console.warn);\n    }\n    /**\n     * Callback on document saved event.\n     */\n    onSaveState(context, state) {\n        // ignore premature calls (before the editor was initialized)\n        if (this.virtualDocument === null) {\n            return;\n        }\n        if (state === 'completed') {\n            // note: must only be send to the appropriate connections as\n            // some servers (Julia) break if they receive save notification\n            // for a document that was not opened before, see:\n            // https://github.com/jupyter-lsp/jupyterlab-lsp/issues/490\n            const documentsToSave = [this.virtualDocument];\n            for (let virtualDocument of documentsToSave) {\n                let connection = this.connectionManager.connections.get(virtualDocument.uri);\n                if (!connection) {\n                    continue;\n                }\n                connection.sendSaved(virtualDocument.documentInfo);\n                for (let foreign of virtualDocument.foreignDocuments.values()) {\n                    documentsToSave.push(foreign);\n                }\n            }\n        }\n    }\n    /**\n     * Connect the virtual document with the language server.\n     */\n    async onConnected(data) {\n        let { virtualDocument } = data;\n        this._adapterConnected.emit(data);\n        this._isConnected = true;\n        try {\n            await this.updateDocuments();\n        }\n        catch (reason) {\n            console.warn('Could not update documents', reason);\n            return;\n        }\n        // refresh the document on the LSP server\n        this.documentChanged(virtualDocument, virtualDocument, true);\n        data.connection.serverNotifications['$/logTrace'].connect((connection, message) => {\n            console.log(data.connection.serverIdentifier, 'trace', virtualDocument.uri, message);\n        });\n        data.connection.serverNotifications['window/logMessage'].connect((connection, message) => {\n            console.log(connection.serverIdentifier + ': ' + message.message);\n        });\n        data.connection.serverNotifications['window/showMessage'].connect((connection, message) => {\n            void showDialog({\n                title: this.trans.__('Message from ') + connection.serverIdentifier,\n                body: message.message\n            });\n        });\n        data.connection.serverRequests['window/showMessageRequest'].setHandler(async (params) => {\n            const actionItems = params.actions;\n            const buttons = actionItems\n                ? actionItems.map(action => {\n                    return createButton({\n                        label: action.title\n                    });\n                })\n                : [createButton({ label: this.trans.__('Dismiss') })];\n            const result = await showDialog({\n                title: this.trans.__('Message from ') + data.connection.serverIdentifier,\n                body: params.message,\n                buttons: buttons\n            });\n            const choice = buttons.indexOf(result.button);\n            if (choice === -1) {\n                return null;\n            }\n            if (actionItems) {\n                return actionItems[choice];\n            }\n            return null;\n        });\n    }\n    /**\n     * Opens a connection for the document. The connection may or may\n     * not be initialized, yet, and depending on when this is called, the client\n     * may not be fully connected.\n     *\n     * @param virtualDocument a VirtualDocument\n     * @param sendOpen whether to open the document immediately\n     */\n    async connectDocument(virtualDocument, sendOpen = false) {\n        virtualDocument.foreignDocumentOpened.connect(this.onForeignDocumentOpened, this);\n        const connectionContext = await this._connect(virtualDocument).catch(console.error);\n        if (connectionContext && connectionContext.connection) {\n            virtualDocument.changed.connect(this.documentChanged, this);\n            if (sendOpen) {\n                connectionContext.connection.sendOpenWhenReady(virtualDocument.documentInfo);\n            }\n        }\n    }\n    /**\n     * Create the virtual document using current path and language.\n     */\n    initVirtual() {\n        var _a;\n        const { model } = this.widget.context;\n        (_a = this._virtualDocument) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._virtualDocument = this.createVirtualDocument();\n        model.contentChanged.connect(this._onContentChanged, this);\n    }\n    /**\n     * Handler for opening a document contained in a parent document. The assumption\n     * is that the editor already exists for this, and as such the document\n     * should be queued for immediate opening.\n     *\n     * @param host the VirtualDocument that contains the VirtualDocument in another language\n     * @param context information about the foreign VirtualDocument\n     */\n    async onForeignDocumentOpened(_, context) {\n        const { foreignDocument } = context;\n        await this.connectDocument(foreignDocument, true);\n        foreignDocument.foreignDocumentClosed.connect(this._onForeignDocumentClosed, this);\n    }\n    /**\n     * Callback called when a foreign document is closed,\n     * the associated signals with this virtual document\n     * are disconnected.\n     */\n    _onForeignDocumentClosed(_, context) {\n        const { foreignDocument } = context;\n        foreignDocument.foreignDocumentClosed.disconnect(this._onForeignDocumentClosed, this);\n        foreignDocument.foreignDocumentOpened.disconnect(this.onForeignDocumentOpened, this);\n        foreignDocument.changed.disconnect(this.documentChanged, this);\n    }\n    /**\n     * Detect the capabilities for the document type then\n     * open the websocket connection with the language server.\n     */\n    async _connect(virtualDocument) {\n        let language = virtualDocument.language;\n        let capabilities = {\n            textDocument: {\n                synchronization: {\n                    dynamicRegistration: true,\n                    willSave: false,\n                    didSave: true,\n                    willSaveWaitUntil: false\n                }\n            },\n            workspace: {\n                didChangeConfiguration: {\n                    dynamicRegistration: true\n                }\n            }\n        };\n        capabilities = mergeWith(capabilities, this.options.featureManager.clientCapabilities());\n        let options = {\n            capabilities,\n            virtualDocument,\n            language,\n            hasLspSupportedFile: virtualDocument.hasLspSupportedFile\n        };\n        let connection = await this.connectionManager.connect(options);\n        if (connection) {\n            await this.onConnected({ virtualDocument, connection });\n            return {\n                connection,\n                virtualDocument\n            };\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Handle content changes and update all virtual documents after a change.\n     *\n     * #### Notes\n     * Update to the state of a notebook may be done without a notice on the\n     * CodeMirror level, e.g. when a cell is deleted. Therefore a\n     * JupyterLab-specific signal is watched instead.\n     *\n     * While by not using the change event of CodeMirror editors we lose an easy\n     * way to send selective (range) updates this can be still implemented by\n     * comparison of before/after states of the virtual documents, which is\n     * more resilient and editor-independent.\n     */\n    async _onContentChanged(_) {\n        // Update the virtual documents.\n        // Sending the updates to LSP is out of scope here.\n        const promise = this.updateDocuments();\n        if (!promise) {\n            console.warn('Could not update documents');\n            return;\n        }\n        this._updateFinished = promise.catch(console.warn);\n        await this.updateFinished;\n    }\n}\n//# sourceMappingURL=adapter.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Token } from '@lumino/coreutils';\nexport var ILanguageServerManager;\n(function (ILanguageServerManager) {\n    /**\n     * LSP endpoint prefix.\n     */\n    ILanguageServerManager.URL_NS = 'lsp';\n})(ILanguageServerManager || (ILanguageServerManager = {}));\n/**\n * @alpha\n *\n * The virtual documents and language server connections manager\n * Require this token in your extension to access the associated virtual\n * document and LS connection of opened documents.\n *\n */\nexport const ILSPDocumentConnectionManager = new Token('@jupyterlab/lsp:ILSPDocumentConnectionManager', 'Provides the virtual documents and language server connections service.');\n/**\n * @alpha\n *\n * The language server feature manager. Require this token in your extension\n * to register the client capabilities implemented by your extension.\n *\n */\nexport const ILSPFeatureManager = new Token('@jupyterlab/lsp:ILSPFeatureManager', 'Provides the language server feature manager. This token is required to register new client capabilities.');\n/**\n * @alpha\n *\n * The code extractor manager. Require this token in your extension to\n * register new code extractors. Code extractor allows creating multiple\n * virtual documents from an opened document.\n *\n */\nexport const ILSPCodeExtractorsManager = new Token('@jupyterlab/lsp:ILSPCodeExtractorsManager', 'Provides the code extractor manager. This token is required in your extension to register code extractor allowing the creation of multiple virtual document from an opened document.');\n/**\n * Method strings are reproduced here because a non-typing import of\n * `vscode-languageserver-protocol` is ridiculously expensive.\n */\nexport var Method;\n(function (Method) {\n    /** Server notifications */\n    let ServerNotification;\n    (function (ServerNotification) {\n        ServerNotification[\"PUBLISH_DIAGNOSTICS\"] = \"textDocument/publishDiagnostics\";\n        ServerNotification[\"SHOW_MESSAGE\"] = \"window/showMessage\";\n        ServerNotification[\"LOG_TRACE\"] = \"$/logTrace\";\n        ServerNotification[\"LOG_MESSAGE\"] = \"window/logMessage\";\n    })(ServerNotification = Method.ServerNotification || (Method.ServerNotification = {}));\n    /** Client notifications */\n    let ClientNotification;\n    (function (ClientNotification) {\n        ClientNotification[\"DID_CHANGE\"] = \"textDocument/didChange\";\n        ClientNotification[\"DID_CHANGE_CONFIGURATION\"] = \"workspace/didChangeConfiguration\";\n        ClientNotification[\"DID_OPEN\"] = \"textDocument/didOpen\";\n        ClientNotification[\"DID_SAVE\"] = \"textDocument/didSave\";\n        ClientNotification[\"INITIALIZED\"] = \"initialized\";\n        ClientNotification[\"SET_TRACE\"] = \"$/setTrace\";\n    })(ClientNotification = Method.ClientNotification || (Method.ClientNotification = {}));\n    /** Server requests */\n    let ServerRequest;\n    (function (ServerRequest) {\n        ServerRequest[\"REGISTER_CAPABILITY\"] = \"client/registerCapability\";\n        ServerRequest[\"SHOW_MESSAGE_REQUEST\"] = \"window/showMessageRequest\";\n        ServerRequest[\"UNREGISTER_CAPABILITY\"] = \"client/unregisterCapability\";\n        ServerRequest[\"WORKSPACE_CONFIGURATION\"] = \"workspace/configuration\";\n    })(ServerRequest = Method.ServerRequest || (Method.ServerRequest = {}));\n    /** Client requests */\n    let ClientRequest;\n    (function (ClientRequest) {\n        ClientRequest[\"COMPLETION\"] = \"textDocument/completion\";\n        ClientRequest[\"COMPLETION_ITEM_RESOLVE\"] = \"completionItem/resolve\";\n        ClientRequest[\"DEFINITION\"] = \"textDocument/definition\";\n        ClientRequest[\"DOCUMENT_HIGHLIGHT\"] = \"textDocument/documentHighlight\";\n        ClientRequest[\"DOCUMENT_SYMBOL\"] = \"textDocument/documentSymbol\";\n        ClientRequest[\"HOVER\"] = \"textDocument/hover\";\n        ClientRequest[\"IMPLEMENTATION\"] = \"textDocument/implementation\";\n        ClientRequest[\"INITIALIZE\"] = \"initialize\";\n        ClientRequest[\"REFERENCES\"] = \"textDocument/references\";\n        ClientRequest[\"RENAME\"] = \"textDocument/rename\";\n        ClientRequest[\"SIGNATURE_HELP\"] = \"textDocument/signatureHelp\";\n        ClientRequest[\"TYPE_DEFINITION\"] = \"textDocument/typeDefinition\";\n    })(ClientRequest = Method.ClientRequest || (Method.ClientRequest = {}));\n})(Method || (Method = {}));\n//# sourceMappingURL=tokens.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport mergeWith from 'lodash.mergewith';\n/**\n * Helper to wait for timeout.\n *\n * @param  timeout - time out in ms\n */\nexport async function sleep(timeout) {\n    return new Promise(resolve => {\n        setTimeout(() => {\n            resolve();\n        }, timeout);\n    });\n}\n/**\n * Wait for an event by pooling the `isReady` function.\n */\nexport function untilReady(isReady, maxRetrials = 35, interval = 50, intervalModifier = (i) => i) {\n    return (async () => {\n        let i = 0;\n        while (isReady() !== true) {\n            i += 1;\n            if (maxRetrials !== -1 && i > maxRetrials) {\n                throw Error('Too many retrials');\n            }\n            interval = intervalModifier(interval);\n            await sleep(interval);\n        }\n        return isReady;\n    })();\n}\n/**\n * Convert dotted path into dictionary.\n */\nexport function expandDottedPaths(obj) {\n    const settings = [];\n    for (let key in obj) {\n        const parsed = expandPath(key.split('.'), obj[key]);\n        settings.push(parsed);\n    }\n    return mergeWith({}, ...settings);\n}\n/**\n * The docs for many language servers show settings in the\n * VSCode format, e.g.: \"pyls.plugins.pyflakes.enabled\"\n *\n * VSCode converts that dot notation to JSON behind the scenes,\n * as the language servers themselves don't accept that syntax.\n */\nexport const expandPath = (path, value) => {\n    const obj = Object.create(null);\n    let curr = obj;\n    path.forEach((prop, i) => {\n        curr[prop] = Object.create(null);\n        if (i === path.length - 1) {\n            curr[prop] = value;\n        }\n        else {\n            curr = curr[prop];\n        }\n    });\n    return obj;\n};\n/**\n * An extended map which will create value for key on the fly.\n */\nexport class DefaultMap extends Map {\n    constructor(defaultFactory, entries) {\n        super(entries);\n        this.defaultFactory = defaultFactory;\n    }\n    get(k) {\n        return this.getOrCreate(k);\n    }\n    getOrCreate(k, ...args) {\n        if (this.has(k)) {\n            return super.get(k);\n        }\n        else {\n            let v = this.defaultFactory(k, ...args);\n            this.set(k, v);\n            return v;\n        }\n    }\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n/**\n * Register the capabilities with the server capabilities provider\n *\n * @param serverCapabilities - server capabilities provider.\n * @param registration -  capabilities to be registered.\n * @return - the new server capabilities provider\n */\nfunction registerServerCapability(serverCapabilities, registration) {\n    const serverCapabilitiesCopy = JSON.parse(JSON.stringify(serverCapabilities));\n    const { method, registerOptions } = registration;\n    const providerName = method.substring(13) + 'Provider';\n    if (providerName) {\n        if (!registerOptions) {\n            serverCapabilitiesCopy[providerName] = true;\n        }\n        else {\n            serverCapabilitiesCopy[providerName] = JSON.parse(JSON.stringify(registerOptions));\n        }\n    }\n    else {\n        console.warn('Could not register server capability.', registration);\n        return null;\n    }\n    return serverCapabilitiesCopy;\n}\n/**\n * Unregister the capabilities with the server capabilities provider\n *\n * @param serverCapabilities - server capabilities provider.\n * @param registration -  capabilities to be unregistered.\n * @return - the new server capabilities provider\n */\nfunction unregisterServerCapability(serverCapabilities, unregistration) {\n    const serverCapabilitiesCopy = JSON.parse(JSON.stringify(serverCapabilities));\n    const { method } = unregistration;\n    const providerName = method.substring(13) + 'Provider';\n    delete serverCapabilitiesCopy[providerName];\n    return serverCapabilitiesCopy;\n}\nexport { registerServerCapability, unregisterServerCapability };\n//# sourceMappingURL=server-capability-registration.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) 2018-2022 TypeFox GmbH (http://www.typefox.io). All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nimport { AbstractMessageReader } from 'vscode-jsonrpc/lib/common/messageReader';\r\nexport class WebSocketMessageReader extends AbstractMessageReader {\r\n    constructor(socket) {\r\n        super();\r\n        this.socket = socket;\r\n        this.state = 'initial';\r\n        this.events = [];\r\n        this.socket.onMessage(message => this.readMessage(message));\r\n        this.socket.onError(error => this.fireError(error));\r\n        this.socket.onClose((code, reason) => {\r\n            if (code !== 1000) {\r\n                const error = {\r\n                    name: '' + code,\r\n                    message: `Error during socket reconnect: code = ${code}, reason = ${reason}`\r\n                };\r\n                this.fireError(error);\r\n            }\r\n            this.fireClose();\r\n        });\r\n    }\r\n    listen(callback) {\r\n        if (this.state === 'initial') {\r\n            this.state = 'listening';\r\n            this.callback = callback;\r\n            while (this.events.length !== 0) {\r\n                const event = this.events.pop();\r\n                if (event.message) {\r\n                    this.readMessage(event.message);\r\n                }\r\n                else if (event.error) {\r\n                    this.fireError(event.error);\r\n                }\r\n                else {\r\n                    this.fireClose();\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            dispose: () => {\r\n                if (this.callback === callback) {\r\n                    this.callback = undefined;\r\n                }\r\n            }\r\n        };\r\n    }\r\n    readMessage(message) {\r\n        if (this.state === 'initial') {\r\n            this.events.splice(0, 0, { message });\r\n        }\r\n        else if (this.state === 'listening') {\r\n            const data = JSON.parse(message);\r\n            this.callback(data);\r\n        }\r\n    }\r\n    fireError(error) {\r\n        if (this.state === 'initial') {\r\n            this.events.splice(0, 0, { error });\r\n        }\r\n        else if (this.state === 'listening') {\r\n            super.fireError(error);\r\n        }\r\n    }\r\n    fireClose() {\r\n        if (this.state === 'initial') {\r\n            this.events.splice(0, 0, {});\r\n        }\r\n        else if (this.state === 'listening') {\r\n            super.fireClose();\r\n        }\r\n        this.state = 'closed';\r\n    }\r\n}\r\n//# sourceMappingURL=reader.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Signal } from '@lumino/signaling';\nimport { Method } from './tokens';\nimport { untilReady } from './utils';\nimport { registerServerCapability, unregisterServerCapability } from './ws-connection/server-capability-registration';\nimport { LspWsConnection } from './ws-connection/ws-connection';\n/**\n * Helper class to handle client request\n */\nclass ClientRequestHandler {\n    constructor(connection, method, emitter) {\n        this.connection = connection;\n        this.method = method;\n        this.emitter = emitter;\n    }\n    request(params) {\n        // TODO check if is ready?\n        this.emitter.log(MessageKind.clientRequested, {\n            method: this.method,\n            message: params\n        });\n        return this.connection\n            .sendRequest(this.method, params)\n            .then((result) => {\n            this.emitter.log(MessageKind.resultForClient, {\n                method: this.method,\n                message: params\n            });\n            return result;\n        });\n    }\n}\n/**\n * Helper class to handle server responses\n */\nclass ServerRequestHandler {\n    constructor(connection, method, emitter) {\n        this.connection = connection;\n        this.method = method;\n        this.emitter = emitter;\n        // on request accepts \"thenable\"\n        this.connection.onRequest(method, this._handle.bind(this));\n        this._handler = null;\n    }\n    setHandler(handler) {\n        this._handler = handler;\n    }\n    clearHandler() {\n        this._handler = null;\n    }\n    _handle(request) {\n        this.emitter.log(MessageKind.serverRequested, {\n            method: this.method,\n            message: request\n        });\n        if (!this._handler) {\n            return new Promise(() => undefined);\n        }\n        return this._handler(request, this.emitter).then(result => {\n            this.emitter.log(MessageKind.responseForServer, {\n                method: this.method,\n                message: result\n            });\n            return result;\n        });\n    }\n}\nexport const Provider = {\n    TEXT_DOCUMENT_SYNC: 'textDocumentSync',\n    COMPLETION: 'completionProvider',\n    HOVER: 'hoverProvider',\n    SIGNATURE_HELP: 'signatureHelpProvider',\n    DECLARATION: 'declarationProvider',\n    DEFINITION: 'definitionProvider',\n    TYPE_DEFINITION: 'typeDefinitionProvider',\n    IMPLEMENTATION: 'implementationProvider',\n    REFERENCES: 'referencesProvider',\n    DOCUMENT_HIGHLIGHT: 'documentHighlightProvider',\n    DOCUMENT_SYMBOL: 'documentSymbolProvider',\n    CODE_ACTION: 'codeActionProvider',\n    CODE_LENS: 'codeLensProvider',\n    DOCUMENT_LINK: 'documentLinkProvider',\n    COLOR: 'colorProvider',\n    DOCUMENT_FORMATTING: 'documentFormattingProvider',\n    DOCUMENT_RANGE_FORMATTING: 'documentRangeFormattingProvider',\n    DOCUMENT_ON_TYPE_FORMATTING: 'documentOnTypeFormattingProvider',\n    RENAME: 'renameProvider',\n    FOLDING_RANGE: 'foldingRangeProvider',\n    EXECUTE_COMMAND: 'executeCommandProvider',\n    SELECTION_RANGE: 'selectionRangeProvider',\n    WORKSPACE_SYMBOL: 'workspaceSymbolProvider',\n    WORKSPACE: 'workspace'\n};\n/**\n * Create a map between the request method and its handler\n */\nfunction createMethodMap(methods, handlerFactory) {\n    const result = {};\n    for (let method of Object.values(methods)) {\n        result[method] = handlerFactory(method);\n    }\n    return result;\n}\nvar MessageKind;\n(function (MessageKind) {\n    MessageKind[MessageKind[\"clientNotifiedServer\"] = 0] = \"clientNotifiedServer\";\n    MessageKind[MessageKind[\"serverNotifiedClient\"] = 1] = \"serverNotifiedClient\";\n    MessageKind[MessageKind[\"serverRequested\"] = 2] = \"serverRequested\";\n    MessageKind[MessageKind[\"clientRequested\"] = 3] = \"clientRequested\";\n    MessageKind[MessageKind[\"resultForClient\"] = 4] = \"resultForClient\";\n    MessageKind[MessageKind[\"responseForServer\"] = 5] = \"responseForServer\";\n})(MessageKind || (MessageKind = {}));\nexport class LSPConnection extends LspWsConnection {\n    constructor(options) {\n        super(options);\n        /**\n         * Is the connection is closed manually?\n         */\n        this._closingManually = false;\n        this._closeSignal = new Signal(this);\n        this._errorSignal = new Signal(this);\n        this._serverInitialized = new Signal(this);\n        this._options = options;\n        this.logAllCommunication = false;\n        this.serverIdentifier = options.serverIdentifier;\n        this.serverLanguage = options.languageId;\n        this.documentsToOpen = [];\n        this.clientNotifications =\n            this.constructNotificationHandlers(Method.ClientNotification);\n        this.serverNotifications =\n            this.constructNotificationHandlers(Method.ServerNotification);\n    }\n    /**\n     * Signal emitted when the connection is closed.\n     */\n    get closeSignal() {\n        return this._closeSignal;\n    }\n    /**\n     * Signal emitted when the connection receives an error\n     * message.\n     */\n    get errorSignal() {\n        return this._errorSignal;\n    }\n    /**\n     * Signal emitted when the connection is initialized.\n     */\n    get serverInitialized() {\n        return this._serverInitialized;\n    }\n    /**\n     * Dispose the connection.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        Object.values(this.serverRequests).forEach(request => request.clearHandler());\n        this.close();\n        super.dispose();\n    }\n    /**\n     * Helper to print the logs to logger, for now we are using\n     * directly the browser's console.\n     */\n    log(kind, message) {\n        if (this.logAllCommunication) {\n            console.log(kind, message);\n        }\n    }\n    /**\n     * Send the open request to the backend when the server is\n     * ready.\n     */\n    sendOpenWhenReady(documentInfo) {\n        if (this.isReady) {\n            this.sendOpen(documentInfo);\n        }\n        else {\n            this.documentsToOpen.push(documentInfo);\n        }\n    }\n    /**\n     * Send the document changes to the server.\n     */\n    sendSelectiveChange(changeEvent, documentInfo) {\n        this._sendChange([changeEvent], documentInfo);\n    }\n    /**\n     * Send all changes to the server.\n     */\n    sendFullTextChange(text, documentInfo) {\n        this._sendChange([{ text }], documentInfo);\n    }\n    /**\n     * Check if a capability is available in the server capabilities.\n     */\n    provides(capability) {\n        return !!(this.serverCapabilities && this.serverCapabilities[capability]);\n    }\n    /**\n     * Close the connection to the server.\n     */\n    close() {\n        try {\n            this._closingManually = true;\n            super.close();\n        }\n        catch (e) {\n            this._closingManually = false;\n        }\n    }\n    /**\n     * Initialize a connection over a web socket that speaks the LSP.\n     */\n    connect(socket) {\n        super.connect(socket);\n        untilReady(() => {\n            return this.isConnected;\n        }, -1)\n            .then(() => {\n            const disposable = this.connection.onClose(() => {\n                this._isConnected = false;\n                this._closeSignal.emit(this._closingManually);\n            });\n            this._disposables.push(disposable);\n        })\n            .catch(() => {\n            console.error('Could not connect onClose signal');\n        });\n    }\n    /**\n     * Get send request to the server to get completion results\n     * from a completion item\n     */\n    async getCompletionResolve(completionItem) {\n        if (!this.isReady) {\n            return;\n        }\n        return this.connection.sendRequest('completionItem/resolve', completionItem);\n    }\n    /**\n     * Generate the notification handlers\n     */\n    constructNotificationHandlers(methods) {\n        const factory = () => new Signal(this);\n        return createMethodMap(methods, factory);\n    }\n    /**\n     * Generate the client request handler\n     */\n    constructClientRequestHandler(methods) {\n        return createMethodMap(methods, method => new ClientRequestHandler(this.connection, method, this));\n    }\n    /**\n     * Generate the server response handler\n     */\n    constructServerRequestHandler(methods) {\n        return createMethodMap(methods, method => new ServerRequestHandler(this.connection, method, this));\n    }\n    /**\n     * Initialization parameters to be sent to the language server.\n     * Subclasses can overload this when adding more features.\n     */\n    initializeParams() {\n        return {\n            ...super.initializeParams(),\n            capabilities: this._options.capabilities,\n            initializationOptions: null,\n            processId: null,\n            workspaceFolders: null\n        };\n    }\n    /**\n     * Callback called when the server is initialized.\n     */\n    onServerInitialized(params) {\n        this.afterInitialized();\n        super.onServerInitialized(params);\n        while (this.documentsToOpen.length) {\n            this.sendOpen(this.documentsToOpen.pop());\n        }\n        this._serverInitialized.emit(this.serverCapabilities);\n    }\n    /**\n     * Once the server is initialized, this method generates the\n     * client and server handlers\n     */\n    afterInitialized() {\n        const disposable = this.connection.onError(e => this._errorSignal.emit(e));\n        this._disposables.push(disposable);\n        for (const method of Object.values(Method.ServerNotification)) {\n            const signal = this.serverNotifications[method];\n            const disposable = this.connection.onNotification(method, params => {\n                this.log(MessageKind.serverNotifiedClient, {\n                    method,\n                    message: params\n                });\n                signal.emit(params);\n            });\n            this._disposables.push(disposable);\n        }\n        for (const method of Object.values(Method.ClientNotification)) {\n            const signal = this.clientNotifications[method];\n            signal.connect((emitter, params) => {\n                this.log(MessageKind.clientNotifiedServer, {\n                    method,\n                    message: params\n                });\n                this.connection.sendNotification(method, params).catch(console.error);\n            });\n        }\n        this.clientRequests = this.constructClientRequestHandler(Method.ClientRequest);\n        this.serverRequests = this.constructServerRequestHandler(Method.ServerRequest);\n        this.serverRequests['client/registerCapability'].setHandler(async (params) => {\n            params.registrations.forEach((capabilityRegistration) => {\n                try {\n                    const updatedCapabilities = registerServerCapability(this.serverCapabilities, capabilityRegistration);\n                    if (updatedCapabilities === null) {\n                        console.error(`Failed to register server capability: ${capabilityRegistration}`);\n                        return;\n                    }\n                    this.serverCapabilities = updatedCapabilities;\n                }\n                catch (err) {\n                    console.error(err);\n                }\n            });\n        });\n        this.serverRequests['client/unregisterCapability'].setHandler(async (params) => {\n            params.unregisterations.forEach((capabilityUnregistration) => {\n                this.serverCapabilities = unregisterServerCapability(this.serverCapabilities, capabilityUnregistration);\n            });\n        });\n        this.serverRequests['workspace/configuration'].setHandler(async (params) => {\n            return params.items.map(item => {\n                // LSP: \"If the client can’t provide a configuration setting for a given scope\n                // then `null` needs to be present in the returned array.\"\n                // for now we do not support configuration, but yaml server does not respect\n                // client capability so we have a handler just for that\n                return null;\n            });\n        });\n    }\n    /**\n     * Send the document changed data to the server.\n     */\n    _sendChange(changeEvents, documentInfo) {\n        if (!this.isReady) {\n            return;\n        }\n        if (documentInfo.uri.length === 0) {\n            return;\n        }\n        if (!this.openedUris.get(documentInfo.uri)) {\n            this.sendOpen(documentInfo);\n        }\n        const textDocumentChange = {\n            textDocument: {\n                uri: documentInfo.uri,\n                version: documentInfo.version\n            },\n            contentChanges: changeEvents\n        };\n        this.connection\n            .sendNotification('textDocument/didChange', textDocumentChange)\n            .catch(console.error);\n        documentInfo.version++;\n    }\n}\n//# sourceMappingURL=connection.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { Signal } from '@lumino/signaling';\nimport { LSPConnection } from './connection';\nimport { expandDottedPaths, sleep, untilReady } from './utils';\n/**\n * Each Widget with a document (whether file or a notebook) has the same DocumentConnectionManager\n * (see JupyterLabWidgetAdapter). Using id_path instead of uri led to documents being overwritten\n * as two identical id_paths could be created for two different notebooks.\n */\nexport class DocumentConnectionManager {\n    constructor(options) {\n        /**\n         * Fired the first time a connection is opened. These _should_ be the only\n         * invocation of `.on` (once remaining LSPFeature.connection_handlers are made\n         * singletons).\n         */\n        this.onNewConnection = (connection) => {\n            const errorSignalSlot = (_, e) => {\n                console.error(e);\n                let error = e.length && e.length >= 1 ? e[0] : new Error();\n                if (error.message.indexOf('code = 1005') !== -1) {\n                    console.error(`Connection failed for ${connection}`);\n                    this._forEachDocumentOfConnection(connection, virtualDocument => {\n                        console.error('disconnecting ' + virtualDocument.uri);\n                        this._closed.emit({ connection, virtualDocument });\n                        this._ignoredLanguages.add(virtualDocument.language);\n                        console.error(`Cancelling further attempts to connect ${virtualDocument.uri} and other documents for this language (no support from the server)`);\n                    });\n                }\n                else if (error.message.indexOf('code = 1006') !== -1) {\n                    console.error('Connection closed by the server');\n                }\n                else {\n                    console.error('Connection error:', e);\n                }\n            };\n            connection.errorSignal.connect(errorSignalSlot);\n            const serverInitializedSlot = () => {\n                // Initialize using settings stored in the SettingRegistry\n                this._forEachDocumentOfConnection(connection, virtualDocument => {\n                    // TODO: is this still necessary, e.g. for status bar to update responsively?\n                    this._initialized.emit({ connection, virtualDocument });\n                });\n                this.updateServerConfigurations(this.initialConfigurations);\n            };\n            connection.serverInitialized.connect(serverInitializedSlot);\n            const closeSignalSlot = (_, closedManually) => {\n                if (!closedManually) {\n                    console.error('Connection unexpectedly disconnected');\n                }\n                else {\n                    console.log('Connection closed');\n                    this._forEachDocumentOfConnection(connection, virtualDocument => {\n                        this._closed.emit({ connection, virtualDocument });\n                    });\n                }\n            };\n            connection.closeSignal.connect(closeSignalSlot);\n        };\n        this._initialized = new Signal(this);\n        this._connected = new Signal(this);\n        this._disconnected = new Signal(this);\n        this._closed = new Signal(this);\n        this._documentsChanged = new Signal(this);\n        this.connections = new Map();\n        this.documents = new Map();\n        this.adapters = new Map();\n        this._ignoredLanguages = new Set();\n        this.languageServerManager = options.languageServerManager;\n        Private.setLanguageServerManager(options.languageServerManager);\n    }\n    /**\n     * Signal emitted when the manager is initialized.\n     */\n    get initialized() {\n        return this._initialized;\n    }\n    /**\n     * Signal emitted when the manager is connected to the server\n     */\n    get connected() {\n        return this._connected;\n    }\n    /**\n     * Connection temporarily lost or could not be fully established; a re-connection will be attempted;\n     */\n    get disconnected() {\n        return this._disconnected;\n    }\n    /**\n     * Connection was closed permanently and no-reconnection will be attempted, e.g.:\n     *  - there was a serious server error\n     *  - user closed the connection,\n     *  - re-connection attempts exceeded,\n     */\n    get closed() {\n        return this._closed;\n    }\n    /**\n     * Signal emitted when the document is changed.\n     */\n    get documentsChanged() {\n        return this._documentsChanged;\n    }\n    /**\n     * Promise resolved when the language server manager is ready.\n     */\n    get ready() {\n        return Private.getLanguageServerManager().ready;\n    }\n    /**\n     * Helper to connect various virtual document signal with callbacks of\n     * this class.\n     *\n     * @param  virtualDocument - virtual document to be connected.\n     */\n    connectDocumentSignals(virtualDocument) {\n        virtualDocument.foreignDocumentOpened.connect(this.onForeignDocumentOpened, this);\n        virtualDocument.foreignDocumentClosed.connect(this.onForeignDocumentClosed, this);\n        this.documents.set(virtualDocument.uri, virtualDocument);\n        this._documentsChanged.emit(this.documents);\n    }\n    /**\n     * Helper to disconnect various virtual document signal with callbacks of\n     * this class.\n     *\n     * @param  virtualDocument - virtual document to be disconnected.\n     */\n    disconnectDocumentSignals(virtualDocument, emit = true) {\n        virtualDocument.foreignDocumentOpened.disconnect(this.onForeignDocumentOpened, this);\n        virtualDocument.foreignDocumentClosed.disconnect(this.onForeignDocumentClosed, this);\n        this.documents.delete(virtualDocument.uri);\n        for (const foreign of virtualDocument.foreignDocuments.values()) {\n            this.disconnectDocumentSignals(foreign, false);\n        }\n        if (emit) {\n            this._documentsChanged.emit(this.documents);\n        }\n    }\n    /**\n     * Handle foreign document opened event.\n     */\n    onForeignDocumentOpened(_host, context) {\n        /** no-op */\n    }\n    /**\n     * Handle foreign document closed event.\n     */\n    onForeignDocumentClosed(_host, context) {\n        const { foreignDocument } = context;\n        this.unregisterDocument(foreignDocument.uri, false);\n        this.disconnectDocumentSignals(foreignDocument);\n    }\n    /**\n     * Register a widget adapter with this manager\n     *\n     * @param  path - path to the inner document of the adapter\n     * @param  adapter - the adapter to be registered\n     */\n    registerAdapter(path, adapter) {\n        this.adapters.set(path, adapter);\n        adapter.disposed.connect(() => {\n            if (adapter.virtualDocument) {\n                this.documents.delete(adapter.virtualDocument.uri);\n            }\n            this.adapters.delete(path);\n        });\n    }\n    /**\n     * Handles the settings that do not require an existing connection\n     * with a language server (or can influence to which server the\n     * connection will be created, e.g. `rank`).\n     *\n     * This function should be called **before** initialization of servers.\n     */\n    updateConfiguration(allServerSettings) {\n        this.languageServerManager.setConfiguration(allServerSettings);\n    }\n    /**\n     * Handles the settings that the language servers accept using\n     * `onDidChangeConfiguration` messages, which should be passed under\n     * the \"serverSettings\" keyword in the setting registry.\n     * Other configuration options are handled by `updateConfiguration` instead.\n     *\n     * This function should be called **after** initialization of servers.\n     */\n    updateServerConfigurations(allServerSettings) {\n        let languageServerId;\n        for (languageServerId in allServerSettings) {\n            if (!allServerSettings.hasOwnProperty(languageServerId)) {\n                continue;\n            }\n            const rawSettings = allServerSettings[languageServerId];\n            const parsedSettings = expandDottedPaths(rawSettings.configuration || {});\n            const serverSettings = {\n                settings: parsedSettings\n            };\n            Private.updateServerConfiguration(languageServerId, serverSettings);\n        }\n    }\n    /**\n     * Retry to connect to the server each `reconnectDelay` seconds\n     * and for `retrialsLeft` times.\n     * TODO: presently no longer referenced. A failing connection would close\n     * the socket, triggering the language server on the other end to exit.\n     */\n    async retryToConnect(options, reconnectDelay, retrialsLeft = -1) {\n        let { virtualDocument } = options;\n        if (this._ignoredLanguages.has(virtualDocument.language)) {\n            return;\n        }\n        let interval = reconnectDelay * 1000;\n        let success = false;\n        while (retrialsLeft !== 0 && !success) {\n            await this.connect(options)\n                .then(() => {\n                success = true;\n            })\n                .catch(e => {\n                console.warn(e);\n            });\n            console.log('will attempt to re-connect in ' + interval / 1000 + ' seconds');\n            await sleep(interval);\n            // gradually increase the time delay, up to 5 sec\n            interval = interval < 5 * 1000 ? interval + 500 : interval;\n        }\n    }\n    /**\n     * Disconnect the connection to the language server of the requested\n     * language.\n     */\n    disconnect(languageId) {\n        Private.disconnect(languageId);\n    }\n    /**\n     * Create a new connection to the language server\n     * @return A promise of the LSP connection\n     */\n    async connect(options, firstTimeoutSeconds = 30, secondTimeoutMinutes = 5) {\n        let connection = await this._connectSocket(options);\n        let { virtualDocument } = options;\n        if (!connection) {\n            return;\n        }\n        if (!connection.isReady) {\n            try {\n                // user feedback hinted that 40 seconds was too short and some users are willing to wait more;\n                // to make the best of both worlds we first check frequently (6.6 times a second) for the first\n                // 30 seconds, and show the warning early in case if something is wrong; we then continue retrying\n                // for another 5 minutes, but only once per second.\n                await untilReady(() => connection.isReady, Math.round((firstTimeoutSeconds * 1000) / 150), 150);\n            }\n            catch (_a) {\n                console.log(`Connection to ${virtualDocument.uri} timed out after ${firstTimeoutSeconds} seconds, will continue retrying for another ${secondTimeoutMinutes} minutes`);\n                try {\n                    await untilReady(() => connection.isReady, 60 * secondTimeoutMinutes, 1000);\n                }\n                catch (_b) {\n                    console.log(`Connection to ${virtualDocument.uri} timed out again after ${secondTimeoutMinutes} minutes, giving up`);\n                    return;\n                }\n            }\n        }\n        this._connected.emit({ connection, virtualDocument });\n        return connection;\n    }\n    /**\n     * Disconnect the signals of requested virtual document URI.\n     */\n    unregisterDocument(uri, emit = true) {\n        const connection = this.connections.get(uri);\n        if (connection) {\n            this.connections.delete(uri);\n            const allConnection = new Set(this.connections.values());\n            if (!allConnection.has(connection)) {\n                this.disconnect(connection.serverIdentifier);\n                connection.dispose();\n            }\n            if (emit) {\n                this._documentsChanged.emit(this.documents);\n            }\n        }\n    }\n    /**\n     * Enable or disable the logging of language server communication.\n     */\n    updateLogging(logAllCommunication, setTrace) {\n        for (const connection of this.connections.values()) {\n            connection.logAllCommunication = logAllCommunication;\n            if (setTrace !== null) {\n                connection.clientNotifications['$/setTrace'].emit({ value: setTrace });\n            }\n        }\n    }\n    /**\n     * Create the LSP connection for requested virtual document.\n     *\n     * @return  Return the promise of the LSP connection.\n     */\n    async _connectSocket(options) {\n        let { language, capabilities, virtualDocument } = options;\n        this.connectDocumentSignals(virtualDocument);\n        const uris = DocumentConnectionManager.solveUris(virtualDocument, language);\n        const matchingServers = this.languageServerManager.getMatchingServers({\n            language\n        });\n        // for now use only the server with the highest rank.\n        const languageServerId = matchingServers.length === 0 ? null : matchingServers[0];\n        // lazily load 1) the underlying library (1.5mb) and/or 2) a live WebSocket-\n        // like connection: either already connected or potentially in the process\n        // of connecting.\n        if (!uris) {\n            return;\n        }\n        const connection = await Private.connection(language, languageServerId, uris, this.onNewConnection, capabilities);\n        // if connecting for the first time, all documents subsequent documents will\n        // be re-opened and synced\n        this.connections.set(virtualDocument.uri, connection);\n        return connection;\n    }\n    /**\n     * Helper to apply callback on all documents of a connection.\n     */\n    _forEachDocumentOfConnection(connection, callback) {\n        for (const [virtualDocumentUri, currentConnection] of this.connections.entries()) {\n            if (connection !== currentConnection) {\n                continue;\n            }\n            callback(this.documents.get(virtualDocumentUri));\n        }\n    }\n}\n(function (DocumentConnectionManager) {\n    /**\n     * Generate the URI of a virtual document from input\n     *\n     * @param  virtualDocument - the virtual document\n     * @param  language - language of the document\n     */\n    function solveUris(virtualDocument, language) {\n        var _a;\n        const serverManager = Private.getLanguageServerManager();\n        const wsBase = serverManager.settings.wsUrl;\n        const rootUri = PageConfig.getOption('rootUri');\n        const virtualDocumentsUri = PageConfig.getOption('virtualDocumentsUri');\n        // for now take the best match only\n        const serverOptions = {\n            language\n        };\n        const matchingServers = serverManager.getMatchingServers(serverOptions);\n        const languageServerId = matchingServers.length === 0 ? null : matchingServers[0];\n        if (languageServerId === null) {\n            return;\n        }\n        const specs = serverManager.getMatchingSpecs(serverOptions);\n        const spec = specs.get(languageServerId);\n        if (!spec) {\n            console.warn(`Specification not available for server ${languageServerId}`);\n        }\n        const requiresOnDiskFiles = (_a = spec === null || spec === void 0 ? void 0 : spec.requires_documents_on_disk) !== null && _a !== void 0 ? _a : true;\n        const supportsInMemoryFiles = !requiresOnDiskFiles;\n        const baseUri = virtualDocument.hasLspSupportedFile || supportsInMemoryFiles\n            ? rootUri\n            : virtualDocumentsUri;\n        // workaround url-parse bug(s) (see https://github.com/jupyter-lsp/jupyterlab-lsp/issues/595)\n        let documentUri = URLExt.join(baseUri, virtualDocument.uri);\n        if (!documentUri.startsWith('file:///') &&\n            documentUri.startsWith('file://')) {\n            documentUri = documentUri.replace('file://', 'file:///');\n            if (documentUri.startsWith('file:///users/') &&\n                baseUri.startsWith('file:///Users/')) {\n                documentUri = documentUri.replace('file:///users/', 'file:///Users/');\n            }\n        }\n        return {\n            base: baseUri,\n            document: documentUri,\n            server: URLExt.join('ws://jupyter-lsp', language),\n            socket: URLExt.join(wsBase, 'lsp', 'ws', languageServerId)\n        };\n    }\n    DocumentConnectionManager.solveUris = solveUris;\n})(DocumentConnectionManager || (DocumentConnectionManager = {}));\n/**\n * Namespace primarily for language-keyed cache of LSPConnections\n */\nvar Private;\n(function (Private) {\n    const _connections = new Map();\n    let _languageServerManager;\n    function getLanguageServerManager() {\n        return _languageServerManager;\n    }\n    Private.getLanguageServerManager = getLanguageServerManager;\n    function setLanguageServerManager(languageServerManager) {\n        _languageServerManager = languageServerManager;\n    }\n    Private.setLanguageServerManager = setLanguageServerManager;\n    function disconnect(languageServerId) {\n        const connection = _connections.get(languageServerId);\n        if (connection) {\n            connection.close();\n            _connections.delete(languageServerId);\n        }\n    }\n    Private.disconnect = disconnect;\n    /**\n     * Return (or create and initialize) the WebSocket associated with the language\n     */\n    async function connection(language, languageServerId, uris, onCreate, capabilities) {\n        let connection = _connections.get(languageServerId);\n        if (!connection) {\n            const { settings } = Private.getLanguageServerManager();\n            const socket = new settings.WebSocket(uris.socket);\n            const connection = new LSPConnection({\n                languageId: language,\n                serverUri: uris.server,\n                rootUri: uris.base,\n                serverIdentifier: languageServerId,\n                capabilities: capabilities\n            });\n            _connections.set(languageServerId, connection);\n            connection.connect(socket);\n            onCreate(connection);\n        }\n        connection = _connections.get(languageServerId);\n        return connection;\n    }\n    Private.connection = connection;\n    function updateServerConfiguration(languageServerId, settings) {\n        const connection = _connections.get(languageServerId);\n        if (connection) {\n            connection.sendConfigurationChange(settings);\n        }\n    }\n    Private.updateServerConfiguration = updateServerConfiguration;\n})(Private || (Private = {}));\n//# sourceMappingURL=connection_manager.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * Compare two `IPosition` variable.\n *\n */\nexport function isEqual(self, other) {\n    return other && self.line === other.line && self.ch === other.ch;\n}\n/**\n * Given a list of line and an offset from the start, compute the corresponding\n * position in form of line and column number\n *\n * @param offset - number of spaces counted from the start of first line\n * @param  lines - list of lines to compute the position\n * @return  - the position of cursor\n */\nexport function positionAtOffset(offset, lines) {\n    let line = 0;\n    let column = 0;\n    for (let textLine of lines) {\n        // each line has a new line symbol which is accounted for in offset!\n        if (textLine.length + 1 <= offset) {\n            offset -= textLine.length + 1;\n            line += 1;\n        }\n        else {\n            column = offset;\n            break;\n        }\n    }\n    return { line, column };\n}\n/**\n * Given a list of line and position in form of line and column number,\n * compute the offset from the start of first line.\n * @param position - postion of cursor\n * @param  lines - list of lines to compute the position\n * @param linesIncludeBreaks - should count the line break as space?\n * return - offset number\n */\nexport function offsetAtPosition(position, lines, linesIncludeBreaks = false) {\n    let breakIncrement = linesIncludeBreaks ? 0 : 1;\n    let offset = 0;\n    for (let i = 0; i < lines.length; i++) {\n        let textLine = lines[i];\n        if (position.line > i) {\n            offset += textLine.length + breakIncrement;\n        }\n        else {\n            offset += position.column;\n            break;\n        }\n    }\n    return offset;\n}\nexport var ProtocolCoordinates;\n(function (ProtocolCoordinates) {\n    /**\n     * Check if the position is in the input range\n     *\n     * @param position - position in form of line and character number.\n     * @param  range - range in from of start and end position.\n     */\n    function isWithinRange(position, range) {\n        const { line, character } = position;\n        return (line >= range.start.line &&\n            line <= range.end.line &&\n            // need to be non-overlapping see https://github.com/jupyter-lsp/jupyterlab-lsp/issues/628\n            (line != range.start.line || character > range.start.character) &&\n            (line != range.end.line || character <= range.end.character));\n    }\n    ProtocolCoordinates.isWithinRange = isWithinRange;\n})(ProtocolCoordinates || (ProtocolCoordinates = {}));\n//# sourceMappingURL=positioning.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) 2018-2022 TypeFox GmbH (http://www.typefox.io). All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nimport { AbstractMessageWriter } from 'vscode-jsonrpc/lib/common/messageWriter';\r\nexport class WebSocketMessageWriter extends AbstractMessageWriter {\r\n    constructor(socket) {\r\n        super();\r\n        this.socket = socket;\r\n        this.errorCount = 0;\r\n    }\r\n    end() {\r\n    }\r\n    async write(msg) {\r\n        try {\r\n            const content = JSON.stringify(msg);\r\n            this.socket.send(content);\r\n        }\r\n        catch (e) {\r\n            this.errorCount++;\r\n            this.fireError(e, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=writer.js.map","export class ConsoleLogger {\r\n    error(message) {\r\n        console.error(message);\r\n    }\r\n    warn(message) {\r\n        console.warn(message);\r\n    }\r\n    info(message) {\r\n        console.info(message);\r\n    }\r\n    log(message) {\r\n        console.log(message);\r\n    }\r\n    debug(message) {\r\n        console.debug(message);\r\n    }\r\n}\r\n//# sourceMappingURL=logger.js.map","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n// Disclaimer/acknowledgement: Fragments are based on https://github.com/wylieconlon/lsp-editor-adapter,\n// which is copyright of wylieconlon and contributors and ISC licenced.\n// ISC licence is, quote, \"functionally equivalent to the simplified BSD and MIT licenses,\n// but without language deemed unnecessary following the Berne Convention.\" (Wikipedia).\n// Introduced modifications are BSD licenced, copyright JupyterLab development team.\nimport { ConsoleLogger, listen } from 'vscode-ws-jsonrpc';\nimport { Signal } from '@lumino/signaling';\nimport { registerServerCapability, unregisterServerCapability } from './server-capability-registration';\nexport class LspWsConnection {\n    constructor(options) {\n        /**\n         * Map to track opened virtual documents..\n         */\n        this.openedUris = new Map();\n        /**\n         * The connection is connected?\n         */\n        this._isConnected = false;\n        /**\n         * The connection is initialized?\n         */\n        this._isInitialized = false;\n        /**\n         * Array of LSP callback disposables, it is used to\n         * clear the callbacks when the connection is disposed.\n         */\n        this._disposables = [];\n        this._disposed = new Signal(this);\n        this._isDisposed = false;\n        this._rootUri = options.rootUri;\n    }\n    /**\n     * Is the language server is connected?\n     */\n    get isConnected() {\n        return this._isConnected;\n    }\n    /**\n     * Is the language server is initialized?\n     */\n    get isInitialized() {\n        return this._isInitialized;\n    }\n    /**\n     * Is the language server is connected and initialized?\n     */\n    get isReady() {\n        return this._isConnected && this._isInitialized;\n    }\n    /**\n     * A signal emitted when the connection is disposed.\n     */\n    get disposed() {\n        return this._disposed;\n    }\n    /**\n     * Check if the connection is disposed\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Initialize a connection over a web socket that speaks the LSP protocol\n     */\n    connect(socket) {\n        this.socket = socket;\n        listen({\n            webSocket: this.socket,\n            logger: new ConsoleLogger(),\n            onConnection: (connection) => {\n                connection.listen();\n                this._isConnected = true;\n                this.connection = connection;\n                this.sendInitialize();\n                const registerCapabilityDisposable = this.connection.onRequest('client/registerCapability', (params) => {\n                    params.registrations.forEach((capabilityRegistration) => {\n                        try {\n                            this.serverCapabilities = registerServerCapability(this.serverCapabilities, capabilityRegistration);\n                        }\n                        catch (err) {\n                            console.error(err);\n                        }\n                    });\n                });\n                this._disposables.push(registerCapabilityDisposable);\n                const unregisterCapabilityDisposable = this.connection.onRequest('client/unregisterCapability', (params) => {\n                    params.unregisterations.forEach((capabilityUnregistration) => {\n                        this.serverCapabilities = unregisterServerCapability(this.serverCapabilities, capabilityUnregistration);\n                    });\n                });\n                this._disposables.push(unregisterCapabilityDisposable);\n                const disposable = this.connection.onClose(() => {\n                    this._isConnected = false;\n                });\n                this._disposables.push(disposable);\n            }\n        });\n    }\n    /**\n     * Close the connection\n     */\n    close() {\n        if (this.connection) {\n            this.connection.dispose();\n        }\n        this.openedUris.clear();\n        this.socket.close();\n    }\n    /**\n     * The initialize request telling the server which options the client supports\n     */\n    sendInitialize() {\n        if (!this._isConnected) {\n            return;\n        }\n        this.openedUris.clear();\n        const message = this.initializeParams();\n        this.connection\n            .sendRequest('initialize', message)\n            .then(params => {\n            this.onServerInitialized(params);\n        }, e => {\n            console.warn('LSP websocket connection initialization failure', e);\n        });\n    }\n    /**\n     * Inform the server that the document was opened\n     */\n    sendOpen(documentInfo) {\n        const textDocumentMessage = {\n            textDocument: {\n                uri: documentInfo.uri,\n                languageId: documentInfo.languageId,\n                text: documentInfo.text,\n                version: documentInfo.version\n            }\n        };\n        this.connection\n            .sendNotification('textDocument/didOpen', textDocumentMessage)\n            .catch(console.error);\n        this.openedUris.set(documentInfo.uri, true);\n        this.sendChange(documentInfo);\n    }\n    /**\n     * Sends the full text of the document to the server\n     */\n    sendChange(documentInfo) {\n        if (!this.isReady) {\n            return;\n        }\n        if (!this.openedUris.get(documentInfo.uri)) {\n            this.sendOpen(documentInfo);\n            return;\n        }\n        const textDocumentChange = {\n            textDocument: {\n                uri: documentInfo.uri,\n                version: documentInfo.version\n            },\n            contentChanges: [{ text: documentInfo.text }]\n        };\n        this.connection\n            .sendNotification('textDocument/didChange', textDocumentChange)\n            .catch(console.error);\n        documentInfo.version++;\n    }\n    /**\n     * Send save notification to the server.\n     */\n    sendSaved(documentInfo) {\n        if (!this.isReady) {\n            return;\n        }\n        const textDocumentChange = {\n            textDocument: {\n                uri: documentInfo.uri,\n                version: documentInfo.version\n            },\n            text: documentInfo.text\n        };\n        this.connection\n            .sendNotification('textDocument/didSave', textDocumentChange)\n            .catch(console.error);\n    }\n    /**\n     * Send configuration change to the server.\n     */\n    sendConfigurationChange(settings) {\n        if (!this.isReady) {\n            return;\n        }\n        this.connection\n            .sendNotification('workspace/didChangeConfiguration', settings)\n            .catch(console.error);\n    }\n    /**\n     * Dispose the connection.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposables.forEach(disposable => {\n            disposable.dispose();\n        });\n        this._disposed.emit();\n        Signal.clearData(this);\n    }\n    /**\n     * Callback called when the server is initialized.\n     */\n    onServerInitialized(params) {\n        this._isInitialized = true;\n        this.serverCapabilities = params.capabilities;\n        this.connection.sendNotification('initialized', {}).catch(console.error);\n        this.connection\n            .sendNotification('workspace/didChangeConfiguration', {\n            settings: {}\n        })\n            .catch(console.error);\n    }\n    /**\n     * Initialization parameters to be sent to the language server.\n     * Subclasses should override this when adding more features.\n     */\n    initializeParams() {\n        return {\n            capabilities: {},\n            processId: null,\n            rootUri: this._rootUri,\n            workspaceFolders: null\n        };\n    }\n}\n//# sourceMappingURL=ws-connection.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) 2018-2022 TypeFox GmbH (http://www.typefox.io). All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nimport { createWebSocketConnection } from './socket';\r\n/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) 2018-2022 TypeFox GmbH (http://www.typefox.io). All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nimport { ConsoleLogger } from './logger';\r\nexport function listen(options) {\r\n    const { webSocket, onConnection } = options;\r\n    const logger = options.logger || new ConsoleLogger();\r\n    webSocket.onopen = () => {\r\n        const socket = toSocket(webSocket);\r\n        const connection = createWebSocketConnection(socket, logger);\r\n        onConnection(connection);\r\n    };\r\n}\r\nexport function toSocket(webSocket) {\r\n    return {\r\n        send: content => webSocket.send(content),\r\n        onMessage: cb => {\r\n            webSocket.onmessage = event => cb(event.data);\r\n        },\r\n        onError: cb => {\r\n            webSocket.onerror = event => {\r\n                if ('message' in event) {\r\n                    cb(event.message);\r\n                }\r\n            };\r\n        },\r\n        onClose: cb => {\r\n            webSocket.onclose = event => cb(event.code, event.reason);\r\n        },\r\n        dispose: () => webSocket.close()\r\n    };\r\n}\r\n//# sourceMappingURL=connection.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) 2018-2022 TypeFox GmbH (http://www.typefox.io). All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\nimport { createMessageConnection } from 'vscode-jsonrpc';\r\nimport { WebSocketMessageReader } from './reader';\r\nimport { WebSocketMessageWriter } from './writer';\r\nexport function createWebSocketConnection(socket, logger) {\r\n    const messageReader = new WebSocketMessageReader(socket);\r\n    const messageWriter = new WebSocketMessageWriter(socket);\r\n    const connection = createMessageConnection(messageReader, messageWriter, logger);\r\n    connection.onClose(() => connection.dispose());\r\n    return connection;\r\n}\r\n//# sourceMappingURL=connection.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * Manager for the code extractors\n */\nexport class CodeExtractorsManager {\n    constructor() {\n        this._extractorMap = new Map();\n        this._extractorMapAnyLanguage = new Map();\n    }\n    /**\n     * Get the extractors for the input cell type and the main language of\n     * the document\n     *\n     * @param  cellType - type of cell\n     * @param  hostLanguage - main language of the document\n     */\n    getExtractors(cellType, hostLanguage) {\n        var _a, _b;\n        if (hostLanguage) {\n            const currentMap = this._extractorMap.get(cellType);\n            if (!currentMap) {\n                return [];\n            }\n            return (_a = currentMap.get(hostLanguage)) !== null && _a !== void 0 ? _a : [];\n        }\n        else {\n            return (_b = this._extractorMapAnyLanguage.get(cellType)) !== null && _b !== void 0 ? _b : [];\n        }\n    }\n    /**\n     * Register an extractor to extract foreign code from host documents of specified language.\n     */\n    register(extractor, hostLanguage) {\n        const cellType = extractor.cellType;\n        if (hostLanguage) {\n            cellType.forEach(type => {\n                if (!this._extractorMap.has(type)) {\n                    this._extractorMap.set(type, new Map());\n                }\n                const currentMap = this._extractorMap.get(type);\n                const extractorList = currentMap.get(hostLanguage);\n                if (!extractorList) {\n                    currentMap.set(hostLanguage, [extractor]);\n                }\n                else {\n                    extractorList.push(extractor);\n                }\n            });\n        }\n        else {\n            cellType.forEach(type => {\n                if (!this._extractorMapAnyLanguage.has(type)) {\n                    this._extractorMapAnyLanguage.set(type, []);\n                }\n                this._extractorMapAnyLanguage.get(type).push(extractor);\n            });\n        }\n    }\n}\n//# sourceMappingURL=manager.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { positionAtOffset } from '../positioning';\n/**\n * The code extractor for the raw and markdown text.\n */\nexport class TextForeignCodeExtractor {\n    constructor(options) {\n        this.language = options.language;\n        this.standalone = options.isStandalone;\n        this.fileExtension = options.file_extension;\n        this.cellType = options.cellType;\n    }\n    /**\n     * Test if there is any foreign code in provided code snippet.\n     */\n    hasForeignCode(code, cellType) {\n        return this.cellType.includes(cellType);\n    }\n    /**\n     * Split the code into the host and foreign code (if any foreign code was detected)\n     */\n    extractForeignCode(code) {\n        let lines = code.split('\\n');\n        let extracts = new Array();\n        let foreignCodeFragment = code;\n        let start = positionAtOffset(0, lines);\n        let end = positionAtOffset(foreignCodeFragment.length, lines);\n        extracts.push({\n            hostCode: '',\n            foreignCode: foreignCodeFragment,\n            range: { start, end },\n            virtualShift: null\n        });\n        return extracts;\n    }\n}\n//# sourceMappingURL=text_extractor.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Signal } from '@lumino/signaling';\nimport mergeWith from 'lodash.mergewith';\n/**\n * Class to manager the registered features of the language servers.\n */\nexport class FeatureManager {\n    constructor() {\n        /**\n         * List of registered features\n         */\n        this.features = [];\n        this._featuresRegistered = new Signal(this);\n    }\n    /**\n     * Signal emitted when a new feature is registered.\n     */\n    get featuresRegistered() {\n        return this._featuresRegistered;\n    }\n    /**\n     * Register a new feature, skip if it is already registered.\n     */\n    register(feature) {\n        if (this.features.some(ft => ft.id === feature.id)) {\n            console.warn(`Feature with id ${feature.id} is already registered, skipping.`);\n        }\n        else {\n            this.features.push(feature);\n            this._featuresRegistered.emit(feature);\n        }\n    }\n    /**\n     * Get the capabilities of all clients.\n     */\n    clientCapabilities() {\n        let capabilities = {};\n        for (const feature of this.features) {\n            if (!feature.capabilities) {\n                continue;\n            }\n            capabilities = mergeWith(capabilities, feature.capabilities);\n        }\n        return capabilities;\n    }\n}\n//# sourceMappingURL=feature.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { Signal } from '@lumino/signaling';\nimport { ILanguageServerManager } from './tokens';\nimport { PromiseDelegate } from '@lumino/coreutils';\nexport class LanguageServerManager {\n    constructor(options) {\n        /**\n         * map of language server sessions.\n         */\n        this._sessions = new Map();\n        /**\n         * Map of language server specs.\n         */\n        this._specs = new Map();\n        /**\n         * Set of emitted warning message, message in this set will not be warned again.\n         */\n        this._warningsEmitted = new Set();\n        /**\n         * A promise resolved when this server manager is ready.\n         */\n        this._ready = new PromiseDelegate();\n        /**\n         * Signal emitted when a  language server session is changed\n         */\n        this._sessionsChanged = new Signal(this);\n        this._isDisposed = false;\n        /**\n         * Check if the manager is enabled or disabled\n         */\n        this._enabled = true;\n        this._settings = options.settings || ServerConnection.makeSettings();\n        this._baseUrl = options.baseUrl || PageConfig.getBaseUrl();\n        this._retries = options.retries || 2;\n        this._retriesInterval = options.retriesInterval || 10000;\n        this._statusCode = -1;\n        this._configuration = {};\n        this.fetchSessions().catch(e => console.log(e));\n    }\n    /**\n     * Check if the manager is enabled or disabled\n     */\n    get isEnabled() {\n        return this._enabled;\n    }\n    /**\n     * Check if the manager is disposed.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Get server connection settings.\n     */\n    get settings() {\n        return this._settings;\n    }\n    /**\n     * Get the language server specs.\n     */\n    get specs() {\n        return this._specs;\n    }\n    /**\n     * Get the status end point.\n     */\n    get statusUrl() {\n        return URLExt.join(this._baseUrl, ILanguageServerManager.URL_NS, 'status');\n    }\n    /**\n     * Signal emitted when a  language server session is changed\n     */\n    get sessionsChanged() {\n        return this._sessionsChanged;\n    }\n    /**\n     * Get the map of language server sessions.\n     */\n    get sessions() {\n        return this._sessions;\n    }\n    /**\n     * A promise resolved when this server manager is ready.\n     */\n    get ready() {\n        return this._ready.promise;\n    }\n    /**\n     * Get the status code of server's responses.\n     */\n    get statusCode() {\n        return this._statusCode;\n    }\n    /**\n     * Enable the language server services\n     */\n    async enable() {\n        this._enabled = true;\n        await this.fetchSessions();\n    }\n    /**\n     * Disable the language server services\n     */\n    disable() {\n        this._enabled = false;\n        this._sessions = new Map();\n        this._sessionsChanged.emit(void 0);\n    }\n    /**\n     * Dispose the manager.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        Signal.clearData(this);\n    }\n    /**\n     * Update the language server configuration.\n     */\n    setConfiguration(configuration) {\n        this._configuration = configuration;\n    }\n    /**\n     * Get matching language server for input language option.\n     */\n    getMatchingServers(options) {\n        if (!options.language) {\n            console.error('Cannot match server by language: language not available; ensure that kernel and specs provide language and MIME type');\n            return [];\n        }\n        const matchingSessionsKeys = [];\n        for (const [key, session] of this._sessions.entries()) {\n            if (this.isMatchingSpec(options, session.spec)) {\n                matchingSessionsKeys.push(key);\n            }\n        }\n        return matchingSessionsKeys.sort(this.compareRanks.bind(this));\n    }\n    /**\n     * Get matching language server spec for input language option.\n     */\n    getMatchingSpecs(options) {\n        const result = new Map();\n        for (const [key, specification] of this._specs.entries()) {\n            if (this.isMatchingSpec(options, specification)) {\n                result.set(key, specification);\n            }\n        }\n        return result;\n    }\n    /**\n     * Fetch the server session list from the status endpoint. The server\n     * manager is ready once this method finishes.\n     */\n    async fetchSessions() {\n        if (!this._enabled) {\n            return;\n        }\n        let response = await ServerConnection.makeRequest(this.statusUrl, { method: 'GET' }, this._settings);\n        this._statusCode = response.status;\n        if (!response.ok) {\n            if (this._retries > 0) {\n                this._retries -= 1;\n                setTimeout(this.fetchSessions.bind(this), this._retriesInterval);\n            }\n            else {\n                this._ready.resolve(undefined);\n                console.log('Missing jupyter_lsp server extension, skipping.');\n            }\n            return;\n        }\n        let sessions;\n        try {\n            const data = await response.json();\n            sessions = data.sessions;\n            try {\n                this.version = data.version;\n                this._specs = new Map(Object.entries(data.specs));\n            }\n            catch (err) {\n                console.warn(err);\n            }\n        }\n        catch (err) {\n            console.warn(err);\n            this._ready.resolve(undefined);\n            return;\n        }\n        for (let key of Object.keys(sessions)) {\n            let id = key;\n            if (this._sessions.has(id)) {\n                Object.assign(this._sessions.get(id) || {}, sessions[key]);\n            }\n            else {\n                this._sessions.set(id, sessions[key]);\n            }\n        }\n        const oldKeys = this._sessions.keys();\n        for (const oldKey in oldKeys) {\n            if (!sessions[oldKey]) {\n                let oldId = oldKey;\n                this._sessions.delete(oldId);\n            }\n        }\n        this._sessionsChanged.emit(void 0);\n        this._ready.resolve(undefined);\n    }\n    /**\n     * Check if input language option maths the language server spec.\n     */\n    isMatchingSpec(options, spec) {\n        // most things speak language\n        // if language is not known, it is guessed based on MIME type earlier\n        // so some language should be available by now (which can be not so obvious, e.g. \"plain\" for txt documents)\n        const lowerCaseLanguage = options.language.toLocaleLowerCase();\n        return spec.languages.some((language) => language.toLocaleLowerCase() == lowerCaseLanguage);\n    }\n    /**\n     * Helper function to warn a message only once.\n     */\n    warnOnce(arg) {\n        if (!this._warningsEmitted.has(arg)) {\n            this._warningsEmitted.add(arg);\n            console.warn(arg);\n        }\n    }\n    /**\n     * Compare the rank of two servers with the same language.\n     */\n    compareRanks(a, b) {\n        var _a, _b, _c, _d;\n        const DEFAULT_RANK = 50;\n        const aRank = (_b = (_a = this._configuration[a]) === null || _a === void 0 ? void 0 : _a.rank) !== null && _b !== void 0 ? _b : DEFAULT_RANK;\n        const bRank = (_d = (_c = this._configuration[b]) === null || _c === void 0 ? void 0 : _c.rank) !== null && _d !== void 0 ? _d : DEFAULT_RANK;\n        if (aRank == bRank) {\n            this.warnOnce(`Two matching servers: ${a} and ${b} have the same rank; choose which one to use by changing the rank in Advanced Settings Editor`);\n            return a.localeCompare(b);\n        }\n        // higher rank = higher in the list (descending order)\n        return bRank - aRank;\n    }\n}\n//# sourceMappingURL=manager.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Signal } from '@lumino/signaling';\nimport { DocumentConnectionManager } from '../connection_manager';\nimport { DefaultMap, untilReady } from '../utils';\n/**\n * Check if given position is within range.\n * Both start and end are inclusive.\n * @param position\n * @param range\n */\nexport function isWithinRange(position, range) {\n    if (range.start.line === range.end.line) {\n        return (position.line === range.start.line &&\n            position.column >= range.start.column &&\n            position.column <= range.end.column);\n    }\n    return ((position.line === range.start.line &&\n        position.column >= range.start.column &&\n        position.line < range.end.line) ||\n        (position.line > range.start.line &&\n            position.column <= range.end.column &&\n            position.line === range.end.line) ||\n        (position.line > range.start.line && position.line < range.end.line));\n}\n/**\n * A virtual implementation of IDocumentInfo\n */\nexport class VirtualDocumentInfo {\n    /**\n     * Creates an instance of VirtualDocumentInfo.\n     * @param document - the virtual document need to\n     * be wrapped.\n     */\n    constructor(document) {\n        /**\n         * Current version of the virtual document.\n         */\n        this.version = 0;\n        this._document = document;\n    }\n    /**\n     * Get the text content of the virtual document.\n     */\n    get text() {\n        return this._document.value;\n    }\n    /**\n     * Get the uri of the virtual document, if the document is not available,\n     * it returns an empty string, users need to check for the length of returned\n     * value before using it.\n     */\n    get uri() {\n        const uris = DocumentConnectionManager.solveUris(this._document, this.languageId);\n        if (!uris) {\n            return '';\n        }\n        return uris.document;\n    }\n    /**\n     * Get the language identifier of the document.\n     */\n    get languageId() {\n        return this._document.language;\n    }\n}\n/**\n *\n * A notebook can hold one or more virtual documents; there is always one,\n * \"root\" document, corresponding to the language of the kernel. All other\n * virtual documents are extracted out of the notebook, based on magics,\n * or other syntax constructs, depending on the kernel language.\n *\n * Virtual documents represent the underlying code in a single language,\n * which has been parsed excluding interactive kernel commands (magics)\n * which could be misunderstood by the specific LSP server.\n *\n * VirtualDocument has no awareness of the notebook or editor it lives in,\n * however it is able to transform its content back to the notebook space,\n * as it keeps editor coordinates for each virtual line.\n *\n * The notebook/editor aware transformations are preferred to be placed in\n * VirtualEditor descendants rather than here.\n *\n * No dependency on editor implementation (such as CodeMirrorEditor)\n * is allowed for VirtualEditor.\n */\nclass VirtualDocument {\n    constructor(options) {\n        /**\n         * Number of blank lines appended to the virtual document between\n         * each cell.\n         */\n        this.blankLinesBetweenCells = 2;\n        this._isDisposed = false;\n        this._foreignDocumentClosed = new Signal(this);\n        this._foreignDocumentOpened = new Signal(this);\n        this._changed = new Signal(this);\n        this.options = options;\n        this.path = this.options.path;\n        this.fileExtension = options.fileExtension;\n        this.hasLspSupportedFile = options.hasLspSupportedFile;\n        this.parent = options.parent;\n        this.language = options.language;\n        this.virtualLines = new Map();\n        this.sourceLines = new Map();\n        this.foreignDocuments = new Map();\n        this._editorToSourceLine = new Map();\n        this._foreignCodeExtractors = options.foreignCodeExtractors;\n        this.standalone = options.standalone || false;\n        this.instanceId = VirtualDocument.instancesCount;\n        VirtualDocument.instancesCount += 1;\n        this.unusedStandaloneDocuments = new DefaultMap(() => new Array());\n        this._remainingLifetime = 6;\n        this.unusedDocuments = new Set();\n        this.documentInfo = new VirtualDocumentInfo(this);\n        this.updateManager = new UpdateManager(this);\n        this.updateManager.updateBegan.connect(this._updateBeganSlot, this);\n        this.updateManager.blockAdded.connect(this._blockAddedSlot, this);\n        this.updateManager.updateFinished.connect(this._updateFinishedSlot, this);\n        this.clear();\n    }\n    /**\n     * Convert from code editor position into code mirror position.\n     */\n    static ceToCm(position) {\n        return { line: position.line, ch: position.column };\n    }\n    /**\n     * Test whether the document is disposed.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Signal emitted when the foreign document is closed\n     */\n    get foreignDocumentClosed() {\n        return this._foreignDocumentClosed;\n    }\n    /**\n     * Signal emitted when the foreign document is opened\n     */\n    get foreignDocumentOpened() {\n        return this._foreignDocumentOpened;\n    }\n    /**\n     * Signal emitted when the foreign document is changed\n     */\n    get changed() {\n        return this._changed;\n    }\n    /**\n     * Id of the virtual document.\n     */\n    get virtualId() {\n        // for easier debugging, the language information is included in the ID:\n        return this.standalone\n            ? this.instanceId + '(' + this.language + ')'\n            : this.language;\n    }\n    /**\n     * Return the ancestry to this document.\n     */\n    get ancestry() {\n        if (!this.parent) {\n            return [this];\n        }\n        return this.parent.ancestry.concat([this]);\n    }\n    /**\n     * Return the id path to the virtual document.\n     */\n    get idPath() {\n        if (!this.parent) {\n            return this.virtualId;\n        }\n        return this.parent.idPath + '-' + this.virtualId;\n    }\n    /**\n     * Get the uri of the virtual document.\n     */\n    get uri() {\n        const encodedPath = encodeURI(this.path);\n        if (!this.parent) {\n            return encodedPath;\n        }\n        return encodedPath + '.' + this.idPath + '.' + this.fileExtension;\n    }\n    /**\n     * Get the text value of the document\n     */\n    get value() {\n        let linesPadding = '\\n'.repeat(this.blankLinesBetweenCells);\n        return this.lineBlocks.join(linesPadding);\n    }\n    /**\n     * Get the last line in the virtual document\n     */\n    get lastLine() {\n        const linesInLastBlock = this.lineBlocks[this.lineBlocks.length - 1].split('\\n');\n        return linesInLastBlock[linesInLastBlock.length - 1];\n    }\n    /**\n     * Get the root document of current virtual document.\n     */\n    get root() {\n        return this.parent ? this.parent.root : this;\n    }\n    /**\n     * Dispose the virtual document.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this.parent = null;\n        this.closeAllForeignDocuments();\n        this.updateManager.dispose();\n        // clear all the maps\n        this.foreignDocuments.clear();\n        this.sourceLines.clear();\n        this.unusedDocuments.clear();\n        this.unusedStandaloneDocuments.clear();\n        this.virtualLines.clear();\n        // just to be sure - if anything is accessed after disposal (it should not) we\n        // will get altered by errors in the console AND this will limit memory leaks\n        this.documentInfo = null;\n        this.lineBlocks = null;\n        Signal.clearData(this);\n    }\n    /**\n     * Clear the virtual document and all related stuffs\n     */\n    clear() {\n        for (let document of this.foreignDocuments.values()) {\n            document.clear();\n        }\n        // TODO - deep clear (assure that there is no memory leak)\n        this.unusedStandaloneDocuments.clear();\n        this.unusedDocuments = new Set();\n        this.virtualLines.clear();\n        this.sourceLines.clear();\n        this.lastVirtualLine = 0;\n        this.lastSourceLine = 0;\n        this.lineBlocks = [];\n    }\n    /**\n     * Get the virtual document from the cursor position of the source\n     * document\n     * @param position - position in source document\n     */\n    documentAtSourcePosition(position) {\n        let sourceLine = this.sourceLines.get(position.line);\n        if (!sourceLine) {\n            return this;\n        }\n        let sourcePositionCe = {\n            line: sourceLine.editorLine,\n            column: position.ch\n        };\n        for (let [range, { virtualDocument: document }] of sourceLine.foreignDocumentsMap) {\n            if (isWithinRange(sourcePositionCe, range)) {\n                let sourcePositionCm = {\n                    line: sourcePositionCe.line - range.start.line,\n                    ch: sourcePositionCe.column - range.start.column\n                };\n                return document.documentAtSourcePosition(sourcePositionCm);\n            }\n        }\n        return this;\n    }\n    /**\n     * Detect if the input source position is belong to the current\n     * virtual document.\n     *\n     * @param sourcePosition - position in the source document\n     */\n    isWithinForeign(sourcePosition) {\n        let sourceLine = this.sourceLines.get(sourcePosition.line);\n        let sourcePositionCe = {\n            line: sourceLine.editorLine,\n            column: sourcePosition.ch\n        };\n        for (let [range] of sourceLine.foreignDocumentsMap) {\n            if (isWithinRange(sourcePositionCe, range)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Compute the position in root document from the position of\n     * a child editor.\n     *\n     * @param editor - the active editor.\n     * @param position - position in the active editor.\n     */\n    transformFromEditorToRoot(editor, position) {\n        if (!this._editorToSourceLine.has(editor)) {\n            console.log('Editor not found in _editorToSourceLine map');\n            return null;\n        }\n        let shift = this._editorToSourceLine.get(editor);\n        return {\n            ...position,\n            line: position.line + shift\n        };\n    }\n    /**\n     * Compute the position in the virtual document from the position\n     * if the source document.\n     *\n     * @param sourcePosition - position in source document\n     */\n    virtualPositionAtDocument(sourcePosition) {\n        let sourceLine = this.sourceLines.get(sourcePosition.line);\n        if (sourceLine == null) {\n            throw new Error('Source line not mapped to virtual position');\n        }\n        let virtualLine = sourceLine.virtualLine;\n        // position inside the cell (block)\n        let sourcePositionCe = {\n            line: sourceLine.editorLine,\n            column: sourcePosition.ch\n        };\n        for (let [range, content] of sourceLine.foreignDocumentsMap) {\n            const { virtualLine, virtualDocument: document } = content;\n            if (isWithinRange(sourcePositionCe, range)) {\n                // position inside the foreign document block\n                let sourcePositionCm = {\n                    line: sourcePositionCe.line - range.start.line,\n                    ch: sourcePositionCe.column - range.start.column\n                };\n                if (document.isWithinForeign(sourcePositionCm)) {\n                    return this.virtualPositionAtDocument(sourcePositionCm);\n                }\n                else {\n                    // where in this block in the entire foreign document?\n                    sourcePositionCm.line += virtualLine;\n                    return sourcePositionCm;\n                }\n            }\n        }\n        return {\n            ch: sourcePosition.ch,\n            line: virtualLine\n        };\n    }\n    /**\n     * Append a code block to the end of the virtual document.\n     *\n     * @param  block - block to be appended\n     * @param  editorShift - position shift in source\n     * document\n     * @param  [virtualShift] - position shift in\n     * virtual document.\n     */\n    appendCodeBlock(block, editorShift = { line: 0, column: 0 }, virtualShift) {\n        let cellCode = block.value;\n        let ceEditor = block.ceEditor;\n        if (this.isDisposed) {\n            console.warn('Cannot append code block: document disposed');\n            return;\n        }\n        let sourceCellLines = cellCode.split('\\n');\n        let { lines, foreignDocumentsMap } = this.prepareCodeBlock(block, editorShift);\n        for (let i = 0; i < lines.length; i++) {\n            this.virtualLines.set(this.lastVirtualLine + i, {\n                skipInspect: [],\n                editor: ceEditor,\n                // TODO this is incorrect, wont work if something was extracted\n                sourceLine: this.lastSourceLine + i\n            });\n        }\n        for (let i = 0; i < sourceCellLines.length; i++) {\n            this.sourceLines.set(this.lastSourceLine + i, {\n                editorLine: i,\n                editorShift: {\n                    line: editorShift.line - ((virtualShift === null || virtualShift === void 0 ? void 0 : virtualShift.line) || 0),\n                    column: i === 0 ? editorShift.column - ((virtualShift === null || virtualShift === void 0 ? void 0 : virtualShift.column) || 0) : 0\n                },\n                // TODO: move those to a new abstraction layer (DocumentBlock class)\n                editor: ceEditor,\n                foreignDocumentsMap,\n                // TODO this is incorrect, wont work if something was extracted\n                virtualLine: this.lastVirtualLine + i\n            });\n        }\n        this.lastVirtualLine += lines.length;\n        // one empty line is necessary to separate code blocks, next 'n' lines are to silence linters;\n        // the final cell does not get the additional lines (thanks to the use of join, see below)\n        this.lineBlocks.push(lines.join('\\n') + '\\n');\n        // adding the virtual lines for the blank lines\n        for (let i = 0; i < this.blankLinesBetweenCells; i++) {\n            this.virtualLines.set(this.lastVirtualLine + i, {\n                skipInspect: [this.idPath],\n                editor: ceEditor,\n                sourceLine: null\n            });\n        }\n        this.lastVirtualLine += this.blankLinesBetweenCells;\n        this.lastSourceLine += sourceCellLines.length;\n    }\n    /**\n     * Extract a code block into list of string in supported language and\n     * a map of foreign document if any.\n     * @param  block - block to be appended\n     * @param  editorShift - position shift in source document\n     */\n    prepareCodeBlock(block, editorShift = { line: 0, column: 0 }) {\n        let { cellCodeKept, foreignDocumentsMap } = this.extractForeignCode(block, editorShift);\n        let lines = cellCodeKept.split('\\n');\n        return { lines, foreignDocumentsMap };\n    }\n    /**\n     * Extract the foreign code from input block by using the registered\n     * extractors.\n     * @param  block - block to be appended\n     * @param  editorShift - position shift in source document\n     */\n    extractForeignCode(block, editorShift) {\n        let foreignDocumentsMap = new Map();\n        let cellCode = block.value;\n        const extractorsForAnyLang = this._foreignCodeExtractors.getExtractors(block.type, null);\n        const extractorsForCurrentLang = this._foreignCodeExtractors.getExtractors(block.type, this.language);\n        for (let extractor of [\n            ...extractorsForAnyLang,\n            ...extractorsForCurrentLang\n        ]) {\n            if (!extractor.hasForeignCode(cellCode, block.type)) {\n                continue;\n            }\n            let results = extractor.extractForeignCode(cellCode);\n            let keptCellCode = '';\n            for (let result of results) {\n                if (result.foreignCode !== null) {\n                    // result.range should only be null if result.foregin_code is null\n                    if (result.range === null) {\n                        console.log('Failure in foreign code extraction: `range` is null but `foreign_code` is not!');\n                        continue;\n                    }\n                    let foreignDocument = this.chooseForeignDocument(extractor);\n                    foreignDocumentsMap.set(result.range, {\n                        virtualLine: foreignDocument.lastVirtualLine,\n                        virtualDocument: foreignDocument,\n                        editor: block.ceEditor\n                    });\n                    let foreignShift = {\n                        line: editorShift.line + result.range.start.line,\n                        column: editorShift.column + result.range.start.column\n                    };\n                    foreignDocument.appendCodeBlock({\n                        value: result.foreignCode,\n                        ceEditor: block.ceEditor,\n                        type: 'code'\n                    }, foreignShift, result.virtualShift);\n                }\n                if (result.hostCode != null) {\n                    keptCellCode += result.hostCode;\n                }\n            }\n            // not breaking - many extractors are allowed to process the code, one after each other\n            // (think JS and CSS in HTML, or %R inside of %%timeit).\n            cellCode = keptCellCode;\n        }\n        return { cellCodeKept: cellCode, foreignDocumentsMap };\n    }\n    /**\n     * Close a foreign document and disconnect all associated signals\n     */\n    closeForeign(document) {\n        this._foreignDocumentClosed.emit({\n            foreignDocument: document,\n            parentHost: this\n        });\n        // remove it from foreign documents list\n        this.foreignDocuments.delete(document.virtualId);\n        // and delete the documents within it\n        document.closeAllForeignDocuments();\n        document.foreignDocumentClosed.disconnect(this.forwardClosedSignal, this);\n        document.foreignDocumentOpened.disconnect(this.forwardOpenedSignal, this);\n        document.dispose();\n    }\n    /**\n     * Close all foreign documents.\n     */\n    closeAllForeignDocuments() {\n        for (let document of this.foreignDocuments.values()) {\n            this.closeForeign(document);\n        }\n    }\n    /**\n     * Close all expired documents.\n     */\n    closeExpiredDocuments() {\n        for (let document of this.unusedDocuments.values()) {\n            document.remainingLifetime -= 1;\n            if (document.remainingLifetime <= 0) {\n                document.dispose();\n            }\n        }\n    }\n    /**\n     * Transform the position of the source to the editor\n     * position.\n     *\n     * @param  pos - position in the source document\n     * @return position in the editor.\n     */\n    transformSourceToEditor(pos) {\n        let sourceLine = this.sourceLines.get(pos.line);\n        let editorLine = sourceLine.editorLine;\n        let editorShift = sourceLine.editorShift;\n        return {\n            // only shift column in the line beginning the virtual document (first list of the editor in cell magics, but might be any line of editor in line magics!)\n            ch: pos.ch + (editorLine === 0 ? editorShift.column : 0),\n            line: editorLine + editorShift.line\n            // TODO or:\n            //  line: pos.line + editor_shift.line - this.first_line_of_the_block(editor)\n        };\n    }\n    /**\n     * Transform the position in the virtual document to the\n     * editor position.\n     * Can be null because some lines are added as padding/anchors\n     * to the virtual document and those do not exist in the source document\n     * and thus they are absent in the editor.\n     */\n    transformVirtualToEditor(virtualPosition) {\n        let sourcePosition = this.transformVirtualToSource(virtualPosition);\n        if (sourcePosition == null) {\n            return null;\n        }\n        return this.transformSourceToEditor(sourcePosition);\n    }\n    /**\n     * Transform the position in the virtual document to the source.\n     * Can be null because some lines are added as padding/anchors\n     * to the virtual document and those do not exist in the source document.\n     */\n    transformVirtualToSource(position) {\n        const line = this.virtualLines.get(position.line).sourceLine;\n        if (line == null) {\n            return null;\n        }\n        return {\n            ch: position.ch,\n            line: line\n        };\n    }\n    /**\n     * Get the corresponding editor of the virtual line.\n     */\n    getEditorAtVirtualLine(pos) {\n        let line = pos.line;\n        // tolerate overshot by one (the hanging blank line at the end)\n        if (!this.virtualLines.has(line)) {\n            line -= 1;\n        }\n        return this.virtualLines.get(line).editor;\n    }\n    /**\n     * Get the corresponding editor of the source line\n     */\n    getEditorAtSourceLine(pos) {\n        return this.sourceLines.get(pos.line).editor;\n    }\n    /**\n     * Recursively emits changed signal from the document or any descendant foreign document.\n     */\n    maybeEmitChanged() {\n        if (this.value !== this.previousValue) {\n            this._changed.emit(this);\n        }\n        this.previousValue = this.value;\n        for (let document of this.foreignDocuments.values()) {\n            document.maybeEmitChanged();\n        }\n    }\n    /**\n     * When this counter goes down to 0, the document will be destroyed and the associated connection will be closed;\n     * This is meant to reduce the number of open connections when a a foreign code snippet was removed from the document.\n     *\n     * Note: top level virtual documents are currently immortal (unless killed by other means); it might be worth\n     * implementing culling of unused documents, but if and only if JupyterLab will also implement culling of\n     * idle kernels - otherwise the user experience could be a bit inconsistent, and we would need to invent our own rules.\n     */\n    get remainingLifetime() {\n        if (!this.parent) {\n            return Infinity;\n        }\n        return this._remainingLifetime;\n    }\n    set remainingLifetime(value) {\n        if (this.parent) {\n            this._remainingLifetime = value;\n        }\n    }\n    /**\n     * Get the foreign document that can be opened with the input extractor.\n     */\n    chooseForeignDocument(extractor) {\n        let foreignDocument;\n        // if not standalone, try to append to existing document\n        let foreignExists = this.foreignDocuments.has(extractor.language);\n        if (!extractor.standalone && foreignExists) {\n            foreignDocument = this.foreignDocuments.get(extractor.language);\n        }\n        else {\n            // if (previous document does not exists) or (extractor produces standalone documents\n            // and no old standalone document could be reused): create a new document\n            foreignDocument = this.openForeign(extractor.language, extractor.standalone, extractor.fileExtension);\n        }\n        return foreignDocument;\n    }\n    /**\n     * Create a foreign document from input language and file extension.\n     *\n     * @param  language - the required language\n     * @param  standalone - the document type is supported natively by LSP?\n     * @param  fileExtension - File extension.\n     */\n    openForeign(language, standalone, fileExtension) {\n        let document = new VirtualDocument({\n            ...this.options,\n            parent: this,\n            standalone: standalone,\n            fileExtension: fileExtension,\n            language: language\n        });\n        const context = {\n            foreignDocument: document,\n            parentHost: this\n        };\n        this._foreignDocumentOpened.emit(context);\n        // pass through any future signals\n        document.foreignDocumentClosed.connect(this.forwardClosedSignal, this);\n        document.foreignDocumentOpened.connect(this.forwardOpenedSignal, this);\n        this.foreignDocuments.set(document.virtualId, document);\n        return document;\n    }\n    /**\n     * Forward the closed signal from the foreign document to the host document's\n     * signal\n     */\n    forwardClosedSignal(host, context) {\n        this._foreignDocumentClosed.emit(context);\n    }\n    /**\n     * Forward the opened signal from the foreign document to the host document's\n     * signal\n     */\n    forwardOpenedSignal(host, context) {\n        this._foreignDocumentOpened.emit(context);\n    }\n    /**\n     * Slot of the `updateBegan` signal.\n     */\n    _updateBeganSlot() {\n        this._editorToSourceLineNew = new Map();\n    }\n    /**\n     * Slot of the `blockAdded` signal.\n     */\n    _blockAddedSlot(updateManager, blockData) {\n        this._editorToSourceLineNew.set(blockData.block.ceEditor, blockData.virtualDocument.lastSourceLine);\n    }\n    /**\n     * Slot of the `updateFinished` signal.\n     */\n    _updateFinishedSlot() {\n        this._editorToSourceLine = this._editorToSourceLineNew;\n    }\n}\nVirtualDocument.instancesCount = 0;\nexport { VirtualDocument };\n/**\n * Create foreign documents if available from input virtual documents.\n * @param virtualDocument - the virtual document to be collected\n * @return - Set of generated foreign documents\n */\nexport function collectDocuments(virtualDocument) {\n    let collected = new Set();\n    collected.add(virtualDocument);\n    for (let foreign of virtualDocument.foreignDocuments.values()) {\n        let foreignLanguages = collectDocuments(foreign);\n        foreignLanguages.forEach(collected.add, collected);\n    }\n    return collected;\n}\nexport class UpdateManager {\n    constructor(virtualDocument) {\n        this.virtualDocument = virtualDocument;\n        this._isDisposed = false;\n        /**\n         * Promise resolved when the updating process finishes.\n         */\n        this._updateDone = new Promise(resolve => {\n            resolve();\n        });\n        /**\n         * Virtual documents update guard.\n         */\n        this._isUpdateInProgress = false;\n        /**\n         * Update lock to prevent multiple updates are applied at the same time.\n         */\n        this._updateLock = false;\n        this._blockAdded = new Signal(this);\n        this._documentUpdated = new Signal(this);\n        this._updateBegan = new Signal(this);\n        this._updateFinished = new Signal(this);\n        this.documentUpdated.connect(this._onUpdated, this);\n    }\n    /**\n     * Promise resolved when the updating process finishes.\n     */\n    get updateDone() {\n        return this._updateDone;\n    }\n    /**\n     * Test whether the document is disposed.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Signal emitted when a code block is added to the document.\n     */\n    get blockAdded() {\n        return this._blockAdded;\n    }\n    /**\n     * Signal emitted by the editor that triggered the update,\n     * providing the root document of the updated documents.\n     */\n    get documentUpdated() {\n        return this._documentUpdated;\n    }\n    /**\n     * Signal emitted when the update is started\n     */\n    get updateBegan() {\n        return this._updateBegan;\n    }\n    /**\n     * Signal emitted when the update is finished\n     */\n    get updateFinished() {\n        return this._updateFinished;\n    }\n    /**\n     * Dispose the class\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this.documentUpdated.disconnect(this._onUpdated);\n        Signal.clearData(this);\n    }\n    /**\n     * Execute provided callback within an update-locked context, which guarantees that:\n     *  - the previous updates must have finished before the callback call, and\n     *  - no update will happen when executing the callback\n     * @param fn - the callback to execute in update lock\n     */\n    async withUpdateLock(fn) {\n        await untilReady(() => this._canUpdate(), 12, 10).then(() => {\n            try {\n                this._updateLock = true;\n                fn();\n            }\n            finally {\n                this._updateLock = false;\n            }\n        });\n    }\n    /**\n     * Update all the virtual documents, emit documents updated with root document if succeeded,\n     * and resolve a void promise. The promise does not contain the text value of the root document,\n     * as to avoid an easy trap of ignoring the changes in the virtual documents.\n     */\n    async updateDocuments(blocks) {\n        let update = new Promise((resolve, reject) => {\n            // defer the update by up to 50 ms (10 retrials * 5 ms break),\n            // awaiting for the previous update to complete.\n            untilReady(() => this._canUpdate(), 10, 5)\n                .then(() => {\n                if (this.isDisposed || !this.virtualDocument) {\n                    resolve();\n                }\n                try {\n                    this._isUpdateInProgress = true;\n                    this._updateBegan.emit(blocks);\n                    this.virtualDocument.clear();\n                    for (let codeBlock of blocks) {\n                        this._blockAdded.emit({\n                            block: codeBlock,\n                            virtualDocument: this.virtualDocument\n                        });\n                        this.virtualDocument.appendCodeBlock(codeBlock);\n                    }\n                    this._updateFinished.emit(blocks);\n                    if (this.virtualDocument) {\n                        this._documentUpdated.emit(this.virtualDocument);\n                        this.virtualDocument.maybeEmitChanged();\n                    }\n                    resolve();\n                }\n                catch (e) {\n                    console.warn('Documents update failed:', e);\n                    reject(e);\n                }\n                finally {\n                    this._isUpdateInProgress = false;\n                }\n            })\n                .catch(console.error);\n        });\n        this._updateDone = update;\n        return update;\n    }\n    /**\n     * Once all the foreign documents were refreshed, the unused documents (and their connections)\n     * should be terminated if their lifetime has expired.\n     */\n    _onUpdated(manager, rootDocument) {\n        try {\n            rootDocument.closeExpiredDocuments();\n        }\n        catch (e) {\n            console.warn('Failed to close expired documents');\n        }\n    }\n    /**\n     * Check if the document can be updated.\n     */\n    _canUpdate() {\n        return !this.isDisposed && !this._isUpdateInProgress && !this._updateLock;\n    }\n}\n//# sourceMappingURL=document.js.map","/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeMax = Math.max,\n    nativeNow = Date.now;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * This method is like `_.merge` except that it accepts `customizer` which\n * is invoked to produce the merged values of the destination and source\n * properties. If `customizer` returns `undefined`, merging is handled by the\n * method instead. The `customizer` is invoked with six arguments:\n * (objValue, srcValue, key, object, source, stack).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   if (_.isArray(objValue)) {\n *     return objValue.concat(srcValue);\n *   }\n * }\n *\n * var object = { 'a': [1], 'b': [2] };\n * var other = { 'a': [3], 'b': [4] };\n *\n * _.mergeWith(object, other, customizer);\n * // => { 'a': [1, 3], 'b': [2, 4] }\n */\nvar mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n  baseMerge(object, source, srcIndex, customizer);\n});\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = mergeWith;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMessageConnection = exports.BrowserMessageWriter = exports.BrowserMessageReader = void 0;\nconst ril_1 = require(\"./ril\");\n// Install the browser runtime abstract.\nril_1.default.install();\nconst api_1 = require(\"../common/api\");\n__exportStar(require(\"../common/api\"), exports);\nclass BrowserMessageReader extends api_1.AbstractMessageReader {\n    constructor(port) {\n        super();\n        this._onData = new api_1.Emitter();\n        this._messageListener = (event) => {\n            this._onData.fire(event.data);\n        };\n        port.addEventListener('error', (event) => this.fireError(event));\n        port.onmessage = this._messageListener;\n    }\n    listen(callback) {\n        return this._onData.event(callback);\n    }\n}\nexports.BrowserMessageReader = BrowserMessageReader;\nclass BrowserMessageWriter extends api_1.AbstractMessageWriter {\n    constructor(port) {\n        super();\n        this.port = port;\n        this.errorCount = 0;\n        port.addEventListener('error', (event) => this.fireError(event));\n    }\n    write(msg) {\n        try {\n            this.port.postMessage(msg);\n            return Promise.resolve();\n        }\n        catch (error) {\n            this.handleError(error, msg);\n            return Promise.reject(error);\n        }\n    }\n    handleError(error, msg) {\n        this.errorCount++;\n        this.fireError(error, msg, this.errorCount);\n    }\n    end() {\n    }\n}\nexports.BrowserMessageWriter = BrowserMessageWriter;\nfunction createMessageConnection(reader, writer, logger, options) {\n    if (logger === undefined) {\n        logger = api_1.NullLogger;\n    }\n    if (api_1.ConnectionStrategy.is(options)) {\n        options = { connectionStrategy: options };\n    }\n    return (0, api_1.createMessageConnection)(reader, writer, logger, options);\n}\nexports.createMessageConnection = createMessageConnection;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst api_1 = require(\"../common/api\");\nclass MessageBuffer extends api_1.AbstractMessageBuffer {\n    constructor(encoding = 'utf-8') {\n        super(encoding);\n        this.asciiDecoder = new TextDecoder('ascii');\n    }\n    emptyBuffer() {\n        return MessageBuffer.emptyBuffer;\n    }\n    fromString(value, _encoding) {\n        return (new TextEncoder()).encode(value);\n    }\n    toString(value, encoding) {\n        if (encoding === 'ascii') {\n            return this.asciiDecoder.decode(value);\n        }\n        else {\n            return (new TextDecoder(encoding)).decode(value);\n        }\n    }\n    asNative(buffer, length) {\n        if (length === undefined) {\n            return buffer;\n        }\n        else {\n            return buffer.slice(0, length);\n        }\n    }\n    allocNative(length) {\n        return new Uint8Array(length);\n    }\n}\nMessageBuffer.emptyBuffer = new Uint8Array(0);\nclass ReadableStreamWrapper {\n    constructor(socket) {\n        this.socket = socket;\n        this._onData = new api_1.Emitter();\n        this._messageListener = (event) => {\n            const blob = event.data;\n            blob.arrayBuffer().then((buffer) => {\n                this._onData.fire(new Uint8Array(buffer));\n            }, () => {\n                (0, api_1.RAL)().console.error(`Converting blob to array buffer failed.`);\n            });\n        };\n        this.socket.addEventListener('message', this._messageListener);\n    }\n    onClose(listener) {\n        this.socket.addEventListener('close', listener);\n        return api_1.Disposable.create(() => this.socket.removeEventListener('close', listener));\n    }\n    onError(listener) {\n        this.socket.addEventListener('error', listener);\n        return api_1.Disposable.create(() => this.socket.removeEventListener('error', listener));\n    }\n    onEnd(listener) {\n        this.socket.addEventListener('end', listener);\n        return api_1.Disposable.create(() => this.socket.removeEventListener('end', listener));\n    }\n    onData(listener) {\n        return this._onData.event(listener);\n    }\n}\nclass WritableStreamWrapper {\n    constructor(socket) {\n        this.socket = socket;\n    }\n    onClose(listener) {\n        this.socket.addEventListener('close', listener);\n        return api_1.Disposable.create(() => this.socket.removeEventListener('close', listener));\n    }\n    onError(listener) {\n        this.socket.addEventListener('error', listener);\n        return api_1.Disposable.create(() => this.socket.removeEventListener('error', listener));\n    }\n    onEnd(listener) {\n        this.socket.addEventListener('end', listener);\n        return api_1.Disposable.create(() => this.socket.removeEventListener('end', listener));\n    }\n    write(data, encoding) {\n        if (typeof data === 'string') {\n            if (encoding !== undefined && encoding !== 'utf-8') {\n                throw new Error(`In a Browser environments only utf-8 text encoding is supported. But got encoding: ${encoding}`);\n            }\n            this.socket.send(data);\n        }\n        else {\n            this.socket.send(data);\n        }\n        return Promise.resolve();\n    }\n    end() {\n        this.socket.close();\n    }\n}\nconst _textEncoder = new TextEncoder();\nconst _ril = Object.freeze({\n    messageBuffer: Object.freeze({\n        create: (encoding) => new MessageBuffer(encoding)\n    }),\n    applicationJson: Object.freeze({\n        encoder: Object.freeze({\n            name: 'application/json',\n            encode: (msg, options) => {\n                if (options.charset !== 'utf-8') {\n                    throw new Error(`In a Browser environments only utf-8 text encoding is supported. But got encoding: ${options.charset}`);\n                }\n                return Promise.resolve(_textEncoder.encode(JSON.stringify(msg, undefined, 0)));\n            }\n        }),\n        decoder: Object.freeze({\n            name: 'application/json',\n            decode: (buffer, options) => {\n                if (!(buffer instanceof Uint8Array)) {\n                    throw new Error(`In a Browser environments only Uint8Arrays are supported.`);\n                }\n                return Promise.resolve(JSON.parse(new TextDecoder(options.charset).decode(buffer)));\n            }\n        })\n    }),\n    stream: Object.freeze({\n        asReadableStream: (socket) => new ReadableStreamWrapper(socket),\n        asWritableStream: (socket) => new WritableStreamWrapper(socket)\n    }),\n    console: console,\n    timer: Object.freeze({\n        setTimeout(callback, ms, ...args) {\n            const handle = setTimeout(callback, ms, ...args);\n            return { dispose: () => clearTimeout(handle) };\n        },\n        setImmediate(callback, ...args) {\n            const handle = setTimeout(callback, 0, ...args);\n            return { dispose: () => clearTimeout(handle) };\n        },\n        setInterval(callback, ms, ...args) {\n            const handle = setInterval(callback, ms, ...args);\n            return { dispose: () => clearInterval(handle) };\n        },\n    })\n});\nfunction RIL() {\n    return _ril;\n}\n(function (RIL) {\n    function install() {\n        api_1.RAL.install(_ril);\n    }\n    RIL.install = install;\n})(RIL || (RIL = {}));\nexports.default = RIL;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n/// <reference path=\"../../typings/thenable.d.ts\" />\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProgressType = exports.ProgressToken = exports.createMessageConnection = exports.NullLogger = exports.ConnectionOptions = exports.ConnectionStrategy = exports.AbstractMessageBuffer = exports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = exports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = exports.SharedArrayReceiverStrategy = exports.SharedArraySenderStrategy = exports.CancellationToken = exports.CancellationTokenSource = exports.Emitter = exports.Event = exports.Disposable = exports.LRUCache = exports.Touch = exports.LinkedMap = exports.ParameterStructures = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.ErrorCodes = exports.ResponseError = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType0 = exports.RequestType = exports.Message = exports.RAL = void 0;\nexports.MessageStrategy = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.TraceValues = exports.Trace = void 0;\nconst messages_1 = require(\"./messages\");\nObject.defineProperty(exports, \"Message\", { enumerable: true, get: function () { return messages_1.Message; } });\nObject.defineProperty(exports, \"RequestType\", { enumerable: true, get: function () { return messages_1.RequestType; } });\nObject.defineProperty(exports, \"RequestType0\", { enumerable: true, get: function () { return messages_1.RequestType0; } });\nObject.defineProperty(exports, \"RequestType1\", { enumerable: true, get: function () { return messages_1.RequestType1; } });\nObject.defineProperty(exports, \"RequestType2\", { enumerable: true, get: function () { return messages_1.RequestType2; } });\nObject.defineProperty(exports, \"RequestType3\", { enumerable: true, get: function () { return messages_1.RequestType3; } });\nObject.defineProperty(exports, \"RequestType4\", { enumerable: true, get: function () { return messages_1.RequestType4; } });\nObject.defineProperty(exports, \"RequestType5\", { enumerable: true, get: function () { return messages_1.RequestType5; } });\nObject.defineProperty(exports, \"RequestType6\", { enumerable: true, get: function () { return messages_1.RequestType6; } });\nObject.defineProperty(exports, \"RequestType7\", { enumerable: true, get: function () { return messages_1.RequestType7; } });\nObject.defineProperty(exports, \"RequestType8\", { enumerable: true, get: function () { return messages_1.RequestType8; } });\nObject.defineProperty(exports, \"RequestType9\", { enumerable: true, get: function () { return messages_1.RequestType9; } });\nObject.defineProperty(exports, \"ResponseError\", { enumerable: true, get: function () { return messages_1.ResponseError; } });\nObject.defineProperty(exports, \"ErrorCodes\", { enumerable: true, get: function () { return messages_1.ErrorCodes; } });\nObject.defineProperty(exports, \"NotificationType\", { enumerable: true, get: function () { return messages_1.NotificationType; } });\nObject.defineProperty(exports, \"NotificationType0\", { enumerable: true, get: function () { return messages_1.NotificationType0; } });\nObject.defineProperty(exports, \"NotificationType1\", { enumerable: true, get: function () { return messages_1.NotificationType1; } });\nObject.defineProperty(exports, \"NotificationType2\", { enumerable: true, get: function () { return messages_1.NotificationType2; } });\nObject.defineProperty(exports, \"NotificationType3\", { enumerable: true, get: function () { return messages_1.NotificationType3; } });\nObject.defineProperty(exports, \"NotificationType4\", { enumerable: true, get: function () { return messages_1.NotificationType4; } });\nObject.defineProperty(exports, \"NotificationType5\", { enumerable: true, get: function () { return messages_1.NotificationType5; } });\nObject.defineProperty(exports, \"NotificationType6\", { enumerable: true, get: function () { return messages_1.NotificationType6; } });\nObject.defineProperty(exports, \"NotificationType7\", { enumerable: true, get: function () { return messages_1.NotificationType7; } });\nObject.defineProperty(exports, \"NotificationType8\", { enumerable: true, get: function () { return messages_1.NotificationType8; } });\nObject.defineProperty(exports, \"NotificationType9\", { enumerable: true, get: function () { return messages_1.NotificationType9; } });\nObject.defineProperty(exports, \"ParameterStructures\", { enumerable: true, get: function () { return messages_1.ParameterStructures; } });\nconst linkedMap_1 = require(\"./linkedMap\");\nObject.defineProperty(exports, \"LinkedMap\", { enumerable: true, get: function () { return linkedMap_1.LinkedMap; } });\nObject.defineProperty(exports, \"LRUCache\", { enumerable: true, get: function () { return linkedMap_1.LRUCache; } });\nObject.defineProperty(exports, \"Touch\", { enumerable: true, get: function () { return linkedMap_1.Touch; } });\nconst disposable_1 = require(\"./disposable\");\nObject.defineProperty(exports, \"Disposable\", { enumerable: true, get: function () { return disposable_1.Disposable; } });\nconst events_1 = require(\"./events\");\nObject.defineProperty(exports, \"Event\", { enumerable: true, get: function () { return events_1.Event; } });\nObject.defineProperty(exports, \"Emitter\", { enumerable: true, get: function () { return events_1.Emitter; } });\nconst cancellation_1 = require(\"./cancellation\");\nObject.defineProperty(exports, \"CancellationTokenSource\", { enumerable: true, get: function () { return cancellation_1.CancellationTokenSource; } });\nObject.defineProperty(exports, \"CancellationToken\", { enumerable: true, get: function () { return cancellation_1.CancellationToken; } });\nconst sharedArrayCancellation_1 = require(\"./sharedArrayCancellation\");\nObject.defineProperty(exports, \"SharedArraySenderStrategy\", { enumerable: true, get: function () { return sharedArrayCancellation_1.SharedArraySenderStrategy; } });\nObject.defineProperty(exports, \"SharedArrayReceiverStrategy\", { enumerable: true, get: function () { return sharedArrayCancellation_1.SharedArrayReceiverStrategy; } });\nconst messageReader_1 = require(\"./messageReader\");\nObject.defineProperty(exports, \"MessageReader\", { enumerable: true, get: function () { return messageReader_1.MessageReader; } });\nObject.defineProperty(exports, \"AbstractMessageReader\", { enumerable: true, get: function () { return messageReader_1.AbstractMessageReader; } });\nObject.defineProperty(exports, \"ReadableStreamMessageReader\", { enumerable: true, get: function () { return messageReader_1.ReadableStreamMessageReader; } });\nconst messageWriter_1 = require(\"./messageWriter\");\nObject.defineProperty(exports, \"MessageWriter\", { enumerable: true, get: function () { return messageWriter_1.MessageWriter; } });\nObject.defineProperty(exports, \"AbstractMessageWriter\", { enumerable: true, get: function () { return messageWriter_1.AbstractMessageWriter; } });\nObject.defineProperty(exports, \"WriteableStreamMessageWriter\", { enumerable: true, get: function () { return messageWriter_1.WriteableStreamMessageWriter; } });\nconst messageBuffer_1 = require(\"./messageBuffer\");\nObject.defineProperty(exports, \"AbstractMessageBuffer\", { enumerable: true, get: function () { return messageBuffer_1.AbstractMessageBuffer; } });\nconst connection_1 = require(\"./connection\");\nObject.defineProperty(exports, \"ConnectionStrategy\", { enumerable: true, get: function () { return connection_1.ConnectionStrategy; } });\nObject.defineProperty(exports, \"ConnectionOptions\", { enumerable: true, get: function () { return connection_1.ConnectionOptions; } });\nObject.defineProperty(exports, \"NullLogger\", { enumerable: true, get: function () { return connection_1.NullLogger; } });\nObject.defineProperty(exports, \"createMessageConnection\", { enumerable: true, get: function () { return connection_1.createMessageConnection; } });\nObject.defineProperty(exports, \"ProgressToken\", { enumerable: true, get: function () { return connection_1.ProgressToken; } });\nObject.defineProperty(exports, \"ProgressType\", { enumerable: true, get: function () { return connection_1.ProgressType; } });\nObject.defineProperty(exports, \"Trace\", { enumerable: true, get: function () { return connection_1.Trace; } });\nObject.defineProperty(exports, \"TraceValues\", { enumerable: true, get: function () { return connection_1.TraceValues; } });\nObject.defineProperty(exports, \"TraceFormat\", { enumerable: true, get: function () { return connection_1.TraceFormat; } });\nObject.defineProperty(exports, \"SetTraceNotification\", { enumerable: true, get: function () { return connection_1.SetTraceNotification; } });\nObject.defineProperty(exports, \"LogTraceNotification\", { enumerable: true, get: function () { return connection_1.LogTraceNotification; } });\nObject.defineProperty(exports, \"ConnectionErrors\", { enumerable: true, get: function () { return connection_1.ConnectionErrors; } });\nObject.defineProperty(exports, \"ConnectionError\", { enumerable: true, get: function () { return connection_1.ConnectionError; } });\nObject.defineProperty(exports, \"CancellationReceiverStrategy\", { enumerable: true, get: function () { return connection_1.CancellationReceiverStrategy; } });\nObject.defineProperty(exports, \"CancellationSenderStrategy\", { enumerable: true, get: function () { return connection_1.CancellationSenderStrategy; } });\nObject.defineProperty(exports, \"CancellationStrategy\", { enumerable: true, get: function () { return connection_1.CancellationStrategy; } });\nObject.defineProperty(exports, \"MessageStrategy\", { enumerable: true, get: function () { return connection_1.MessageStrategy; } });\nconst ral_1 = require(\"./ral\");\nexports.RAL = ral_1.default;\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CancellationTokenSource = exports.CancellationToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nvar CancellationToken;\n(function (CancellationToken) {\n    CancellationToken.None = Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: events_1.Event.None\n    });\n    CancellationToken.Cancelled = Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: events_1.Event.None\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate === CancellationToken.None\n            || candidate === CancellationToken.Cancelled\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\n    }\n    CancellationToken.is = is;\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\nconst shortcutEvent = Object.freeze(function (callback, context) {\n    const handle = (0, ral_1.default)().timer.setTimeout(callback.bind(context), 0);\n    return { dispose() { handle.dispose(); } };\n});\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = new events_1.Emitter();\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = undefined;\n        }\n    }\n}\nclass CancellationTokenSource {\n    get token() {\n        if (!this._token) {\n            // be lazy and create the token only when\n            // actually needed\n            this._token = new MutableToken();\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            // save an object by returning the default\n            // cancelled token when cancellation happens\n            // before someone asks for the token\n            this._token = CancellationToken.Cancelled;\n        }\n        else {\n            this._token.cancel();\n        }\n    }\n    dispose() {\n        if (!this._token) {\n            // ensure to initialize with an empty token if we had none\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            // actually dispose\n            this._token.dispose();\n        }\n    }\n}\nexports.CancellationTokenSource = CancellationTokenSource;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMessageConnection = exports.ConnectionOptions = exports.MessageStrategy = exports.CancellationStrategy = exports.CancellationSenderStrategy = exports.CancellationReceiverStrategy = exports.RequestCancellationReceiverStrategy = exports.IdCancellationReceiverStrategy = exports.ConnectionStrategy = exports.ConnectionError = exports.ConnectionErrors = exports.LogTraceNotification = exports.SetTraceNotification = exports.TraceFormat = exports.TraceValues = exports.Trace = exports.NullLogger = exports.ProgressType = exports.ProgressToken = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst messages_1 = require(\"./messages\");\nconst linkedMap_1 = require(\"./linkedMap\");\nconst events_1 = require(\"./events\");\nconst cancellation_1 = require(\"./cancellation\");\nvar CancelNotification;\n(function (CancelNotification) {\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\n})(CancelNotification || (CancelNotification = {}));\nvar ProgressToken;\n(function (ProgressToken) {\n    function is(value) {\n        return typeof value === 'string' || typeof value === 'number';\n    }\n    ProgressToken.is = is;\n})(ProgressToken = exports.ProgressToken || (exports.ProgressToken = {}));\nvar ProgressNotification;\n(function (ProgressNotification) {\n    ProgressNotification.type = new messages_1.NotificationType('$/progress');\n})(ProgressNotification || (ProgressNotification = {}));\nclass ProgressType {\n    constructor() {\n    }\n}\nexports.ProgressType = ProgressType;\nvar StarRequestHandler;\n(function (StarRequestHandler) {\n    function is(value) {\n        return Is.func(value);\n    }\n    StarRequestHandler.is = is;\n})(StarRequestHandler || (StarRequestHandler = {}));\nexports.NullLogger = Object.freeze({\n    error: () => { },\n    warn: () => { },\n    info: () => { },\n    log: () => { }\n});\nvar Trace;\n(function (Trace) {\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\n    Trace[Trace[\"Compact\"] = 2] = \"Compact\";\n    Trace[Trace[\"Verbose\"] = 3] = \"Verbose\";\n})(Trace = exports.Trace || (exports.Trace = {}));\nvar TraceValues;\n(function (TraceValues) {\n    /**\n     * Turn tracing off.\n     */\n    TraceValues.Off = 'off';\n    /**\n     * Trace messages only.\n     */\n    TraceValues.Messages = 'messages';\n    /**\n     * Compact message tracing.\n     */\n    TraceValues.Compact = 'compact';\n    /**\n     * Verbose message tracing.\n     */\n    TraceValues.Verbose = 'verbose';\n})(TraceValues = exports.TraceValues || (exports.TraceValues = {}));\n(function (Trace) {\n    function fromString(value) {\n        if (!Is.string(value)) {\n            return Trace.Off;\n        }\n        value = value.toLowerCase();\n        switch (value) {\n            case 'off':\n                return Trace.Off;\n            case 'messages':\n                return Trace.Messages;\n            case 'compact':\n                return Trace.Compact;\n            case 'verbose':\n                return Trace.Verbose;\n            default:\n                return Trace.Off;\n        }\n    }\n    Trace.fromString = fromString;\n    function toString(value) {\n        switch (value) {\n            case Trace.Off:\n                return 'off';\n            case Trace.Messages:\n                return 'messages';\n            case Trace.Compact:\n                return 'compact';\n            case Trace.Verbose:\n                return 'verbose';\n            default:\n                return 'off';\n        }\n    }\n    Trace.toString = toString;\n})(Trace = exports.Trace || (exports.Trace = {}));\nvar TraceFormat;\n(function (TraceFormat) {\n    TraceFormat[\"Text\"] = \"text\";\n    TraceFormat[\"JSON\"] = \"json\";\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\n(function (TraceFormat) {\n    function fromString(value) {\n        if (!Is.string(value)) {\n            return TraceFormat.Text;\n        }\n        value = value.toLowerCase();\n        if (value === 'json') {\n            return TraceFormat.JSON;\n        }\n        else {\n            return TraceFormat.Text;\n        }\n    }\n    TraceFormat.fromString = fromString;\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\nvar SetTraceNotification;\n(function (SetTraceNotification) {\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTrace');\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\nvar LogTraceNotification;\n(function (LogTraceNotification) {\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTrace');\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\nvar ConnectionErrors;\n(function (ConnectionErrors) {\n    /**\n     * The connection is closed.\n     */\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\n    /**\n     * The connection got disposed.\n     */\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\n    /**\n     * The connection is already in listening mode.\n     */\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\nclass ConnectionError extends Error {\n    constructor(code, message) {\n        super(message);\n        this.code = code;\n        Object.setPrototypeOf(this, ConnectionError.prototype);\n    }\n}\nexports.ConnectionError = ConnectionError;\nvar ConnectionStrategy;\n(function (ConnectionStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.cancelUndispatched);\n    }\n    ConnectionStrategy.is = is;\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\nvar IdCancellationReceiverStrategy;\n(function (IdCancellationReceiverStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (candidate.kind === undefined || candidate.kind === 'id') && Is.func(candidate.createCancellationTokenSource) && (candidate.dispose === undefined || Is.func(candidate.dispose));\n    }\n    IdCancellationReceiverStrategy.is = is;\n})(IdCancellationReceiverStrategy = exports.IdCancellationReceiverStrategy || (exports.IdCancellationReceiverStrategy = {}));\nvar RequestCancellationReceiverStrategy;\n(function (RequestCancellationReceiverStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && candidate.kind === 'request' && Is.func(candidate.createCancellationTokenSource) && (candidate.dispose === undefined || Is.func(candidate.dispose));\n    }\n    RequestCancellationReceiverStrategy.is = is;\n})(RequestCancellationReceiverStrategy = exports.RequestCancellationReceiverStrategy || (exports.RequestCancellationReceiverStrategy = {}));\nvar CancellationReceiverStrategy;\n(function (CancellationReceiverStrategy) {\n    CancellationReceiverStrategy.Message = Object.freeze({\n        createCancellationTokenSource(_) {\n            return new cancellation_1.CancellationTokenSource();\n        }\n    });\n    function is(value) {\n        return IdCancellationReceiverStrategy.is(value) || RequestCancellationReceiverStrategy.is(value);\n    }\n    CancellationReceiverStrategy.is = is;\n})(CancellationReceiverStrategy = exports.CancellationReceiverStrategy || (exports.CancellationReceiverStrategy = {}));\nvar CancellationSenderStrategy;\n(function (CancellationSenderStrategy) {\n    CancellationSenderStrategy.Message = Object.freeze({\n        sendCancellation(conn, id) {\n            return conn.sendNotification(CancelNotification.type, { id });\n        },\n        cleanup(_) { }\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.sendCancellation) && Is.func(candidate.cleanup);\n    }\n    CancellationSenderStrategy.is = is;\n})(CancellationSenderStrategy = exports.CancellationSenderStrategy || (exports.CancellationSenderStrategy = {}));\nvar CancellationStrategy;\n(function (CancellationStrategy) {\n    CancellationStrategy.Message = Object.freeze({\n        receiver: CancellationReceiverStrategy.Message,\n        sender: CancellationSenderStrategy.Message\n    });\n    function is(value) {\n        const candidate = value;\n        return candidate && CancellationReceiverStrategy.is(candidate.receiver) && CancellationSenderStrategy.is(candidate.sender);\n    }\n    CancellationStrategy.is = is;\n})(CancellationStrategy = exports.CancellationStrategy || (exports.CancellationStrategy = {}));\nvar MessageStrategy;\n(function (MessageStrategy) {\n    function is(value) {\n        const candidate = value;\n        return candidate && Is.func(candidate.handleMessage);\n    }\n    MessageStrategy.is = is;\n})(MessageStrategy = exports.MessageStrategy || (exports.MessageStrategy = {}));\nvar ConnectionOptions;\n(function (ConnectionOptions) {\n    function is(value) {\n        const candidate = value;\n        return candidate && (CancellationStrategy.is(candidate.cancellationStrategy) || ConnectionStrategy.is(candidate.connectionStrategy) || MessageStrategy.is(candidate.messageStrategy));\n    }\n    ConnectionOptions.is = is;\n})(ConnectionOptions = exports.ConnectionOptions || (exports.ConnectionOptions = {}));\nvar ConnectionState;\n(function (ConnectionState) {\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\n})(ConnectionState || (ConnectionState = {}));\nfunction createMessageConnection(messageReader, messageWriter, _logger, options) {\n    const logger = _logger !== undefined ? _logger : exports.NullLogger;\n    let sequenceNumber = 0;\n    let notificationSequenceNumber = 0;\n    let unknownResponseSequenceNumber = 0;\n    const version = '2.0';\n    let starRequestHandler = undefined;\n    const requestHandlers = new Map();\n    let starNotificationHandler = undefined;\n    const notificationHandlers = new Map();\n    const progressHandlers = new Map();\n    let timer;\n    let messageQueue = new linkedMap_1.LinkedMap();\n    let responsePromises = new Map();\n    let knownCanceledRequests = new Set();\n    let requestTokens = new Map();\n    let trace = Trace.Off;\n    let traceFormat = TraceFormat.Text;\n    let tracer;\n    let state = ConnectionState.New;\n    const errorEmitter = new events_1.Emitter();\n    const closeEmitter = new events_1.Emitter();\n    const unhandledNotificationEmitter = new events_1.Emitter();\n    const unhandledProgressEmitter = new events_1.Emitter();\n    const disposeEmitter = new events_1.Emitter();\n    const cancellationStrategy = (options && options.cancellationStrategy) ? options.cancellationStrategy : CancellationStrategy.Message;\n    function createRequestQueueKey(id) {\n        if (id === null) {\n            throw new Error(`Can't send requests with id null since the response can't be correlated.`);\n        }\n        return 'req-' + id.toString();\n    }\n    function createResponseQueueKey(id) {\n        if (id === null) {\n            return 'res-unknown-' + (++unknownResponseSequenceNumber).toString();\n        }\n        else {\n            return 'res-' + id.toString();\n        }\n    }\n    function createNotificationQueueKey() {\n        return 'not-' + (++notificationSequenceNumber).toString();\n    }\n    function addMessageToQueue(queue, message) {\n        if (messages_1.Message.isRequest(message)) {\n            queue.set(createRequestQueueKey(message.id), message);\n        }\n        else if (messages_1.Message.isResponse(message)) {\n            queue.set(createResponseQueueKey(message.id), message);\n        }\n        else {\n            queue.set(createNotificationQueueKey(), message);\n        }\n    }\n    function cancelUndispatched(_message) {\n        return undefined;\n    }\n    function isListening() {\n        return state === ConnectionState.Listening;\n    }\n    function isClosed() {\n        return state === ConnectionState.Closed;\n    }\n    function isDisposed() {\n        return state === ConnectionState.Disposed;\n    }\n    function closeHandler() {\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\n            state = ConnectionState.Closed;\n            closeEmitter.fire(undefined);\n        }\n        // If the connection is disposed don't sent close events.\n    }\n    function readErrorHandler(error) {\n        errorEmitter.fire([error, undefined, undefined]);\n    }\n    function writeErrorHandler(data) {\n        errorEmitter.fire(data);\n    }\n    messageReader.onClose(closeHandler);\n    messageReader.onError(readErrorHandler);\n    messageWriter.onClose(closeHandler);\n    messageWriter.onError(writeErrorHandler);\n    function triggerMessageQueue() {\n        if (timer || messageQueue.size === 0) {\n            return;\n        }\n        timer = (0, ral_1.default)().timer.setImmediate(() => {\n            timer = undefined;\n            processMessageQueue();\n        });\n    }\n    function handleMessage(message) {\n        if (messages_1.Message.isRequest(message)) {\n            handleRequest(message);\n        }\n        else if (messages_1.Message.isNotification(message)) {\n            handleNotification(message);\n        }\n        else if (messages_1.Message.isResponse(message)) {\n            handleResponse(message);\n        }\n        else {\n            handleInvalidMessage(message);\n        }\n    }\n    function processMessageQueue() {\n        if (messageQueue.size === 0) {\n            return;\n        }\n        const message = messageQueue.shift();\n        try {\n            const messageStrategy = options?.messageStrategy;\n            if (MessageStrategy.is(messageStrategy)) {\n                messageStrategy.handleMessage(message, handleMessage);\n            }\n            else {\n                handleMessage(message);\n            }\n        }\n        finally {\n            triggerMessageQueue();\n        }\n    }\n    const callback = (message) => {\n        try {\n            // We have received a cancellation message. Check if the message is still in the queue\n            // and cancel it if allowed to do so.\n            if (messages_1.Message.isNotification(message) && message.method === CancelNotification.type.method) {\n                const cancelId = message.params.id;\n                const key = createRequestQueueKey(cancelId);\n                const toCancel = messageQueue.get(key);\n                if (messages_1.Message.isRequest(toCancel)) {\n                    const strategy = options?.connectionStrategy;\n                    const response = (strategy && strategy.cancelUndispatched) ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\n                    if (response && (response.error !== undefined || response.result !== undefined)) {\n                        messageQueue.delete(key);\n                        requestTokens.delete(cancelId);\n                        response.id = toCancel.id;\n                        traceSendingResponse(response, message.method, Date.now());\n                        messageWriter.write(response).catch(() => logger.error(`Sending response for canceled message failed.`));\n                        return;\n                    }\n                }\n                const cancellationToken = requestTokens.get(cancelId);\n                // The request is already running. Cancel the token\n                if (cancellationToken !== undefined) {\n                    cancellationToken.cancel();\n                    traceReceivedNotification(message);\n                    return;\n                }\n                else {\n                    // Remember the cancel but still queue the message to\n                    // clean up state in process message.\n                    knownCanceledRequests.add(cancelId);\n                }\n            }\n            addMessageToQueue(messageQueue, message);\n        }\n        finally {\n            triggerMessageQueue();\n        }\n    };\n    function handleRequest(requestMessage) {\n        if (isDisposed()) {\n            // we return here silently since we fired an event when the\n            // connection got disposed.\n            return;\n        }\n        function reply(resultOrError, method, startTime) {\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id\n            };\n            if (resultOrError instanceof messages_1.ResponseError) {\n                message.error = resultOrError.toJson();\n            }\n            else {\n                message.result = resultOrError === undefined ? null : resultOrError;\n            }\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));\n        }\n        function replyError(error, method, startTime) {\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id,\n                error: error.toJson()\n            };\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));\n        }\n        function replySuccess(result, method, startTime) {\n            // The JSON RPC defines that a response must either have a result or an error\n            // So we can't treat undefined as a valid response result.\n            if (result === undefined) {\n                result = null;\n            }\n            const message = {\n                jsonrpc: version,\n                id: requestMessage.id,\n                result: result\n            };\n            traceSendingResponse(message, method, startTime);\n            messageWriter.write(message).catch(() => logger.error(`Sending response failed.`));\n        }\n        traceReceivedRequest(requestMessage);\n        const element = requestHandlers.get(requestMessage.method);\n        let type;\n        let requestHandler;\n        if (element) {\n            type = element.type;\n            requestHandler = element.handler;\n        }\n        const startTime = Date.now();\n        if (requestHandler || starRequestHandler) {\n            const tokenKey = requestMessage.id ?? String(Date.now()); //\n            const cancellationSource = IdCancellationReceiverStrategy.is(cancellationStrategy.receiver)\n                ? cancellationStrategy.receiver.createCancellationTokenSource(tokenKey)\n                : cancellationStrategy.receiver.createCancellationTokenSource(requestMessage);\n            if (requestMessage.id !== null && knownCanceledRequests.has(requestMessage.id)) {\n                cancellationSource.cancel();\n            }\n            if (requestMessage.id !== null) {\n                requestTokens.set(tokenKey, cancellationSource);\n            }\n            try {\n                let handlerResult;\n                if (requestHandler) {\n                    if (requestMessage.params === undefined) {\n                        if (type !== undefined && type.numberOfParams !== 0) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines ${type.numberOfParams} params but received none.`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(cancellationSource.token);\n                    }\n                    else if (Array.isArray(requestMessage.params)) {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byName) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by name but received parameters by position`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(...requestMessage.params, cancellationSource.token);\n                    }\n                    else {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InvalidParams, `Request ${requestMessage.method} defines parameters by position but received parameters by name`), requestMessage.method, startTime);\n                            return;\n                        }\n                        handlerResult = requestHandler(requestMessage.params, cancellationSource.token);\n                    }\n                }\n                else if (starRequestHandler) {\n                    handlerResult = starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\n                }\n                const promise = handlerResult;\n                if (!handlerResult) {\n                    requestTokens.delete(tokenKey);\n                    replySuccess(handlerResult, requestMessage.method, startTime);\n                }\n                else if (promise.then) {\n                    promise.then((resultOrError) => {\n                        requestTokens.delete(tokenKey);\n                        reply(resultOrError, requestMessage.method, startTime);\n                    }, error => {\n                        requestTokens.delete(tokenKey);\n                        if (error instanceof messages_1.ResponseError) {\n                            replyError(error, requestMessage.method, startTime);\n                        }\n                        else if (error && Is.string(error.message)) {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\n                        }\n                        else {\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\n                        }\n                    });\n                }\n                else {\n                    requestTokens.delete(tokenKey);\n                    reply(handlerResult, requestMessage.method, startTime);\n                }\n            }\n            catch (error) {\n                requestTokens.delete(tokenKey);\n                if (error instanceof messages_1.ResponseError) {\n                    reply(error, requestMessage.method, startTime);\n                }\n                else if (error && Is.string(error.message)) {\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\n                }\n                else {\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\n                }\n            }\n        }\n        else {\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);\n        }\n    }\n    function handleResponse(responseMessage) {\n        if (isDisposed()) {\n            // See handle request.\n            return;\n        }\n        if (responseMessage.id === null) {\n            if (responseMessage.error) {\n                logger.error(`Received response message without id: Error is: \\n${JSON.stringify(responseMessage.error, undefined, 4)}`);\n            }\n            else {\n                logger.error(`Received response message without id. No further error information provided.`);\n            }\n        }\n        else {\n            const key = responseMessage.id;\n            const responsePromise = responsePromises.get(key);\n            traceReceivedResponse(responseMessage, responsePromise);\n            if (responsePromise !== undefined) {\n                responsePromises.delete(key);\n                try {\n                    if (responseMessage.error) {\n                        const error = responseMessage.error;\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\n                    }\n                    else if (responseMessage.result !== undefined) {\n                        responsePromise.resolve(responseMessage.result);\n                    }\n                    else {\n                        throw new Error('Should never happen.');\n                    }\n                }\n                catch (error) {\n                    if (error.message) {\n                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);\n                    }\n                    else {\n                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);\n                    }\n                }\n            }\n        }\n    }\n    function handleNotification(message) {\n        if (isDisposed()) {\n            // See handle request.\n            return;\n        }\n        let type = undefined;\n        let notificationHandler;\n        if (message.method === CancelNotification.type.method) {\n            const cancelId = message.params.id;\n            knownCanceledRequests.delete(cancelId);\n            traceReceivedNotification(message);\n            return;\n        }\n        else {\n            const element = notificationHandlers.get(message.method);\n            if (element) {\n                notificationHandler = element.handler;\n                type = element.type;\n            }\n        }\n        if (notificationHandler || starNotificationHandler) {\n            try {\n                traceReceivedNotification(message);\n                if (notificationHandler) {\n                    if (message.params === undefined) {\n                        if (type !== undefined) {\n                            if (type.numberOfParams !== 0 && type.parameterStructures !== messages_1.ParameterStructures.byName) {\n                                logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but received none.`);\n                            }\n                        }\n                        notificationHandler();\n                    }\n                    else if (Array.isArray(message.params)) {\n                        // There are JSON-RPC libraries that send progress message as positional params although\n                        // specified as named. So convert them if this is the case.\n                        const params = message.params;\n                        if (message.method === ProgressNotification.type.method && params.length === 2 && ProgressToken.is(params[0])) {\n                            notificationHandler({ token: params[0], value: params[1] });\n                        }\n                        else {\n                            if (type !== undefined) {\n                                if (type.parameterStructures === messages_1.ParameterStructures.byName) {\n                                    logger.error(`Notification ${message.method} defines parameters by name but received parameters by position`);\n                                }\n                                if (type.numberOfParams !== message.params.length) {\n                                    logger.error(`Notification ${message.method} defines ${type.numberOfParams} params but received ${params.length} arguments`);\n                                }\n                            }\n                            notificationHandler(...params);\n                        }\n                    }\n                    else {\n                        if (type !== undefined && type.parameterStructures === messages_1.ParameterStructures.byPosition) {\n                            logger.error(`Notification ${message.method} defines parameters by position but received parameters by name`);\n                        }\n                        notificationHandler(message.params);\n                    }\n                }\n                else if (starNotificationHandler) {\n                    starNotificationHandler(message.method, message.params);\n                }\n            }\n            catch (error) {\n                if (error.message) {\n                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);\n                }\n                else {\n                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);\n                }\n            }\n        }\n        else {\n            unhandledNotificationEmitter.fire(message);\n        }\n    }\n    function handleInvalidMessage(message) {\n        if (!message) {\n            logger.error('Received empty message.');\n            return;\n        }\n        logger.error(`Received message which is neither a response nor a notification message:\\n${JSON.stringify(message, null, 4)}`);\n        // Test whether we find an id to reject the promise\n        const responseMessage = message;\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\n            const key = responseMessage.id;\n            const responseHandler = responsePromises.get(key);\n            if (responseHandler) {\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\n            }\n        }\n    }\n    function stringifyTrace(params) {\n        if (params === undefined || params === null) {\n            return undefined;\n        }\n        switch (trace) {\n            case Trace.Verbose:\n                return JSON.stringify(params, null, 4);\n            case Trace.Compact:\n                return JSON.stringify(params);\n            default:\n                return undefined;\n        }\n    }\n    function traceSendingRequest(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if ((trace === Trace.Verbose || trace === Trace.Compact) && message.params) {\n                data = `Params: ${stringifyTrace(message.params)}\\n\\n`;\n            }\n            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);\n        }\n        else {\n            logLSPMessage('send-request', message);\n        }\n    }\n    function traceSendingNotification(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose || trace === Trace.Compact) {\n                if (message.params) {\n                    data = `Params: ${stringifyTrace(message.params)}\\n\\n`;\n                }\n                else {\n                    data = 'No parameters provided.\\n\\n';\n                }\n            }\n            tracer.log(`Sending notification '${message.method}'.`, data);\n        }\n        else {\n            logLSPMessage('send-notification', message);\n        }\n    }\n    function traceSendingResponse(message, method, startTime) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose || trace === Trace.Compact) {\n                if (message.error && message.error.data) {\n                    data = `Error data: ${stringifyTrace(message.error.data)}\\n\\n`;\n                }\n                else {\n                    if (message.result) {\n                        data = `Result: ${stringifyTrace(message.result)}\\n\\n`;\n                    }\n                    else if (message.error === undefined) {\n                        data = 'No result returned.\\n\\n';\n                    }\n                }\n            }\n            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);\n        }\n        else {\n            logLSPMessage('send-response', message);\n        }\n    }\n    function traceReceivedRequest(message) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if ((trace === Trace.Verbose || trace === Trace.Compact) && message.params) {\n                data = `Params: ${stringifyTrace(message.params)}\\n\\n`;\n            }\n            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);\n        }\n        else {\n            logLSPMessage('receive-request', message);\n        }\n    }\n    function traceReceivedNotification(message) {\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose || trace === Trace.Compact) {\n                if (message.params) {\n                    data = `Params: ${stringifyTrace(message.params)}\\n\\n`;\n                }\n                else {\n                    data = 'No parameters provided.\\n\\n';\n                }\n            }\n            tracer.log(`Received notification '${message.method}'.`, data);\n        }\n        else {\n            logLSPMessage('receive-notification', message);\n        }\n    }\n    function traceReceivedResponse(message, responsePromise) {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        if (traceFormat === TraceFormat.Text) {\n            let data = undefined;\n            if (trace === Trace.Verbose || trace === Trace.Compact) {\n                if (message.error && message.error.data) {\n                    data = `Error data: ${stringifyTrace(message.error.data)}\\n\\n`;\n                }\n                else {\n                    if (message.result) {\n                        data = `Result: ${stringifyTrace(message.result)}\\n\\n`;\n                    }\n                    else if (message.error === undefined) {\n                        data = 'No result returned.\\n\\n';\n                    }\n                }\n            }\n            if (responsePromise) {\n                const error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';\n                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);\n            }\n            else {\n                tracer.log(`Received response ${message.id} without active response promise.`, data);\n            }\n        }\n        else {\n            logLSPMessage('receive-response', message);\n        }\n    }\n    function logLSPMessage(type, message) {\n        if (!tracer || trace === Trace.Off) {\n            return;\n        }\n        const lspMessage = {\n            isLSPMessage: true,\n            type,\n            message,\n            timestamp: Date.now()\n        };\n        tracer.log(lspMessage);\n    }\n    function throwIfClosedOrDisposed() {\n        if (isClosed()) {\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\n        }\n        if (isDisposed()) {\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\n        }\n    }\n    function throwIfListening() {\n        if (isListening()) {\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\n        }\n    }\n    function throwIfNotListening() {\n        if (!isListening()) {\n            throw new Error('Call listen() first.');\n        }\n    }\n    function undefinedToNull(param) {\n        if (param === undefined) {\n            return null;\n        }\n        else {\n            return param;\n        }\n    }\n    function nullToUndefined(param) {\n        if (param === null) {\n            return undefined;\n        }\n        else {\n            return param;\n        }\n    }\n    function isNamedParam(param) {\n        return param !== undefined && param !== null && !Array.isArray(param) && typeof param === 'object';\n    }\n    function computeSingleParam(parameterStructures, param) {\n        switch (parameterStructures) {\n            case messages_1.ParameterStructures.auto:\n                if (isNamedParam(param)) {\n                    return nullToUndefined(param);\n                }\n                else {\n                    return [undefinedToNull(param)];\n                }\n            case messages_1.ParameterStructures.byName:\n                if (!isNamedParam(param)) {\n                    throw new Error(`Received parameters by name but param is not an object literal.`);\n                }\n                return nullToUndefined(param);\n            case messages_1.ParameterStructures.byPosition:\n                return [undefinedToNull(param)];\n            default:\n                throw new Error(`Unknown parameter structure ${parameterStructures.toString()}`);\n        }\n    }\n    function computeMessageParams(type, params) {\n        let result;\n        const numberOfParams = type.numberOfParams;\n        switch (numberOfParams) {\n            case 0:\n                result = undefined;\n                break;\n            case 1:\n                result = computeSingleParam(type.parameterStructures, params[0]);\n                break;\n            default:\n                result = [];\n                for (let i = 0; i < params.length && i < numberOfParams; i++) {\n                    result.push(undefinedToNull(params[i]));\n                }\n                if (params.length < numberOfParams) {\n                    for (let i = params.length; i < numberOfParams; i++) {\n                        result.push(null);\n                    }\n                }\n                break;\n        }\n        return result;\n    }\n    const connection = {\n        sendNotification: (type, ...args) => {\n            throwIfClosedOrDisposed();\n            let method;\n            let messageParams;\n            if (Is.string(type)) {\n                method = type;\n                const first = args[0];\n                let paramStart = 0;\n                let parameterStructures = messages_1.ParameterStructures.auto;\n                if (messages_1.ParameterStructures.is(first)) {\n                    paramStart = 1;\n                    parameterStructures = first;\n                }\n                let paramEnd = args.length;\n                const numberOfParams = paramEnd - paramStart;\n                switch (numberOfParams) {\n                    case 0:\n                        messageParams = undefined;\n                        break;\n                    case 1:\n                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);\n                        break;\n                    default:\n                        if (parameterStructures === messages_1.ParameterStructures.byName) {\n                            throw new Error(`Received ${numberOfParams} parameters for 'by Name' notification parameter structure.`);\n                        }\n                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));\n                        break;\n                }\n            }\n            else {\n                const params = args;\n                method = type.method;\n                messageParams = computeMessageParams(type, params);\n            }\n            const notificationMessage = {\n                jsonrpc: version,\n                method: method,\n                params: messageParams\n            };\n            traceSendingNotification(notificationMessage);\n            return messageWriter.write(notificationMessage).catch((error) => {\n                logger.error(`Sending notification failed.`);\n                throw error;\n            });\n        },\n        onNotification: (type, handler) => {\n            throwIfClosedOrDisposed();\n            let method;\n            if (Is.func(type)) {\n                starNotificationHandler = type;\n            }\n            else if (handler) {\n                if (Is.string(type)) {\n                    method = type;\n                    notificationHandlers.set(type, { type: undefined, handler });\n                }\n                else {\n                    method = type.method;\n                    notificationHandlers.set(type.method, { type, handler });\n                }\n            }\n            return {\n                dispose: () => {\n                    if (method !== undefined) {\n                        notificationHandlers.delete(method);\n                    }\n                    else {\n                        starNotificationHandler = undefined;\n                    }\n                }\n            };\n        },\n        onProgress: (_type, token, handler) => {\n            if (progressHandlers.has(token)) {\n                throw new Error(`Progress handler for token ${token} already registered`);\n            }\n            progressHandlers.set(token, handler);\n            return {\n                dispose: () => {\n                    progressHandlers.delete(token);\n                }\n            };\n        },\n        sendProgress: (_type, token, value) => {\n            // This should not await but simple return to ensure that we don't have another\n            // async scheduling. Otherwise one send could overtake another send.\n            return connection.sendNotification(ProgressNotification.type, { token, value });\n        },\n        onUnhandledProgress: unhandledProgressEmitter.event,\n        sendRequest: (type, ...args) => {\n            throwIfClosedOrDisposed();\n            throwIfNotListening();\n            let method;\n            let messageParams;\n            let token = undefined;\n            if (Is.string(type)) {\n                method = type;\n                const first = args[0];\n                const last = args[args.length - 1];\n                let paramStart = 0;\n                let parameterStructures = messages_1.ParameterStructures.auto;\n                if (messages_1.ParameterStructures.is(first)) {\n                    paramStart = 1;\n                    parameterStructures = first;\n                }\n                let paramEnd = args.length;\n                if (cancellation_1.CancellationToken.is(last)) {\n                    paramEnd = paramEnd - 1;\n                    token = last;\n                }\n                const numberOfParams = paramEnd - paramStart;\n                switch (numberOfParams) {\n                    case 0:\n                        messageParams = undefined;\n                        break;\n                    case 1:\n                        messageParams = computeSingleParam(parameterStructures, args[paramStart]);\n                        break;\n                    default:\n                        if (parameterStructures === messages_1.ParameterStructures.byName) {\n                            throw new Error(`Received ${numberOfParams} parameters for 'by Name' request parameter structure.`);\n                        }\n                        messageParams = args.slice(paramStart, paramEnd).map(value => undefinedToNull(value));\n                        break;\n                }\n            }\n            else {\n                const params = args;\n                method = type.method;\n                messageParams = computeMessageParams(type, params);\n                const numberOfParams = type.numberOfParams;\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\n            }\n            const id = sequenceNumber++;\n            let disposable;\n            if (token) {\n                disposable = token.onCancellationRequested(() => {\n                    const p = cancellationStrategy.sender.sendCancellation(connection, id);\n                    if (p === undefined) {\n                        logger.log(`Received no promise from cancellation strategy when cancelling id ${id}`);\n                        return Promise.resolve();\n                    }\n                    else {\n                        return p.catch(() => {\n                            logger.log(`Sending cancellation messages for id ${id} failed`);\n                        });\n                    }\n                });\n            }\n            const requestMessage = {\n                jsonrpc: version,\n                id: id,\n                method: method,\n                params: messageParams\n            };\n            traceSendingRequest(requestMessage);\n            if (typeof cancellationStrategy.sender.enableCancellation === 'function') {\n                cancellationStrategy.sender.enableCancellation(requestMessage);\n            }\n            return new Promise(async (resolve, reject) => {\n                const resolveWithCleanup = (r) => {\n                    resolve(r);\n                    cancellationStrategy.sender.cleanup(id);\n                    disposable?.dispose();\n                };\n                const rejectWithCleanup = (r) => {\n                    reject(r);\n                    cancellationStrategy.sender.cleanup(id);\n                    disposable?.dispose();\n                };\n                const responsePromise = { method: method, timerStart: Date.now(), resolve: resolveWithCleanup, reject: rejectWithCleanup };\n                try {\n                    await messageWriter.write(requestMessage);\n                    responsePromises.set(id, responsePromise);\n                }\n                catch (error) {\n                    logger.error(`Sending request failed.`);\n                    // Writing the message failed. So we need to reject the promise.\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, error.message ? error.message : 'Unknown reason'));\n                    throw error;\n                }\n            });\n        },\n        onRequest: (type, handler) => {\n            throwIfClosedOrDisposed();\n            let method = null;\n            if (StarRequestHandler.is(type)) {\n                method = undefined;\n                starRequestHandler = type;\n            }\n            else if (Is.string(type)) {\n                method = null;\n                if (handler !== undefined) {\n                    method = type;\n                    requestHandlers.set(type, { handler: handler, type: undefined });\n                }\n            }\n            else {\n                if (handler !== undefined) {\n                    method = type.method;\n                    requestHandlers.set(type.method, { type, handler });\n                }\n            }\n            return {\n                dispose: () => {\n                    if (method === null) {\n                        return;\n                    }\n                    if (method !== undefined) {\n                        requestHandlers.delete(method);\n                    }\n                    else {\n                        starRequestHandler = undefined;\n                    }\n                }\n            };\n        },\n        hasPendingResponse: () => {\n            return responsePromises.size > 0;\n        },\n        trace: async (_value, _tracer, sendNotificationOrTraceOptions) => {\n            let _sendNotification = false;\n            let _traceFormat = TraceFormat.Text;\n            if (sendNotificationOrTraceOptions !== undefined) {\n                if (Is.boolean(sendNotificationOrTraceOptions)) {\n                    _sendNotification = sendNotificationOrTraceOptions;\n                }\n                else {\n                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;\n                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;\n                }\n            }\n            trace = _value;\n            traceFormat = _traceFormat;\n            if (trace === Trace.Off) {\n                tracer = undefined;\n            }\n            else {\n                tracer = _tracer;\n            }\n            if (_sendNotification && !isClosed() && !isDisposed()) {\n                await connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\n            }\n        },\n        onError: errorEmitter.event,\n        onClose: closeEmitter.event,\n        onUnhandledNotification: unhandledNotificationEmitter.event,\n        onDispose: disposeEmitter.event,\n        end: () => {\n            messageWriter.end();\n        },\n        dispose: () => {\n            if (isDisposed()) {\n                return;\n            }\n            state = ConnectionState.Disposed;\n            disposeEmitter.fire(undefined);\n            const error = new messages_1.ResponseError(messages_1.ErrorCodes.PendingResponseRejected, 'Pending response rejected since connection got disposed');\n            for (const promise of responsePromises.values()) {\n                promise.reject(error);\n            }\n            responsePromises = new Map();\n            requestTokens = new Map();\n            knownCanceledRequests = new Set();\n            messageQueue = new linkedMap_1.LinkedMap();\n            // Test for backwards compatibility\n            if (Is.func(messageWriter.dispose)) {\n                messageWriter.dispose();\n            }\n            if (Is.func(messageReader.dispose)) {\n                messageReader.dispose();\n            }\n        },\n        listen: () => {\n            throwIfClosedOrDisposed();\n            throwIfListening();\n            state = ConnectionState.Listening;\n            messageReader.listen(callback);\n        },\n        inspect: () => {\n            // eslint-disable-next-line no-console\n            (0, ral_1.default)().console.log('inspect');\n        }\n    };\n    connection.onNotification(LogTraceNotification.type, (params) => {\n        if (trace === Trace.Off || !tracer) {\n            return;\n        }\n        const verbose = trace === Trace.Verbose || trace === Trace.Compact;\n        tracer.log(params.message, verbose ? params.verbose : undefined);\n    });\n    connection.onNotification(ProgressNotification.type, (params) => {\n        const handler = progressHandlers.get(params.token);\n        if (handler) {\n            handler(params.value);\n        }\n        else {\n            unhandledProgressEmitter.fire(params);\n        }\n    });\n    return connection;\n}\nexports.createMessageConnection = createMessageConnection;\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Disposable = void 0;\nvar Disposable;\n(function (Disposable) {\n    function create(func) {\n        return {\n            dispose: func\n        };\n    }\n    Disposable.create = create;\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Emitter = exports.Event = void 0;\nconst ral_1 = require(\"./ral\");\nvar Event;\n(function (Event) {\n    const _disposable = { dispose() { } };\n    Event.None = function () { return _disposable; };\n})(Event = exports.Event || (exports.Event = {}));\nclass CallbackList {\n    add(callback, context = null, bucket) {\n        if (!this._callbacks) {\n            this._callbacks = [];\n            this._contexts = [];\n        }\n        this._callbacks.push(callback);\n        this._contexts.push(context);\n        if (Array.isArray(bucket)) {\n            bucket.push({ dispose: () => this.remove(callback, context) });\n        }\n    }\n    remove(callback, context = null) {\n        if (!this._callbacks) {\n            return;\n        }\n        let foundCallbackWithDifferentContext = false;\n        for (let i = 0, len = this._callbacks.length; i < len; i++) {\n            if (this._callbacks[i] === callback) {\n                if (this._contexts[i] === context) {\n                    // callback & context match => remove it\n                    this._callbacks.splice(i, 1);\n                    this._contexts.splice(i, 1);\n                    return;\n                }\n                else {\n                    foundCallbackWithDifferentContext = true;\n                }\n            }\n        }\n        if (foundCallbackWithDifferentContext) {\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\n        }\n    }\n    invoke(...args) {\n        if (!this._callbacks) {\n            return [];\n        }\n        const ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\n        for (let i = 0, len = callbacks.length; i < len; i++) {\n            try {\n                ret.push(callbacks[i].apply(contexts[i], args));\n            }\n            catch (e) {\n                // eslint-disable-next-line no-console\n                (0, ral_1.default)().console.error(e);\n            }\n        }\n        return ret;\n    }\n    isEmpty() {\n        return !this._callbacks || this._callbacks.length === 0;\n    }\n    dispose() {\n        this._callbacks = undefined;\n        this._contexts = undefined;\n    }\n}\nclass Emitter {\n    constructor(_options) {\n        this._options = _options;\n    }\n    /**\n     * For the public to allow to subscribe\n     * to events from this Emitter\n     */\n    get event() {\n        if (!this._event) {\n            this._event = (listener, thisArgs, disposables) => {\n                if (!this._callbacks) {\n                    this._callbacks = new CallbackList();\n                }\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n                    this._options.onFirstListenerAdd(this);\n                }\n                this._callbacks.add(listener, thisArgs);\n                const result = {\n                    dispose: () => {\n                        if (!this._callbacks) {\n                            // disposable is disposed after emitter is disposed.\n                            return;\n                        }\n                        this._callbacks.remove(listener, thisArgs);\n                        result.dispose = Emitter._noop;\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\n                            this._options.onLastListenerRemove(this);\n                        }\n                    }\n                };\n                if (Array.isArray(disposables)) {\n                    disposables.push(result);\n                }\n                return result;\n            };\n        }\n        return this._event;\n    }\n    /**\n     * To be kept private to fire an event to\n     * subscribers\n     */\n    fire(event) {\n        if (this._callbacks) {\n            this._callbacks.invoke.call(this._callbacks, event);\n        }\n    }\n    dispose() {\n        if (this._callbacks) {\n            this._callbacks.dispose();\n            this._callbacks = undefined;\n        }\n    }\n}\nexports.Emitter = Emitter;\nEmitter._noop = function () { };\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.stringArray = exports.array = exports.func = exports.error = exports.number = exports.string = exports.boolean = void 0;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return typeof value === 'string' || value instanceof String;\n}\nexports.string = string;\nfunction number(value) {\n    return typeof value === 'number' || value instanceof Number;\n}\nexports.number = number;\nfunction error(value) {\n    return value instanceof Error;\n}\nexports.error = error;\nfunction func(value) {\n    return typeof value === 'function';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(elem => string(elem));\n}\nexports.stringArray = stringArray;\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LRUCache = exports.LinkedMap = exports.Touch = void 0;\nvar Touch;\n(function (Touch) {\n    Touch.None = 0;\n    Touch.First = 1;\n    Touch.AsOld = Touch.First;\n    Touch.Last = 2;\n    Touch.AsNew = Touch.Last;\n})(Touch = exports.Touch || (exports.Touch = {}));\nclass LinkedMap {\n    constructor() {\n        this[_a] = 'LinkedMap';\n        this._map = new Map();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state = 0;\n    }\n    clear() {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state++;\n    }\n    isEmpty() {\n        return !this._head && !this._tail;\n    }\n    get size() {\n        return this._size;\n    }\n    get first() {\n        return this._head?.value;\n    }\n    get last() {\n        return this._tail?.value;\n    }\n    has(key) {\n        return this._map.has(key);\n    }\n    get(key, touch = Touch.None) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== Touch.None) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    }\n    set(key, value, touch = Touch.None) {\n        let item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== Touch.None) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key, value, next: undefined, previous: undefined };\n            switch (touch) {\n                case Touch.None:\n                    this.addItemLast(item);\n                    break;\n                case Touch.First:\n                    this.addItemFirst(item);\n                    break;\n                case Touch.Last:\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n        return this;\n    }\n    delete(key) {\n        return !!this.remove(key);\n    }\n    remove(key) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    shift() {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        const item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    forEach(callbackfn, thisArg) {\n        const state = this._state;\n        let current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            if (this._state !== state) {\n                throw new Error(`LinkedMap got modified during iteration.`);\n            }\n            current = current.next;\n        }\n    }\n    keys() {\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]: () => {\n                return iterator;\n            },\n            next: () => {\n                if (this._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    values() {\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]: () => {\n                return iterator;\n            },\n            next: () => {\n                if (this._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    entries() {\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]: () => {\n                return iterator;\n            },\n            next: () => {\n                if (this._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: [current.key, current.value], done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    [(_a = Symbol.toStringTag, Symbol.iterator)]() {\n        return this.entries();\n    }\n    trimOld(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._head;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        if (current) {\n            current.previous = undefined;\n        }\n        this._state++;\n    }\n    addItemFirst(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n        this._state++;\n    }\n    addItemLast(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n        this._state++;\n    }\n    removeItem(item) {\n        if (item === this._head && item === this._tail) {\n            this._head = undefined;\n            this._tail = undefined;\n        }\n        else if (item === this._head) {\n            // This can only happened if size === 1 which is handle\n            // by the case above.\n            if (!item.next) {\n                throw new Error('Invalid list');\n            }\n            item.next.previous = undefined;\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            // This can only happened if size === 1 which is handle\n            // by the case above.\n            if (!item.previous) {\n                throw new Error('Invalid list');\n            }\n            item.previous.next = undefined;\n            this._tail = item.previous;\n        }\n        else {\n            const next = item.next;\n            const previous = item.previous;\n            if (!next || !previous) {\n                throw new Error('Invalid list');\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n        item.next = undefined;\n        item.previous = undefined;\n        this._state++;\n    }\n    touch(item, touch) {\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\n            return;\n        }\n        if (touch === Touch.First) {\n            if (item === this._head) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item\n            if (item === this._tail) {\n                // previous must be defined since item was not head but is tail\n                // So there are more than on item in the map\n                previous.next = undefined;\n                this._tail = previous;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            // Insert the node at head\n            item.previous = undefined;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n            this._state++;\n        }\n        else if (touch === Touch.Last) {\n            if (item === this._tail) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item.\n            if (item === this._head) {\n                // next must be defined since item was not tail but is head\n                // So there are more than on item in the map\n                next.previous = undefined;\n                this._head = next;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = undefined;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n            this._state++;\n        }\n    }\n    toJSON() {\n        const data = [];\n        this.forEach((value, key) => {\n            data.push([key, value]);\n        });\n        return data;\n    }\n    fromJSON(data) {\n        this.clear();\n        for (const [key, value] of data) {\n            this.set(key, value);\n        }\n    }\n}\nexports.LinkedMap = LinkedMap;\nclass LRUCache extends LinkedMap {\n    constructor(limit, ratio = 1) {\n        super();\n        this._limit = limit;\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(limit) {\n        this._limit = limit;\n        this.checkTrim();\n    }\n    get ratio() {\n        return this._ratio;\n    }\n    set ratio(ratio) {\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n        this.checkTrim();\n    }\n    get(key, touch = Touch.AsNew) {\n        return super.get(key, touch);\n    }\n    peek(key) {\n        return super.get(key, Touch.None);\n    }\n    set(key, value) {\n        super.set(key, value, Touch.Last);\n        this.checkTrim();\n        return this;\n    }\n    checkTrim() {\n        if (this.size > this._limit) {\n            this.trimOld(Math.round(this._limit * this._ratio));\n        }\n    }\n}\nexports.LRUCache = LRUCache;\n","\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractMessageBuffer = void 0;\nconst CR = 13;\nconst LF = 10;\nconst CRLF = '\\r\\n';\nclass AbstractMessageBuffer {\n    constructor(encoding = 'utf-8') {\n        this._encoding = encoding;\n        this._chunks = [];\n        this._totalLength = 0;\n    }\n    get encoding() {\n        return this._encoding;\n    }\n    append(chunk) {\n        const toAppend = typeof chunk === 'string' ? this.fromString(chunk, this._encoding) : chunk;\n        this._chunks.push(toAppend);\n        this._totalLength += toAppend.byteLength;\n    }\n    tryReadHeaders(lowerCaseKeys = false) {\n        if (this._chunks.length === 0) {\n            return undefined;\n        }\n        let state = 0;\n        let chunkIndex = 0;\n        let offset = 0;\n        let chunkBytesRead = 0;\n        row: while (chunkIndex < this._chunks.length) {\n            const chunk = this._chunks[chunkIndex];\n            offset = 0;\n            column: while (offset < chunk.length) {\n                const value = chunk[offset];\n                switch (value) {\n                    case CR:\n                        switch (state) {\n                            case 0:\n                                state = 1;\n                                break;\n                            case 2:\n                                state = 3;\n                                break;\n                            default:\n                                state = 0;\n                        }\n                        break;\n                    case LF:\n                        switch (state) {\n                            case 1:\n                                state = 2;\n                                break;\n                            case 3:\n                                state = 4;\n                                offset++;\n                                break row;\n                            default:\n                                state = 0;\n                        }\n                        break;\n                    default:\n                        state = 0;\n                }\n                offset++;\n            }\n            chunkBytesRead += chunk.byteLength;\n            chunkIndex++;\n        }\n        if (state !== 4) {\n            return undefined;\n        }\n        // The buffer contains the two CRLF at the end. So we will\n        // have two empty lines after the split at the end as well.\n        const buffer = this._read(chunkBytesRead + offset);\n        const result = new Map();\n        const headers = this.toString(buffer, 'ascii').split(CRLF);\n        if (headers.length < 2) {\n            return result;\n        }\n        for (let i = 0; i < headers.length - 2; i++) {\n            const header = headers[i];\n            const index = header.indexOf(':');\n            if (index === -1) {\n                throw new Error('Message header must separate key and value using :');\n            }\n            const key = header.substr(0, index);\n            const value = header.substr(index + 1).trim();\n            result.set(lowerCaseKeys ? key.toLowerCase() : key, value);\n        }\n        return result;\n    }\n    tryReadBody(length) {\n        if (this._totalLength < length) {\n            return undefined;\n        }\n        return this._read(length);\n    }\n    get numberOfBytes() {\n        return this._totalLength;\n    }\n    _read(byteCount) {\n        if (byteCount === 0) {\n            return this.emptyBuffer();\n        }\n        if (byteCount > this._totalLength) {\n            throw new Error(`Cannot read so many bytes!`);\n        }\n        if (this._chunks[0].byteLength === byteCount) {\n            // super fast path, precisely first chunk must be returned\n            const chunk = this._chunks[0];\n            this._chunks.shift();\n            this._totalLength -= byteCount;\n            return this.asNative(chunk);\n        }\n        if (this._chunks[0].byteLength > byteCount) {\n            // fast path, the reading is entirely within the first chunk\n            const chunk = this._chunks[0];\n            const result = this.asNative(chunk, byteCount);\n            this._chunks[0] = chunk.slice(byteCount);\n            this._totalLength -= byteCount;\n            return result;\n        }\n        const result = this.allocNative(byteCount);\n        let resultOffset = 0;\n        let chunkIndex = 0;\n        while (byteCount > 0) {\n            const chunk = this._chunks[chunkIndex];\n            if (chunk.byteLength > byteCount) {\n                // this chunk will survive\n                const chunkPart = chunk.slice(0, byteCount);\n                result.set(chunkPart, resultOffset);\n                resultOffset += byteCount;\n                this._chunks[chunkIndex] = chunk.slice(byteCount);\n                this._totalLength -= byteCount;\n                byteCount -= byteCount;\n            }\n            else {\n                // this chunk will be entirely read\n                result.set(chunk, resultOffset);\n                resultOffset += chunk.byteLength;\n                this._chunks.shift();\n                this._totalLength -= chunk.byteLength;\n                byteCount -= chunk.byteLength;\n            }\n        }\n        return result;\n    }\n}\nexports.AbstractMessageBuffer = AbstractMessageBuffer;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReadableStreamMessageReader = exports.AbstractMessageReader = exports.MessageReader = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst events_1 = require(\"./events\");\nconst semaphore_1 = require(\"./semaphore\");\nvar MessageReader;\n(function (MessageReader) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\n    }\n    MessageReader.is = is;\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\nclass AbstractMessageReader {\n    constructor() {\n        this.errorEmitter = new events_1.Emitter();\n        this.closeEmitter = new events_1.Emitter();\n        this.partialMessageEmitter = new events_1.Emitter();\n    }\n    dispose() {\n        this.errorEmitter.dispose();\n        this.closeEmitter.dispose();\n    }\n    get onError() {\n        return this.errorEmitter.event;\n    }\n    fireError(error) {\n        this.errorEmitter.fire(this.asError(error));\n    }\n    get onClose() {\n        return this.closeEmitter.event;\n    }\n    fireClose() {\n        this.closeEmitter.fire(undefined);\n    }\n    get onPartialMessage() {\n        return this.partialMessageEmitter.event;\n    }\n    firePartialMessage(info) {\n        this.partialMessageEmitter.fire(info);\n    }\n    asError(error) {\n        if (error instanceof Error) {\n            return error;\n        }\n        else {\n            return new Error(`Reader received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\n        }\n    }\n}\nexports.AbstractMessageReader = AbstractMessageReader;\nvar ResolvedMessageReaderOptions;\n(function (ResolvedMessageReaderOptions) {\n    function fromOptions(options) {\n        let charset;\n        let result;\n        let contentDecoder;\n        const contentDecoders = new Map();\n        let contentTypeDecoder;\n        const contentTypeDecoders = new Map();\n        if (options === undefined || typeof options === 'string') {\n            charset = options ?? 'utf-8';\n        }\n        else {\n            charset = options.charset ?? 'utf-8';\n            if (options.contentDecoder !== undefined) {\n                contentDecoder = options.contentDecoder;\n                contentDecoders.set(contentDecoder.name, contentDecoder);\n            }\n            if (options.contentDecoders !== undefined) {\n                for (const decoder of options.contentDecoders) {\n                    contentDecoders.set(decoder.name, decoder);\n                }\n            }\n            if (options.contentTypeDecoder !== undefined) {\n                contentTypeDecoder = options.contentTypeDecoder;\n                contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);\n            }\n            if (options.contentTypeDecoders !== undefined) {\n                for (const decoder of options.contentTypeDecoders) {\n                    contentTypeDecoders.set(decoder.name, decoder);\n                }\n            }\n        }\n        if (contentTypeDecoder === undefined) {\n            contentTypeDecoder = (0, ral_1.default)().applicationJson.decoder;\n            contentTypeDecoders.set(contentTypeDecoder.name, contentTypeDecoder);\n        }\n        return { charset, contentDecoder, contentDecoders, contentTypeDecoder, contentTypeDecoders };\n    }\n    ResolvedMessageReaderOptions.fromOptions = fromOptions;\n})(ResolvedMessageReaderOptions || (ResolvedMessageReaderOptions = {}));\nclass ReadableStreamMessageReader extends AbstractMessageReader {\n    constructor(readable, options) {\n        super();\n        this.readable = readable;\n        this.options = ResolvedMessageReaderOptions.fromOptions(options);\n        this.buffer = (0, ral_1.default)().messageBuffer.create(this.options.charset);\n        this._partialMessageTimeout = 10000;\n        this.nextMessageLength = -1;\n        this.messageToken = 0;\n        this.readSemaphore = new semaphore_1.Semaphore(1);\n    }\n    set partialMessageTimeout(timeout) {\n        this._partialMessageTimeout = timeout;\n    }\n    get partialMessageTimeout() {\n        return this._partialMessageTimeout;\n    }\n    listen(callback) {\n        this.nextMessageLength = -1;\n        this.messageToken = 0;\n        this.partialMessageTimer = undefined;\n        this.callback = callback;\n        const result = this.readable.onData((data) => {\n            this.onData(data);\n        });\n        this.readable.onError((error) => this.fireError(error));\n        this.readable.onClose(() => this.fireClose());\n        return result;\n    }\n    onData(data) {\n        this.buffer.append(data);\n        while (true) {\n            if (this.nextMessageLength === -1) {\n                const headers = this.buffer.tryReadHeaders(true);\n                if (!headers) {\n                    return;\n                }\n                const contentLength = headers.get('content-length');\n                if (!contentLength) {\n                    this.fireError(new Error('Header must provide a Content-Length property.'));\n                    return;\n                }\n                const length = parseInt(contentLength);\n                if (isNaN(length)) {\n                    this.fireError(new Error('Content-Length value must be a number.'));\n                    return;\n                }\n                this.nextMessageLength = length;\n            }\n            const body = this.buffer.tryReadBody(this.nextMessageLength);\n            if (body === undefined) {\n                /** We haven't received the full message yet. */\n                this.setPartialMessageTimer();\n                return;\n            }\n            this.clearPartialMessageTimer();\n            this.nextMessageLength = -1;\n            // Make sure that we convert one received message after the\n            // other. Otherwise it could happen that a decoding of a second\n            // smaller message finished before the decoding of a first larger\n            // message and then we would deliver the second message first.\n            this.readSemaphore.lock(async () => {\n                const bytes = this.options.contentDecoder !== undefined\n                    ? await this.options.contentDecoder.decode(body)\n                    : body;\n                const message = await this.options.contentTypeDecoder.decode(bytes, this.options);\n                this.callback(message);\n            }).catch((error) => {\n                this.fireError(error);\n            });\n        }\n    }\n    clearPartialMessageTimer() {\n        if (this.partialMessageTimer) {\n            this.partialMessageTimer.dispose();\n            this.partialMessageTimer = undefined;\n        }\n    }\n    setPartialMessageTimer() {\n        this.clearPartialMessageTimer();\n        if (this._partialMessageTimeout <= 0) {\n            return;\n        }\n        this.partialMessageTimer = (0, ral_1.default)().timer.setTimeout((token, timeout) => {\n            this.partialMessageTimer = undefined;\n            if (token === this.messageToken) {\n                this.firePartialMessage({ messageToken: token, waitingTime: timeout });\n                this.setPartialMessageTimer();\n            }\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\n    }\n}\nexports.ReadableStreamMessageReader = ReadableStreamMessageReader;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WriteableStreamMessageWriter = exports.AbstractMessageWriter = exports.MessageWriter = void 0;\nconst ral_1 = require(\"./ral\");\nconst Is = require(\"./is\");\nconst semaphore_1 = require(\"./semaphore\");\nconst events_1 = require(\"./events\");\nconst ContentLength = 'Content-Length: ';\nconst CRLF = '\\r\\n';\nvar MessageWriter;\n(function (MessageWriter) {\n    function is(value) {\n        let candidate = value;\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\n            Is.func(candidate.onError) && Is.func(candidate.write);\n    }\n    MessageWriter.is = is;\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\nclass AbstractMessageWriter {\n    constructor() {\n        this.errorEmitter = new events_1.Emitter();\n        this.closeEmitter = new events_1.Emitter();\n    }\n    dispose() {\n        this.errorEmitter.dispose();\n        this.closeEmitter.dispose();\n    }\n    get onError() {\n        return this.errorEmitter.event;\n    }\n    fireError(error, message, count) {\n        this.errorEmitter.fire([this.asError(error), message, count]);\n    }\n    get onClose() {\n        return this.closeEmitter.event;\n    }\n    fireClose() {\n        this.closeEmitter.fire(undefined);\n    }\n    asError(error) {\n        if (error instanceof Error) {\n            return error;\n        }\n        else {\n            return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\n        }\n    }\n}\nexports.AbstractMessageWriter = AbstractMessageWriter;\nvar ResolvedMessageWriterOptions;\n(function (ResolvedMessageWriterOptions) {\n    function fromOptions(options) {\n        if (options === undefined || typeof options === 'string') {\n            return { charset: options ?? 'utf-8', contentTypeEncoder: (0, ral_1.default)().applicationJson.encoder };\n        }\n        else {\n            return { charset: options.charset ?? 'utf-8', contentEncoder: options.contentEncoder, contentTypeEncoder: options.contentTypeEncoder ?? (0, ral_1.default)().applicationJson.encoder };\n        }\n    }\n    ResolvedMessageWriterOptions.fromOptions = fromOptions;\n})(ResolvedMessageWriterOptions || (ResolvedMessageWriterOptions = {}));\nclass WriteableStreamMessageWriter extends AbstractMessageWriter {\n    constructor(writable, options) {\n        super();\n        this.writable = writable;\n        this.options = ResolvedMessageWriterOptions.fromOptions(options);\n        this.errorCount = 0;\n        this.writeSemaphore = new semaphore_1.Semaphore(1);\n        this.writable.onError((error) => this.fireError(error));\n        this.writable.onClose(() => this.fireClose());\n    }\n    async write(msg) {\n        return this.writeSemaphore.lock(async () => {\n            const payload = this.options.contentTypeEncoder.encode(msg, this.options).then((buffer) => {\n                if (this.options.contentEncoder !== undefined) {\n                    return this.options.contentEncoder.encode(buffer);\n                }\n                else {\n                    return buffer;\n                }\n            });\n            return payload.then((buffer) => {\n                const headers = [];\n                headers.push(ContentLength, buffer.byteLength.toString(), CRLF);\n                headers.push(CRLF);\n                return this.doWrite(msg, headers, buffer);\n            }, (error) => {\n                this.fireError(error);\n                throw error;\n            });\n        });\n    }\n    async doWrite(msg, headers, data) {\n        try {\n            await this.writable.write(headers.join(''), 'ascii');\n            return this.writable.write(data);\n        }\n        catch (error) {\n            this.handleError(error, msg);\n            return Promise.reject(error);\n        }\n    }\n    handleError(error, msg) {\n        this.errorCount++;\n        this.fireError(error, msg, this.errorCount);\n    }\n    end() {\n        this.writable.end();\n    }\n}\nexports.WriteableStreamMessageWriter = WriteableStreamMessageWriter;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Message = exports.NotificationType9 = exports.NotificationType8 = exports.NotificationType7 = exports.NotificationType6 = exports.NotificationType5 = exports.NotificationType4 = exports.NotificationType3 = exports.NotificationType2 = exports.NotificationType1 = exports.NotificationType0 = exports.NotificationType = exports.RequestType9 = exports.RequestType8 = exports.RequestType7 = exports.RequestType6 = exports.RequestType5 = exports.RequestType4 = exports.RequestType3 = exports.RequestType2 = exports.RequestType1 = exports.RequestType = exports.RequestType0 = exports.AbstractMessageSignature = exports.ParameterStructures = exports.ResponseError = exports.ErrorCodes = void 0;\nconst is = require(\"./is\");\n/**\n * Predefined error codes.\n */\nvar ErrorCodes;\n(function (ErrorCodes) {\n    // Defined by JSON RPC\n    ErrorCodes.ParseError = -32700;\n    ErrorCodes.InvalidRequest = -32600;\n    ErrorCodes.MethodNotFound = -32601;\n    ErrorCodes.InvalidParams = -32602;\n    ErrorCodes.InternalError = -32603;\n    /**\n     * This is the start range of JSON RPC reserved error codes.\n     * It doesn't denote a real error code. No application error codes should\n     * be defined between the start and end range. For backwards\n     * compatibility the `ServerNotInitialized` and the `UnknownErrorCode`\n     * are left in the range.\n     *\n     * @since 3.16.0\n    */\n    ErrorCodes.jsonrpcReservedErrorRangeStart = -32099;\n    /** @deprecated use  jsonrpcReservedErrorRangeStart */\n    ErrorCodes.serverErrorStart = -32099;\n    /**\n     * An error occurred when write a message to the transport layer.\n     */\n    ErrorCodes.MessageWriteError = -32099;\n    /**\n     * An error occurred when reading a message from the transport layer.\n     */\n    ErrorCodes.MessageReadError = -32098;\n    /**\n     * The connection got disposed or lost and all pending responses got\n     * rejected.\n     */\n    ErrorCodes.PendingResponseRejected = -32097;\n    /**\n     * The connection is inactive and a use of it failed.\n     */\n    ErrorCodes.ConnectionInactive = -32096;\n    /**\n     * Error code indicating that a server received a notification or\n     * request before the server has received the `initialize` request.\n     */\n    ErrorCodes.ServerNotInitialized = -32002;\n    ErrorCodes.UnknownErrorCode = -32001;\n    /**\n     * This is the end range of JSON RPC reserved error codes.\n     * It doesn't denote a real error code.\n     *\n     * @since 3.16.0\n    */\n    ErrorCodes.jsonrpcReservedErrorRangeEnd = -32000;\n    /** @deprecated use  jsonrpcReservedErrorRangeEnd */\n    ErrorCodes.serverErrorEnd = -32000;\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\n/**\n * An error object return in a response in case a request\n * has failed.\n */\nclass ResponseError extends Error {\n    constructor(code, message, data) {\n        super(message);\n        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\n        this.data = data;\n        Object.setPrototypeOf(this, ResponseError.prototype);\n    }\n    toJson() {\n        const result = {\n            code: this.code,\n            message: this.message\n        };\n        if (this.data !== undefined) {\n            result.data = this.data;\n        }\n        return result;\n    }\n}\nexports.ResponseError = ResponseError;\nclass ParameterStructures {\n    constructor(kind) {\n        this.kind = kind;\n    }\n    static is(value) {\n        return value === ParameterStructures.auto || value === ParameterStructures.byName || value === ParameterStructures.byPosition;\n    }\n    toString() {\n        return this.kind;\n    }\n}\nexports.ParameterStructures = ParameterStructures;\n/**\n * The parameter structure is automatically inferred on the number of parameters\n * and the parameter type in case of a single param.\n */\nParameterStructures.auto = new ParameterStructures('auto');\n/**\n * Forces `byPosition` parameter structure. This is useful if you have a single\n * parameter which has a literal type.\n */\nParameterStructures.byPosition = new ParameterStructures('byPosition');\n/**\n * Forces `byName` parameter structure. This is only useful when having a single\n * parameter. The library will report errors if used with a different number of\n * parameters.\n */\nParameterStructures.byName = new ParameterStructures('byName');\n/**\n * An abstract implementation of a MessageType.\n */\nclass AbstractMessageSignature {\n    constructor(method, numberOfParams) {\n        this.method = method;\n        this.numberOfParams = numberOfParams;\n    }\n    get parameterStructures() {\n        return ParameterStructures.auto;\n    }\n}\nexports.AbstractMessageSignature = AbstractMessageSignature;\n/**\n * Classes to type request response pairs\n */\nclass RequestType0 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 0);\n    }\n}\nexports.RequestType0 = RequestType0;\nclass RequestType extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.RequestType = RequestType;\nclass RequestType1 extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.RequestType1 = RequestType1;\nclass RequestType2 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 2);\n    }\n}\nexports.RequestType2 = RequestType2;\nclass RequestType3 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 3);\n    }\n}\nexports.RequestType3 = RequestType3;\nclass RequestType4 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 4);\n    }\n}\nexports.RequestType4 = RequestType4;\nclass RequestType5 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 5);\n    }\n}\nexports.RequestType5 = RequestType5;\nclass RequestType6 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 6);\n    }\n}\nexports.RequestType6 = RequestType6;\nclass RequestType7 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 7);\n    }\n}\nexports.RequestType7 = RequestType7;\nclass RequestType8 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 8);\n    }\n}\nexports.RequestType8 = RequestType8;\nclass RequestType9 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 9);\n    }\n}\nexports.RequestType9 = RequestType9;\nclass NotificationType extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.NotificationType = NotificationType;\nclass NotificationType0 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 0);\n    }\n}\nexports.NotificationType0 = NotificationType0;\nclass NotificationType1 extends AbstractMessageSignature {\n    constructor(method, _parameterStructures = ParameterStructures.auto) {\n        super(method, 1);\n        this._parameterStructures = _parameterStructures;\n    }\n    get parameterStructures() {\n        return this._parameterStructures;\n    }\n}\nexports.NotificationType1 = NotificationType1;\nclass NotificationType2 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 2);\n    }\n}\nexports.NotificationType2 = NotificationType2;\nclass NotificationType3 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 3);\n    }\n}\nexports.NotificationType3 = NotificationType3;\nclass NotificationType4 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 4);\n    }\n}\nexports.NotificationType4 = NotificationType4;\nclass NotificationType5 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 5);\n    }\n}\nexports.NotificationType5 = NotificationType5;\nclass NotificationType6 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 6);\n    }\n}\nexports.NotificationType6 = NotificationType6;\nclass NotificationType7 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 7);\n    }\n}\nexports.NotificationType7 = NotificationType7;\nclass NotificationType8 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 8);\n    }\n}\nexports.NotificationType8 = NotificationType8;\nclass NotificationType9 extends AbstractMessageSignature {\n    constructor(method) {\n        super(method, 9);\n    }\n}\nexports.NotificationType9 = NotificationType9;\nvar Message;\n(function (Message) {\n    /**\n     * Tests if the given message is a request message\n     */\n    function isRequest(message) {\n        const candidate = message;\n        return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\n    }\n    Message.isRequest = isRequest;\n    /**\n     * Tests if the given message is a notification message\n     */\n    function isNotification(message) {\n        const candidate = message;\n        return candidate && is.string(candidate.method) && message.id === void 0;\n    }\n    Message.isNotification = isNotification;\n    /**\n     * Tests if the given message is a response message\n     */\n    function isResponse(message) {\n        const candidate = message;\n        return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\n    }\n    Message.isResponse = isResponse;\n})(Message = exports.Message || (exports.Message = {}));\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet _ral;\nfunction RAL() {\n    if (_ral === undefined) {\n        throw new Error(`No runtime abstraction layer installed`);\n    }\n    return _ral;\n}\n(function (RAL) {\n    function install(ral) {\n        if (ral === undefined) {\n            throw new Error(`No runtime abstraction layer provided`);\n        }\n        _ral = ral;\n    }\n    RAL.install = install;\n})(RAL || (RAL = {}));\nexports.default = RAL;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Semaphore = void 0;\nconst ral_1 = require(\"./ral\");\nclass Semaphore {\n    constructor(capacity = 1) {\n        if (capacity <= 0) {\n            throw new Error('Capacity must be greater than 0');\n        }\n        this._capacity = capacity;\n        this._active = 0;\n        this._waiting = [];\n    }\n    lock(thunk) {\n        return new Promise((resolve, reject) => {\n            this._waiting.push({ thunk, resolve, reject });\n            this.runNext();\n        });\n    }\n    get active() {\n        return this._active;\n    }\n    runNext() {\n        if (this._waiting.length === 0 || this._active === this._capacity) {\n            return;\n        }\n        (0, ral_1.default)().timer.setImmediate(() => this.doRunNext());\n    }\n    doRunNext() {\n        if (this._waiting.length === 0 || this._active === this._capacity) {\n            return;\n        }\n        const next = this._waiting.shift();\n        this._active++;\n        if (this._active > this._capacity) {\n            throw new Error(`To many thunks active`);\n        }\n        try {\n            const result = next.thunk();\n            if (result instanceof Promise) {\n                result.then((value) => {\n                    this._active--;\n                    next.resolve(value);\n                    this.runNext();\n                }, (err) => {\n                    this._active--;\n                    next.reject(err);\n                    this.runNext();\n                });\n            }\n            else {\n                this._active--;\n                next.resolve(result);\n                this.runNext();\n            }\n        }\n        catch (err) {\n            this._active--;\n            next.reject(err);\n            this.runNext();\n        }\n    }\n}\nexports.Semaphore = Semaphore;\n","\"use strict\";\n/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SharedArrayReceiverStrategy = exports.SharedArraySenderStrategy = void 0;\nconst cancellation_1 = require(\"./cancellation\");\nvar CancellationState;\n(function (CancellationState) {\n    CancellationState.Continue = 0;\n    CancellationState.Cancelled = 1;\n})(CancellationState || (CancellationState = {}));\nclass SharedArraySenderStrategy {\n    constructor() {\n        this.buffers = new Map();\n    }\n    enableCancellation(request) {\n        if (request.id === null) {\n            return;\n        }\n        const buffer = new SharedArrayBuffer(4);\n        const data = new Int32Array(buffer, 0, 1);\n        data[0] = CancellationState.Continue;\n        this.buffers.set(request.id, buffer);\n        request.$cancellationData = buffer;\n    }\n    async sendCancellation(_conn, id) {\n        const buffer = this.buffers.get(id);\n        if (buffer === undefined) {\n            return;\n        }\n        const data = new Int32Array(buffer, 0, 1);\n        Atomics.store(data, 0, CancellationState.Cancelled);\n    }\n    cleanup(id) {\n        this.buffers.delete(id);\n    }\n    dispose() {\n        this.buffers.clear();\n    }\n}\nexports.SharedArraySenderStrategy = SharedArraySenderStrategy;\nclass SharedArrayBufferCancellationToken {\n    constructor(buffer) {\n        this.data = new Int32Array(buffer, 0, 1);\n    }\n    get isCancellationRequested() {\n        return Atomics.load(this.data, 0) === CancellationState.Cancelled;\n    }\n    get onCancellationRequested() {\n        throw new Error(`Cancellation over SharedArrayBuffer doesn't support cancellation events`);\n    }\n}\nclass SharedArrayBufferCancellationTokenSource {\n    constructor(buffer) {\n        this.token = new SharedArrayBufferCancellationToken(buffer);\n    }\n    cancel() {\n    }\n    dispose() {\n    }\n}\nclass SharedArrayReceiverStrategy {\n    constructor() {\n        this.kind = 'request';\n    }\n    createCancellationTokenSource(request) {\n        const buffer = request.$cancellationData;\n        if (buffer === undefined) {\n            return new cancellation_1.CancellationTokenSource();\n        }\n        return new SharedArrayBufferCancellationTokenSource(buffer);\n    }\n}\nexports.SharedArrayReceiverStrategy = SharedArrayReceiverStrategy;\n"],"names":["createButton","Dialog","MIME_TYPE_LANGUAGE_MAP","WidgetLSPAdapter","constructor","widget","options","this","_adapterConnected","Signal","_activeEditorChanged","_editorAdded","_editorRemoved","_disposed","_isDisposed","_virtualDocument","_connectionManager","connectionManager","_isConnected","_trans","translator","nullTranslator","load","context","saveState","connect","onSaveState","closed","onConnectionClosed","disposed","dispose","isDisposed","hasMultipleEditors","editors","length","widgetId","id","language","hasOwnProperty","mimeType","withoutParameters","split","type","subtype","startsWith","substring","adapterConnected","activeEditorChanged","editorAdded","editorRemoved","isConnected","trans","updateFinished","_updateFinished","virtualDocument","_","disconnect","emit","clearData","_a","_b","uri","model","unregisterDocument","contentChanged","_onContentChanged","ceEditor","editor","updateDocuments","console","warn","Promise","reject","updateManager","documentChanged","document","isInit","connection","connections","get","isReady","sendFullTextChange","value","documentInfo","log","reloadConnection","initVirtual","connectDocument","catch","state","documentsToSave","sendSaved","foreign","foreignDocuments","values","push","onConnected","data","reason","serverNotifications","message","serverIdentifier","showDialog","title","__","body","serverRequests","setHandler","async","params","actionItems","actions","buttons","map","action","label","result","choice","indexOf","button","sendOpen","foreignDocumentOpened","onForeignDocumentOpened","connectionContext","_connect","error","changed","sendOpenWhenReady","createVirtualDocument","foreignDocument","foreignDocumentClosed","_onForeignDocumentClosed","capabilities","textDocument","synchronization","dynamicRegistration","willSave","didSave","willSaveWaitUntil","workspace","didChangeConfiguration","featureManager","clientCapabilities","hasLspSupportedFile","promise","ILanguageServerManager","URL_NS","ILSPDocumentConnectionManager","Token","ILSPFeatureManager","ILSPCodeExtractorsManager","Method","sleep","timeout","resolve","setTimeout","untilReady","maxRetrials","interval","intervalModifier","i","Error","expandDottedPaths","obj","settings","key","parsed","expandPath","ServerNotification","ClientNotification","ServerRequest","ClientRequest","path","Object","create","curr","forEach","prop","DefaultMap","Map","defaultFactory","entries","super","k","getOrCreate","args","has","v","set","registerServerCapability","serverCapabilities","registration","serverCapabilitiesCopy","JSON","parse","stringify","method","registerOptions","providerName","unregisterServerCapability","unregistration","WebSocketMessageReader","AbstractMessageReader","socket","events","onMessage","readMessage","onError","fireError","onClose","code","name","fireClose","listen","callback","event","pop","undefined","splice","MessageKind","Private","ProtocolCoordinates","WebSocketMessageWriter","AbstractMessageWriter","errorCount","end","write","msg","content","send","e","ConsoleLogger","info","debug","LspWsConnection","openedUris","_isInitialized","_disposables","_rootUri","rootUri","isInitialized","webSocket","onConnection","logger","onopen","cb","onmessage","onerror","onclose","close","toSocket","messageReader","messageWriter","createMessageConnection","createWebSocketConnection","sendInitialize","registerCapabilityDisposable","onRequest","registrations","capabilityRegistration","err","unregisterCapabilityDisposable","unregisterations","capabilityUnregistration","disposable","clear","initializeParams","sendRequest","then","onServerInitialized","textDocumentMessage","languageId","text","version","sendNotification","sendChange","textDocumentChange","contentChanges","sendConfigurationChange","processId","workspaceFolders","ClientRequestHandler","emitter","request","clientRequested","resultForClient","ServerRequestHandler","_handle","bind","_handler","handler","clearHandler","serverRequested","responseForServer","createMethodMap","methods","handlerFactory","LSPConnection","_closingManually","_closeSignal","_errorSignal","_serverInitialized","_options","logAllCommunication","serverLanguage","documentsToOpen","clientNotifications","constructNotificationHandlers","closeSignal","errorSignal","serverInitialized","kind","sendSelectiveChange","changeEvent","_sendChange","provides","capability","getCompletionResolve","completionItem","constructClientRequestHandler","constructServerRequestHandler","initializationOptions","afterInitialized","signal","onNotification","serverNotifiedClient","clientNotifiedServer","clientRequests","updatedCapabilities","items","item","changeEvents","DocumentConnectionManager","onNewConnection","_forEachDocumentOfConnection","_closed","_ignoredLanguages","add","_initialized","updateServerConfigurations","initialConfigurations","closedManually","_connected","_disconnected","_documentsChanged","documents","adapters","Set","languageServerManager","setLanguageServerManager","initialized","connected","disconnected","documentsChanged","ready","getLanguageServerManager","connectDocumentSignals","onForeignDocumentClosed","disconnectDocumentSignals","delete","_host","registerAdapter","adapter","updateConfiguration","allServerSettings","setConfiguration","languageServerId","serverSettings","configuration","updateServerConfiguration","retryToConnect","reconnectDelay","retrialsLeft","success","firstTimeoutSeconds","secondTimeoutMinutes","_connectSocket","Math","round","updateLogging","setTrace","uris","solveUris","matchingServers","getMatchingServers","virtualDocumentUri","currentConnection","serverManager","wsBase","wsUrl","PageConfig","getOption","virtualDocumentsUri","serverOptions","spec","getMatchingSpecs","supportsInMemoryFiles","requires_documents_on_disk","baseUri","documentUri","URLExt","join","replace","base","server","_connections","_languageServerManager","onCreate","WebSocket","serverUri","CodeExtractorsManager","_extractorMap","_extractorMapAnyLanguage","getExtractors","cellType","hostLanguage","currentMap","register","extractor","extractorList","isEqual","self","other","line","ch","positionAtOffset","offset","lines","column","textLine","offsetAtPosition","position","linesIncludeBreaks","breakIncrement","isWithinRange","range","character","start","TextForeignCodeExtractor","standalone","isStandalone","fileExtension","file_extension","hasForeignCode","includes","extractForeignCode","extracts","Array","foreignCodeFragment","hostCode","foreignCode","virtualShift","FeatureManager","features","_featuresRegistered","featuresRegistered","feature","some","ft","LanguageServerManager","_sessions","_specs","_warningsEmitted","_ready","PromiseDelegate","_sessionsChanged","_enabled","_settings","ServerConnection","makeSettings","_baseUrl","baseUrl","getBaseUrl","_retries","retries","_retriesInterval","retriesInterval","_statusCode","_configuration","fetchSessions","isEnabled","specs","statusUrl","sessionsChanged","sessions","statusCode","enable","disable","matchingSessionsKeys","session","isMatchingSpec","sort","compareRanks","specification","response","makeRequest","status","ok","json","keys","assign","oldKeys","oldKey","oldId","lowerCaseLanguage","toLocaleLowerCase","languages","warnOnce","arg","a","b","_c","_d","aRank","rank","bRank","localeCompare","VirtualDocumentInfo","_document","VirtualDocument","blankLinesBetweenCells","_foreignDocumentClosed","_foreignDocumentOpened","_changed","parent","virtualLines","sourceLines","_editorToSourceLine","_foreignCodeExtractors","foreignCodeExtractors","instanceId","instancesCount","unusedStandaloneDocuments","_remainingLifetime","unusedDocuments","UpdateManager","updateBegan","_updateBeganSlot","blockAdded","_blockAddedSlot","_updateFinishedSlot","ceToCm","virtualId","ancestry","concat","idPath","encodedPath","encodeURI","linesPadding","repeat","lineBlocks","lastLine","linesInLastBlock","root","closeAllForeignDocuments","lastVirtualLine","lastSourceLine","documentAtSourcePosition","sourceLine","sourcePositionCe","editorLine","foreignDocumentsMap","sourcePositionCm","isWithinForeign","sourcePosition","transformFromEditorToRoot","shift","virtualPositionAtDocument","virtualLine","appendCodeBlock","block","editorShift","cellCode","sourceCellLines","prepareCodeBlock","skipInspect","cellCodeKept","extractorsForAnyLang","extractorsForCurrentLang","results","keptCellCode","chooseForeignDocument","foreignShift","closeForeign","parentHost","forwardClosedSignal","forwardOpenedSignal","closeExpiredDocuments","remainingLifetime","transformSourceToEditor","pos","transformVirtualToEditor","virtualPosition","transformVirtualToSource","getEditorAtVirtualLine","getEditorAtSourceLine","maybeEmitChanged","previousValue","Infinity","foreignExists","openForeign","host","_editorToSourceLineNew","blockData","collectDocuments","collected","_updateDone","_isUpdateInProgress","_updateLock","_blockAdded","_documentUpdated","_updateBegan","documentUpdated","_onUpdated","updateDone","withUpdateLock","fn","_canUpdate","blocks","update","codeBlock","manager","rootDocument","HASH_UNDEFINED","MAX_SAFE_INTEGER","argsTag","asyncTag","funcTag","genTag","nullTag","objectTag","proxyTag","undefinedTag","reIsHostCtor","reIsUint","typedArrayTags","uid","func","transform","freeGlobal","g","freeSelf","Function","freeExports","exports","nodeType","freeModule","module","moduleExports","freeProcess","process","nodeUtil","require","types","binding","nodeIsTypedArray","isTypedArray","arrayProto","prototype","funcProto","objectProto","coreJsData","funcToString","toString","maskSrcKey","exec","IE_PROTO","nativeObjectToString","objectCtorString","call","reIsNative","RegExp","Buffer","Symbol","Uint8Array","getPrototype","allocUnsafe","getPrototypeOf","objectCreate","propertyIsEnumerable","symToStringTag","toStringTag","defineProperty","getNative","nativeIsBuffer","isBuffer","nativeMax","max","nativeNow","Date","now","nativeCreate","baseCreate","object","proto","isObject","Hash","index","entry","ListCache","MapCache","Stack","__data__","size","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","array","getMapData","pairs","LARGE_ARRAY_SIZE","baseGetTag","isOwn","tag","unmasked","getRawTag","objectToString","baseIsArguments","isObjectLike","baseMerge","source","srcIndex","customizer","stack","iteratee","keysFunc","iterable","props","baseFor","srcValue","mergeFunc","safeGet","stacked","typedArray","buffer","arrayBuffer","newValue","isCommon","isArr","isArray","isBuff","isTyped","isArrayLike","copyArray","isDeep","slice","cloneBuffer","byteLength","byteOffset","Ctor","isPlainObject","isArguments","isNew","copyObject","keysIn","toPlainObject","isFunction","isPrototype","initCloneObject","baseMergeDeep","baseSetToString","string","identity","getValue","isMasked","test","toSource","baseIsNative","isIndex","setToString","count","lastCalled","stamp","remaining","arguments","apply","shortOut","isLength","baseUnary","inherited","isArg","isType","skipIndexes","n","baseTimes","String","arrayLikeKeys","nativeKeysIn","isProto","baseKeysIn","assigner","mergeWith","otherArgs","thisArg","overRest","baseRest","sources","guard","isIterateeCall","__createBinding","o","m","k2","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","__exportStar","p","BrowserMessageWriter","BrowserMessageReader","default","install","api_1","port","_onData","Emitter","_messageListener","fire","addEventListener","postMessage","handleError","reader","writer","NullLogger","ConnectionStrategy","is","connectionStrategy","MessageBuffer","AbstractMessageBuffer","encoding","asciiDecoder","TextDecoder","emptyBuffer","fromString","_encoding","TextEncoder","encode","decode","asNative","allocNative","ReadableStreamWrapper","RAL","listener","Disposable","removeEventListener","onEnd","onData","WritableStreamWrapper","_textEncoder","_ril","freeze","messageBuffer","applicationJson","encoder","charset","decoder","stream","asReadableStream","asWritableStream","timer","ms","handle","clearTimeout","setImmediate","setInterval","clearInterval","RIL","ProgressType","ProgressToken","ConnectionOptions","WriteableStreamMessageWriter","MessageWriter","ReadableStreamMessageReader","MessageReader","SharedArrayReceiverStrategy","SharedArraySenderStrategy","CancellationToken","CancellationTokenSource","Event","LRUCache","Touch","LinkedMap","ParameterStructures","NotificationType9","NotificationType8","NotificationType7","NotificationType6","NotificationType5","NotificationType4","NotificationType3","NotificationType2","NotificationType1","NotificationType0","NotificationType","ErrorCodes","ResponseError","RequestType9","RequestType8","RequestType7","RequestType6","RequestType5","RequestType4","RequestType3","RequestType2","RequestType1","RequestType0","RequestType","Message","MessageStrategy","CancellationStrategy","CancellationSenderStrategy","CancellationReceiverStrategy","ConnectionError","ConnectionErrors","LogTraceNotification","SetTraceNotification","TraceFormat","TraceValues","Trace","messages_1","linkedMap_1","disposable_1","events_1","cancellation_1","sharedArrayCancellation_1","messageReader_1","messageWriter_1","messageBuffer_1","connection_1","ral_1","Is","None","isCancellationRequested","onCancellationRequested","Cancelled","candidate","boolean","shortcutEvent","MutableToken","_isCancelled","cancel","_emitter","token","_token","RequestCancellationReceiverStrategy","IdCancellationReceiverStrategy","CancelNotification","ProgressNotification","StarRequestHandler","ConnectionState","Off","Messages","Compact","Verbose","toLowerCase","Text","setPrototypeOf","cancelUndispatched","createCancellationTokenSource","sendCancellation","conn","cleanup","receiver","sender","handleMessage","cancellationStrategy","messageStrategy","_logger","sequenceNumber","notificationSequenceNumber","unknownResponseSequenceNumber","starRequestHandler","requestHandlers","starNotificationHandler","notificationHandlers","progressHandlers","tracer","messageQueue","responsePromises","knownCanceledRequests","requestTokens","trace","traceFormat","New","errorEmitter","closeEmitter","unhandledNotificationEmitter","unhandledProgressEmitter","disposeEmitter","createRequestQueueKey","_message","isListening","Listening","isClosed","Closed","Disposed","closeHandler","triggerMessageQueue","processMessageQueue","isRequest","requestMessage","reply","resultOrError","startTime","jsonrpc","toJson","traceSendingResponse","replyError","stringifyTrace","logLSPMessage","traceReceivedRequest","element","requestHandler","tokenKey","cancellationSource","handlerResult","numberOfParams","InvalidParams","parameterStructures","byName","byPosition","InternalError","replySuccess","MethodNotFound","handleRequest","isNotification","notificationHandler","cancelId","traceReceivedNotification","handleNotification","isResponse","responseMessage","responsePromise","timerStart","traceReceivedResponse","handleResponse","number","responseHandler","handleInvalidMessage","toCancel","strategy","cancellationToken","queue","addMessageToQueue","lspMessage","isLSPMessage","timestamp","throwIfClosedOrDisposed","undefinedToNull","param","nullToUndefined","isNamedParam","computeSingleParam","auto","computeMessageParams","messageParams","first","paramStart","paramEnd","notificationMessage","traceSendingNotification","onProgress","_type","sendProgress","onUnhandledProgress","throwIfNotListening","last","traceSendingRequest","enableCancellation","r","MessageWriteError","hasPendingResponse","_value","_tracer","sendNotificationOrTraceOptions","_sendNotification","_traceFormat","onUnhandledNotification","onDispose","PendingResponseRejected","AlreadyListening","throwIfListening","inspect","verbose","_disposable","CallbackList","bucket","_callbacks","_contexts","remove","foundCallbackWithDifferentContext","len","invoke","ret","callbacks","contexts","isEmpty","_event","thisArgs","disposables","onFirstListenerAdd","_noop","onLastListenerRemove","stringArray","Number","every","elem","First","AsOld","Last","AsNew","_map","_head","_tail","_size","_state","touch","next","previous","addItemLast","addItemFirst","removeItem","callbackfn","current","iterator","done","trimOld","newSize","currentSize","toJSON","fromJSON","limit","ratio","_limit","_ratio","min","checkTrim","peek","_chunks","_totalLength","append","chunk","toAppend","tryReadHeaders","lowerCaseKeys","chunkIndex","chunkBytesRead","row","_read","headers","header","substr","trim","tryReadBody","numberOfBytes","byteCount","resultOffset","chunkPart","semaphore_1","ResolvedMessageReaderOptions","onPartialMessage","partialMessageEmitter","asError","firePartialMessage","fromOptions","contentDecoder","contentDecoders","contentTypeDecoder","contentTypeDecoders","readable","_partialMessageTimeout","nextMessageLength","messageToken","readSemaphore","Semaphore","partialMessageTimeout","partialMessageTimer","contentLength","parseInt","isNaN","setPartialMessageTimer","clearPartialMessageTimer","lock","bytes","waitingTime","ResolvedMessageWriterOptions","contentTypeEncoder","contentEncoder","writeSemaphore","doWrite","AbstractMessageSignature","ParseError","InvalidRequest","jsonrpcReservedErrorRangeStart","serverErrorStart","MessageReadError","ConnectionInactive","ServerNotInitialized","UnknownErrorCode","jsonrpcReservedErrorRangeEnd","serverErrorEnd","_parameterStructures","_ral","ral","capacity","_capacity","_active","_waiting","thunk","runNext","active","doRunNext","CancellationState","Continue","buffers","SharedArrayBuffer","Int32Array","$cancellationData","_conn","Atomics","store","SharedArrayBufferCancellationToken","SharedArrayBufferCancellationTokenSource"],"sourceRoot":""}