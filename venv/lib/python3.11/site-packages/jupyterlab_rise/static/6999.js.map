{"version":3,"file":"6999.bundle.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/documentsearch/lib/searchprovider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/documentsearch/lib/providers/genericsearchprovider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/documentsearch/lib/providers/textprovider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/documentsearch/lib/searchmodel.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/documentsearch/lib/searchview.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/documentsearch/lib/searchproviderregistry.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/documentsearch/lib/tokens.js"],"sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Signal } from '@lumino/signaling';\n/**\n * Abstract class implementing the search provider interface.\n */\nexport class SearchProvider {\n    /**\n     * Constructor\n     *\n     * @param widget The widget to search in\n     */\n    constructor(widget) {\n        this.widget = widget;\n        this._stateChanged = new Signal(this);\n        this._filtersChanged = new Signal(this);\n        this._disposed = false;\n    }\n    /**\n     * Signal indicating that something in the search has changed, so the UI should update\n     */\n    get stateChanged() {\n        return this._stateChanged;\n    }\n    /**\n     * Signal indicating that filter definition changed.\n     */\n    get filtersChanged() {\n        return this._filtersChanged;\n    }\n    /**\n     * The current index of the selected match.\n     */\n    get currentMatchIndex() {\n        return null;\n    }\n    /**\n     * Whether the search provider is disposed or not.\n     */\n    get isDisposed() {\n        return this._disposed;\n    }\n    /**\n     * The number of matches.\n     */\n    get matchesCount() {\n        return null;\n    }\n    /**\n     * Dispose of the resources held by the search provider.\n     *\n     * #### Notes\n     * If the object's `dispose` method is called more than once, all\n     * calls made after the first will be a no-op.\n     *\n     * #### Undefined Behavior\n     * It is undefined behavior to use any functionality of the object\n     * after it has been disposed unless otherwise explicitly noted.\n     */\n    dispose() {\n        if (this._disposed) {\n            return;\n        }\n        this._disposed = true;\n        Signal.clearData(this);\n    }\n    /**\n     * Get an initial query value if applicable so that it can be entered\n     * into the search box as an initial query\n     *\n     * @returns Initial value used to populate the search box.\n     */\n    getInitialQuery() {\n        return '';\n    }\n    /**\n     * Get the filters for the given provider.\n     *\n     * @returns The filters.\n     *\n     * ### Notes\n     * TODO For now it only supports boolean filters (represented with checkboxes)\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * Utility for copying the letter case from old to new text.\n     */\n    static preserveCase(oldText, newText) {\n        if (oldText.toUpperCase() === oldText) {\n            return newText.toUpperCase();\n        }\n        if (oldText.toLowerCase() === oldText) {\n            return newText.toLowerCase();\n        }\n        if (toSentenceCase(oldText) === oldText) {\n            return toSentenceCase(newText);\n        }\n        return newText;\n    }\n}\n/**\n * Capitalise first letter of provided word.\n */\nfunction toSentenceCase([first = '', ...suffix]) {\n    return first.toUpperCase() + '' + suffix.join('').toLowerCase();\n}\n//# sourceMappingURL=searchprovider.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Widget } from '@lumino/widgets';\nimport { SearchProvider } from '../searchprovider';\nexport const FOUND_CLASSES = ['cm-string', 'cm-overlay', 'cm-searching'];\nconst SELECTED_CLASSES = ['CodeMirror-selectedtext'];\n/**\n * HTML search engine\n */\nclass HTMLSearchEngine {\n    /**\n     * Search for a `query` in a DOM tree.\n     *\n     * @param query Regular expression to search\n     * @param rootNode DOM root node to search in\n     * @returns The list of matches\n     */\n    static search(query, rootNode) {\n        if (!(rootNode instanceof Node)) {\n            console.warn('Unable to search with HTMLSearchEngine the provided object.', rootNode);\n            return Promise.resolve([]);\n        }\n        if (!query.global) {\n            query = new RegExp(query.source, query.flags + 'g');\n        }\n        const matches = [];\n        const walker = document.createTreeWalker(rootNode, NodeFilter.SHOW_TEXT, {\n            acceptNode: node => {\n                // Filter subtrees of UNSUPPORTED_ELEMENTS and nodes that\n                // do not contain our search text\n                let parentElement = node.parentElement;\n                while (parentElement !== rootNode) {\n                    if (parentElement.nodeName in HTMLSearchEngine.UNSUPPORTED_ELEMENTS) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n                    parentElement = parentElement.parentElement;\n                }\n                return query.test(node.textContent)\n                    ? NodeFilter.FILTER_ACCEPT\n                    : NodeFilter.FILTER_REJECT;\n            }\n        });\n        let node = null;\n        while ((node = walker.nextNode()) !== null) {\n            // Reset query index\n            query.lastIndex = 0;\n            let match = null;\n            while ((match = query.exec(node.textContent)) !== null) {\n                matches.push({\n                    text: match[0],\n                    position: match.index,\n                    node: node\n                });\n            }\n        }\n        return Promise.resolve(matches);\n    }\n}\n/**\n * We choose opt out as most node types should be searched (e.g. script).\n * Even nodes like <data>, could have textContent we care about.\n *\n * Note: nodeName is capitalized, so we do the same here\n */\nHTMLSearchEngine.UNSUPPORTED_ELEMENTS = {\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Document_metadata\n    BASE: true,\n    HEAD: true,\n    LINK: true,\n    META: true,\n    STYLE: true,\n    TITLE: true,\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Sectioning_root\n    BODY: true,\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Content_sectioning\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Text_content\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Inline_text_semantics\n    // Above is searched\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Image_and_multimedia\n    AREA: true,\n    AUDIO: true,\n    IMG: true,\n    MAP: true,\n    TRACK: true,\n    VIDEO: true,\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Embedded_content\n    APPLET: true,\n    EMBED: true,\n    IFRAME: true,\n    NOEMBED: true,\n    OBJECT: true,\n    PARAM: true,\n    PICTURE: true,\n    SOURCE: true,\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Scripting\n    CANVAS: true,\n    NOSCRIPT: true,\n    SCRIPT: true,\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Demarcating_edits\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Table_content\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Forms\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Interactive_elements\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element#Web_Components\n    // Above is searched\n    // Other:\n    SVG: true\n};\nexport { HTMLSearchEngine };\n/**\n * Generic DOM tree search provider.\n */\nexport class GenericSearchProvider extends SearchProvider {\n    constructor() {\n        super(...arguments);\n        /**\n         * Set to true if the widget under search is read-only, false\n         * if it is editable.  Will be used to determine whether to show\n         * the replace option.\n         */\n        this.isReadOnly = true;\n        this._matches = [];\n        this._mutationObserver = new MutationObserver(this._onWidgetChanged.bind(this));\n        this._markNodes = new Array();\n    }\n    /**\n     * Report whether or not this provider has the ability to search on the given object\n     */\n    static isApplicable(domain) {\n        return domain instanceof Widget;\n    }\n    /**\n     * Instantiate a generic search provider for the widget.\n     *\n     * #### Notes\n     * The widget provided is always checked using `isApplicable` before calling\n     * this factory.\n     *\n     * @param widget The widget to search on\n     * @param registry The search provider registry\n     * @param translator [optional] The translator object\n     *\n     * @returns The search provider on the widget\n     */\n    static createNew(widget, registry, translator) {\n        return new GenericSearchProvider(widget);\n    }\n    /**\n     * The current index of the selected match.\n     */\n    get currentMatchIndex() {\n        return this._currentMatchIndex >= 0 ? this._currentMatchIndex : null;\n    }\n    /**\n     * The current match\n     */\n    get currentMatch() {\n        var _a;\n        return (_a = this._matches[this._currentMatchIndex]) !== null && _a !== void 0 ? _a : null;\n    }\n    /**\n     * The current matches\n     */\n    get matches() {\n        // Ensure that no other fn can overwrite matches index property\n        // We shallow clone each node\n        return this._matches\n            ? this._matches.map(m => Object.assign({}, m))\n            : this._matches;\n    }\n    /**\n     * The number of matches.\n     */\n    get matchesCount() {\n        return this._matches.length;\n    }\n    /**\n     * Clear currently highlighted match.\n     */\n    clearHighlight() {\n        if (this._currentMatchIndex >= 0) {\n            const hit = this._markNodes[this._currentMatchIndex];\n            hit.classList.remove(...SELECTED_CLASSES);\n        }\n        this._currentMatchIndex = -1;\n        return Promise.resolve();\n    }\n    /**\n     * Dispose of the resources held by the search provider.\n     *\n     * #### Notes\n     * If the object's `dispose` method is called more than once, all\n     * calls made after the first will be a no-op.\n     *\n     * #### Undefined Behavior\n     * It is undefined behavior to use any functionality of the object\n     * after it has been disposed unless otherwise explicitly noted.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this.endQuery().catch(reason => {\n            console.error(`Failed to end search query.`, reason);\n        });\n        super.dispose();\n    }\n    /**\n     * Move the current match indicator to the next match.\n     *\n     * @param loop Whether to loop within the matches list.\n     *\n     * @returns A promise that resolves once the action has completed.\n     */\n    async highlightNext(loop) {\n        var _a;\n        return (_a = this._highlightNext(false, loop !== null && loop !== void 0 ? loop : true)) !== null && _a !== void 0 ? _a : undefined;\n    }\n    /**\n     * Move the current match indicator to the previous match.\n     *\n     * @param loop Whether to loop within the matches list.\n     *\n     * @returns A promise that resolves once the action has completed.\n     */\n    async highlightPrevious(loop) {\n        var _a;\n        return (_a = this._highlightNext(true, loop !== null && loop !== void 0 ? loop : true)) !== null && _a !== void 0 ? _a : undefined;\n    }\n    /**\n     * Replace the currently selected match with the provided text\n     *\n     * @param newText The replacement text\n     * @param loop Whether to loop within the matches list.\n     *\n     * @returns A promise that resolves with a boolean indicating whether a replace occurred.\n     */\n    async replaceCurrentMatch(newText, loop) {\n        return Promise.resolve(false);\n    }\n    /**\n     * Replace all matches in the notebook with the provided text\n     *\n     * @param newText The replacement text\n     *\n     * @returns A promise that resolves with a boolean indicating whether a replace occurred.\n     */\n    async replaceAllMatches(newText) {\n        // This is read only, but we could loosen this in theory for input boxes...\n        return Promise.resolve(false);\n    }\n    /**\n     * Initialize the search using the provided options.  Should update the UI\n     * to highlight all matches and \"select\" whatever the first match should be.\n     *\n     * @param query A RegExp to be use to perform the search\n     * @param filters Filter parameters to pass to provider\n     */\n    async startQuery(query, filters = {}) {\n        await this.endQuery();\n        this._query = query;\n        if (query === null) {\n            return Promise.resolve();\n        }\n        const matches = await HTMLSearchEngine.search(query, this.widget.node);\n        // Transform the DOM\n        let nodeIdx = 0;\n        while (nodeIdx < matches.length) {\n            let activeNode = matches[nodeIdx].node;\n            let parent = activeNode.parentNode;\n            let subMatches = [matches[nodeIdx]];\n            while (++nodeIdx < matches.length &&\n                matches[nodeIdx].node === activeNode) {\n                subMatches.unshift(matches[nodeIdx]);\n            }\n            const markedNodes = subMatches.map(match => {\n                // TODO: support tspan for svg when svg support is added\n                const markedNode = document.createElement('mark');\n                markedNode.classList.add(...FOUND_CLASSES);\n                markedNode.textContent = match.text;\n                const newNode = activeNode.splitText(match.position);\n                newNode.textContent = newNode.textContent.slice(match.text.length);\n                parent.insertBefore(markedNode, newNode);\n                return markedNode;\n            });\n            // Insert node in reverse order as we replace from last to first\n            // to maintain match position.\n            for (let i = markedNodes.length - 1; i >= 0; i--) {\n                this._markNodes.push(markedNodes[i]);\n            }\n        }\n        // Watch for future changes:\n        this._mutationObserver.observe(this.widget.node, \n        // https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit\n        {\n            attributes: false,\n            characterData: true,\n            childList: true,\n            subtree: true\n        });\n        this._matches = matches;\n    }\n    /**\n     * Clear the highlighted matches and any internal state.\n     */\n    async endQuery() {\n        this._mutationObserver.disconnect();\n        this._markNodes.forEach(el => {\n            const parent = el.parentNode;\n            parent.replaceChild(document.createTextNode(el.textContent), el);\n            parent.normalize();\n        });\n        this._markNodes = [];\n        this._matches = [];\n        this._currentMatchIndex = -1;\n    }\n    _highlightNext(reverse, loop) {\n        if (this._matches.length === 0) {\n            return null;\n        }\n        if (this._currentMatchIndex === -1) {\n            this._currentMatchIndex = reverse ? this.matches.length - 1 : 0;\n        }\n        else {\n            const hit = this._markNodes[this._currentMatchIndex];\n            hit.classList.remove(...SELECTED_CLASSES);\n            this._currentMatchIndex = reverse\n                ? this._currentMatchIndex - 1\n                : this._currentMatchIndex + 1;\n            if (loop &&\n                (this._currentMatchIndex < 0 ||\n                    this._currentMatchIndex >= this._matches.length)) {\n                // Cheap way to make this a circular buffer\n                this._currentMatchIndex =\n                    (this._currentMatchIndex + this._matches.length) %\n                        this._matches.length;\n            }\n        }\n        if (this._currentMatchIndex >= 0 &&\n            this._currentMatchIndex < this._matches.length) {\n            const hit = this._markNodes[this._currentMatchIndex];\n            hit.classList.add(...SELECTED_CLASSES);\n            // If not in view, scroll just enough to see it\n            if (!elementInViewport(hit)) {\n                hit.scrollIntoView(reverse);\n            }\n            hit.focus();\n            return this._matches[this._currentMatchIndex];\n        }\n        else {\n            this._currentMatchIndex = -1;\n            return null;\n        }\n    }\n    async _onWidgetChanged(mutations, observer) {\n        this._currentMatchIndex = -1;\n        // This is typically cheap, but we do not control the rate of change or size of the output\n        await this.startQuery(this._query);\n        this._stateChanged.emit();\n    }\n}\nfunction elementInViewport(el) {\n    const boundingClientRect = el.getBoundingClientRect();\n    return (boundingClientRect.top >= 0 &&\n        boundingClientRect.bottom <=\n            (window.innerHeight || document.documentElement.clientHeight) &&\n        boundingClientRect.left >= 0 &&\n        boundingClientRect.right <=\n            (window.innerWidth || document.documentElement.clientWidth));\n}\n//# sourceMappingURL=genericsearchprovider.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * Search provider for text/plain\n */\nexport const TextSearchEngine = {\n    /**\n     * Search for regular expression matches in a string.\n     *\n     * @param query Query regular expression\n     * @param data String to look into\n     * @returns List of matches\n     */\n    search(query, data) {\n        // If data is not a string, try to JSON serialize the data.\n        if (typeof data !== 'string') {\n            try {\n                data = JSON.stringify(data);\n            }\n            catch (reason) {\n                console.warn('Unable to search with TextSearchEngine non-JSON serializable object.', reason, data);\n                return Promise.resolve([]);\n            }\n        }\n        if (!query.global) {\n            query = new RegExp(query.source, query.flags + 'g');\n        }\n        const matches = new Array();\n        let match = null;\n        while ((match = query.exec(data)) !== null) {\n            matches.push({\n                text: match[0],\n                position: match.index\n            });\n        }\n        return Promise.resolve(matches);\n    }\n};\n//# sourceMappingURL=textprovider.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { VDomModel } from '@jupyterlab/ui-components';\nimport { Debouncer } from '@lumino/polling';\nimport { Signal } from '@lumino/signaling';\n/**\n * Search in a document model.\n */\nexport class SearchDocumentModel extends VDomModel {\n    /**\n     * Search document model\n     * @param searchProvider Provider for the current document\n     * @param searchDebounceTime Debounce search time\n     */\n    constructor(searchProvider, searchDebounceTime) {\n        super();\n        this.searchProvider = searchProvider;\n        this._caseSensitive = false;\n        this._disposed = new Signal(this);\n        this._parsingError = '';\n        this._preserveCase = false;\n        this._initialQuery = '';\n        this._filters = {};\n        this._replaceText = '';\n        this._searchExpression = '';\n        this._useRegex = false;\n        this._wholeWords = false;\n        this._filters = {};\n        if (this.searchProvider.getFilters) {\n            const filters = this.searchProvider.getFilters();\n            for (const filter in filters) {\n                this._filters[filter] = filters[filter].default;\n            }\n        }\n        searchProvider.stateChanged.connect(this.refresh, this);\n        this._searchDebouncer = new Debouncer(() => {\n            this._updateSearch().catch(reason => {\n                console.error('Failed to update search on document.', reason);\n            });\n        }, searchDebounceTime);\n    }\n    /**\n     * Whether the search is case sensitive or not.\n     */\n    get caseSensitive() {\n        return this._caseSensitive;\n    }\n    set caseSensitive(v) {\n        if (this._caseSensitive !== v) {\n            this._caseSensitive = v;\n            this.stateChanged.emit();\n            this.refresh();\n        }\n    }\n    /**\n     * Current highlighted match index.\n     */\n    get currentIndex() {\n        return this.searchProvider.currentMatchIndex;\n    }\n    /**\n     * A signal emitted when the object is disposed.\n     */\n    get disposed() {\n        return this._disposed;\n    }\n    /**\n     * Filter values.\n     */\n    get filters() {\n        return this._filters;\n    }\n    /**\n     * Filter definitions for the current provider.\n     */\n    get filtersDefinition() {\n        var _a, _b, _c;\n        return (_c = (_b = (_a = this.searchProvider).getFilters) === null || _b === void 0 ? void 0 : _b.call(_a)) !== null && _c !== void 0 ? _c : {};\n    }\n    /**\n     * Filter definitions changed.\n     */\n    get filtersDefinitionChanged() {\n        return this.searchProvider.filtersChanged || null;\n    }\n    /**\n     * The initial query string.\n     */\n    get initialQuery() {\n        return this._initialQuery;\n    }\n    set initialQuery(v) {\n        if (v) {\n            // Usually the value comes from user selection (set by search provider).\n            this._initialQuery = v;\n        }\n        else {\n            // If user selection is empty, we fall back to most recent value (if any).\n            this._initialQuery = this._searchExpression;\n        }\n    }\n    /**\n     * Initial query as suggested by provider.\n     *\n     * A common choice is the text currently selected by the user.\n     */\n    get suggestedInitialQuery() {\n        return this.searchProvider.getInitialQuery();\n    }\n    /**\n     * Whether the document is read-only or not.\n     */\n    get isReadOnly() {\n        return this.searchProvider.isReadOnly;\n    }\n    /**\n     * Replace options support.\n     */\n    get replaceOptionsSupport() {\n        return this.searchProvider.replaceOptionsSupport;\n    }\n    /**\n     * Parsing regular expression error message.\n     */\n    get parsingError() {\n        return this._parsingError;\n    }\n    /**\n     * Whether to preserve case when replacing.\n     */\n    get preserveCase() {\n        return this._preserveCase;\n    }\n    set preserveCase(v) {\n        if (this._preserveCase !== v) {\n            this._preserveCase = v;\n            this.stateChanged.emit();\n            this.refresh();\n        }\n    }\n    /**\n     * Replacement expression\n     */\n    get replaceText() {\n        return this._replaceText;\n    }\n    set replaceText(v) {\n        if (this._replaceText !== v) {\n            this._replaceText = v;\n            this.stateChanged.emit();\n        }\n    }\n    /**\n     * Search expression\n     */\n    get searchExpression() {\n        return this._searchExpression;\n    }\n    set searchExpression(v) {\n        if (this._searchExpression !== v) {\n            this._searchExpression = v;\n            this.stateChanged.emit();\n            this.refresh();\n        }\n    }\n    /**\n     * Total number of matches.\n     */\n    get totalMatches() {\n        return this.searchProvider.matchesCount;\n    }\n    /**\n     * Whether to use regular expression or not.\n     */\n    get useRegex() {\n        return this._useRegex;\n    }\n    set useRegex(v) {\n        if (this._useRegex !== v) {\n            this._useRegex = v;\n            this.stateChanged.emit();\n            this.refresh();\n        }\n    }\n    /**\n     * Whether to match whole words or not.\n     */\n    get wholeWords() {\n        return this._wholeWords;\n    }\n    set wholeWords(v) {\n        if (this._wholeWords !== v) {\n            this._wholeWords = v;\n            this.stateChanged.emit();\n            this.refresh();\n        }\n    }\n    /**\n     * Dispose the model.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        if (this._searchExpression) {\n            this.endQuery().catch(reason => {\n                console.error(`Failed to end query '${this._searchExpression}.`, reason);\n            });\n        }\n        this.searchProvider.stateChanged.disconnect(this.refresh, this);\n        this._searchDebouncer.dispose();\n        super.dispose();\n    }\n    /**\n     * End the query.\n     */\n    async endQuery() {\n        await this.searchProvider.endQuery();\n        this.stateChanged.emit();\n    }\n    /**\n     * Highlight the next match.\n     */\n    async highlightNext() {\n        await this.searchProvider.highlightNext();\n        // Emit state change as the index needs to be updated\n        this.stateChanged.emit();\n    }\n    /**\n     * Highlight the previous match\n     */\n    async highlightPrevious() {\n        await this.searchProvider.highlightPrevious();\n        // Emit state change as the index needs to be updated\n        this.stateChanged.emit();\n    }\n    /**\n     * Refresh search\n     */\n    refresh() {\n        this._searchDebouncer.invoke().catch(reason => {\n            console.error('Failed to invoke search document debouncer.', reason);\n        });\n    }\n    /**\n     * Replace all matches.\n     */\n    async replaceAllMatches() {\n        await this.searchProvider.replaceAllMatches(this._replaceText, {\n            preserveCase: this.preserveCase,\n            regularExpression: this.useRegex\n        });\n        // Emit state change as the index needs to be updated\n        this.stateChanged.emit();\n    }\n    /**\n     * Replace the current match.\n     */\n    async replaceCurrentMatch() {\n        await this.searchProvider.replaceCurrentMatch(this._replaceText, true, {\n            preserveCase: this.preserveCase,\n            regularExpression: this.useRegex\n        });\n        // Emit state change as the index needs to be updated\n        this.stateChanged.emit();\n    }\n    /**\n     * Set the value of a given filter.\n     *\n     * @param name Filter name\n     * @param v Filter value\n     */\n    async setFilter(name, v) {\n        if (this._filters[name] !== v) {\n            if (this.searchProvider.validateFilter) {\n                this._filters[name] = await this.searchProvider.validateFilter(name, v);\n                // If the value was changed\n                if (this._filters[name] === v) {\n                    this.stateChanged.emit();\n                    this.refresh();\n                }\n            }\n            else {\n                this._filters[name] = v;\n                this.stateChanged.emit();\n                this.refresh();\n            }\n        }\n    }\n    async _updateSearch() {\n        if (this._parsingError) {\n            this._parsingError = '';\n            this.stateChanged.emit();\n        }\n        try {\n            const query = this.searchExpression\n                ? Private.parseQuery(this.searchExpression, this.caseSensitive, this.useRegex, this.wholeWords)\n                : null;\n            if (query) {\n                await this.searchProvider.startQuery(query, this._filters);\n                // Emit state change as the index needs to be updated\n                this.stateChanged.emit();\n            }\n        }\n        catch (reason) {\n            this._parsingError = reason.toString();\n            this.stateChanged.emit();\n            console.error(`Failed to parse expression ${this.searchExpression}`, reason);\n        }\n    }\n}\nvar Private;\n(function (Private) {\n    /**\n     * Build the regular expression to use for searching.\n     *\n     * @param queryString Query string\n     * @param caseSensitive Whether the search is case sensitive or not\n     * @param regex Whether the expression is a regular expression\n     * @returns The regular expression to use\n     */\n    function parseQuery(queryString, caseSensitive, regex, wholeWords) {\n        const flag = caseSensitive ? 'gm' : 'gim';\n        // escape regex characters in query if its a string search\n        let queryText = regex\n            ? queryString\n            : queryString.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&');\n        if (wholeWords) {\n            queryText = '\\\\b' + queryText + '\\\\b';\n        }\n        const ret = new RegExp(queryText, flag);\n        // If the empty string is hit, the search logic will freeze the browser tab\n        //  Trying /^/ or /$/ on the codemirror search demo, does not find anything.\n        //  So this is a limitation of the editor.\n        if (ret.test('')) {\n            return null;\n        }\n        return ret;\n    }\n    Private.parseQuery = parseQuery;\n})(Private || (Private = {}));\n//# sourceMappingURL=searchmodel.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { caretDownEmptyThinIcon, caretDownIcon, caretRightIcon, caretUpEmptyThinIcon, caseSensitiveIcon, classes, closeIcon, filterDotIcon, filterIcon, regexIcon, VDomRenderer, wordIcon } from '@jupyterlab/ui-components';\nimport { Signal } from '@lumino/signaling';\nimport { UseSignal } from '@jupyterlab/apputils';\nimport * as React from 'react';\nimport { useCallback, useEffect, useState } from 'react';\nconst OVERLAY_CLASS = 'jp-DocumentSearch-overlay';\nconst OVERLAY_ROW_CLASS = 'jp-DocumentSearch-overlay-row';\nconst INPUT_CLASS = 'jp-DocumentSearch-input';\nconst INPUT_WRAPPER_CLASS = 'jp-DocumentSearch-input-wrapper';\nconst INPUT_BUTTON_CLASS_OFF = 'jp-DocumentSearch-input-button-off';\nconst INPUT_BUTTON_CLASS_ON = 'jp-DocumentSearch-input-button-on';\nconst INDEX_COUNTER_CLASS = 'jp-DocumentSearch-index-counter';\nconst UP_DOWN_BUTTON_WRAPPER_CLASS = 'jp-DocumentSearch-up-down-wrapper';\nconst UP_DOWN_BUTTON_CLASS = 'jp-DocumentSearch-up-down-button';\nconst FILTER_BUTTON_CLASS = 'jp-DocumentSearch-filter-button';\nconst FILTER_BUTTON_ENABLED_CLASS = 'jp-DocumentSearch-filter-button-enabled';\nconst REGEX_ERROR_CLASS = 'jp-DocumentSearch-regex-error';\nconst SEARCH_OPTIONS_CLASS = 'jp-DocumentSearch-search-options';\nconst SEARCH_FILTER_DISABLED_CLASS = 'jp-DocumentSearch-search-filter-disabled';\nconst SEARCH_FILTER_CLASS = 'jp-DocumentSearch-search-filter';\nconst REPLACE_BUTTON_CLASS = 'jp-DocumentSearch-replace-button';\nconst REPLACE_BUTTON_WRAPPER_CLASS = 'jp-DocumentSearch-replace-button-wrapper';\nconst REPLACE_WRAPPER_CLASS = 'jp-DocumentSearch-replace-wrapper-class';\nconst REPLACE_TOGGLE_CLASS = 'jp-DocumentSearch-replace-toggle';\nconst TOGGLE_WRAPPER = 'jp-DocumentSearch-toggle-wrapper';\nconst TOGGLE_PLACEHOLDER = 'jp-DocumentSearch-toggle-placeholder';\nconst BUTTON_CONTENT_CLASS = 'jp-DocumentSearch-button-content';\nconst BUTTON_WRAPPER_CLASS = 'jp-DocumentSearch-button-wrapper';\nconst SPACER_CLASS = 'jp-DocumentSearch-spacer';\nfunction SearchInput(props) {\n    const [rows, setRows] = useState(1);\n    const updateRows = useCallback((event) => {\n        var _a;\n        const element = event\n            ? event.target\n            : (_a = props.inputRef) === null || _a === void 0 ? void 0 : _a.current;\n        if (element) {\n            setRows(element.value.split(/\\n/).length);\n        }\n    }, []);\n    useEffect(() => {\n        var _a, _b;\n        // For large part, `focusSearchInput()` is responsible for focusing and\n        // selecting the search input, however when `initialValue` changes, this\n        // triggers React re-render to update `defaultValue` (implemented via `key`)\n        // which means that `focusSearchInput` is no longer effective as it has\n        // already fired before the re-render, hence we use this conditional effect.\n        (_b = (_a = props.inputRef) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.select();\n        // After any change to initial value we also want to update rows in case if\n        // multi-line text was selected.\n        updateRows();\n    }, [props.initialValue]);\n    return (React.createElement(\"textarea\", { placeholder: props.placeholder, className: INPUT_CLASS, rows: rows, onChange: e => {\n            props.onChange(e);\n            updateRows(e);\n        }, onKeyDown: e => {\n            props.onKeyDown(e);\n            updateRows(e);\n        }, \n        // Setting a key ensures that `defaultValue` will become updated\n        // when the initial value changes.\n        key: props.autoUpdate ? props.initialValue : null, tabIndex: 0, ref: props.inputRef, title: props.title, defaultValue: props.initialValue, autoFocus: props.autoFocus }));\n}\nfunction SearchEntry(props) {\n    var _a;\n    const trans = ((_a = props.translator) !== null && _a !== void 0 ? _a : nullTranslator).load('jupyterlab');\n    const caseButtonToggleClass = classes(props.caseSensitive ? INPUT_BUTTON_CLASS_ON : INPUT_BUTTON_CLASS_OFF, BUTTON_CONTENT_CLASS);\n    const regexButtonToggleClass = classes(props.useRegex ? INPUT_BUTTON_CLASS_ON : INPUT_BUTTON_CLASS_OFF, BUTTON_CONTENT_CLASS);\n    const wordButtonToggleClass = classes(props.wholeWords ? INPUT_BUTTON_CLASS_ON : INPUT_BUTTON_CLASS_OFF, BUTTON_CONTENT_CLASS);\n    const wrapperClass = INPUT_WRAPPER_CLASS;\n    return (React.createElement(\"div\", { className: wrapperClass },\n        React.createElement(SearchInput, { placeholder: trans.__('Find'), onChange: e => props.onChange(e), onKeyDown: e => props.onKeydown(e), inputRef: props.inputRef, initialValue: props.initialSearchText, title: trans.__('Find'), autoFocus: true, autoUpdate: true }),\n        React.createElement(\"button\", { className: BUTTON_WRAPPER_CLASS, onClick: () => {\n                props.onCaseSensitiveToggled();\n            }, tabIndex: 0, title: trans.__('Match Case') },\n            React.createElement(caseSensitiveIcon.react, { className: caseButtonToggleClass, tag: \"span\" })),\n        React.createElement(\"button\", { className: BUTTON_WRAPPER_CLASS, onClick: () => props.onWordToggled(), tabIndex: 0, title: trans.__('Match Whole Word') },\n            React.createElement(wordIcon.react, { className: wordButtonToggleClass, tag: \"span\" })),\n        React.createElement(\"button\", { className: BUTTON_WRAPPER_CLASS, onClick: () => props.onRegexToggled(), tabIndex: 0, title: trans.__('Use Regular Expression') },\n            React.createElement(regexIcon.react, { className: regexButtonToggleClass, tag: \"span\" }))));\n}\nfunction ReplaceEntry(props) {\n    var _a, _b, _c;\n    const trans = ((_a = props.translator) !== null && _a !== void 0 ? _a : nullTranslator).load('jupyterlab');\n    const preserveCaseButtonToggleClass = classes(props.preserveCase ? INPUT_BUTTON_CLASS_ON : INPUT_BUTTON_CLASS_OFF, BUTTON_CONTENT_CLASS);\n    return (React.createElement(\"div\", { className: REPLACE_WRAPPER_CLASS },\n        React.createElement(\"div\", { className: INPUT_WRAPPER_CLASS },\n            React.createElement(SearchInput, { placeholder: trans.__('Replace'), initialValue: (_b = props.replaceText) !== null && _b !== void 0 ? _b : '', onKeyDown: e => props.onReplaceKeydown(e), onChange: e => props.onChange(e), title: trans.__('Replace'), autoFocus: false, autoUpdate: false }),\n            ((_c = props.replaceOptionsSupport) === null || _c === void 0 ? void 0 : _c.preserveCase) ? (React.createElement(\"button\", { className: BUTTON_WRAPPER_CLASS, onClick: () => props.onPreserveCaseToggled(), tabIndex: 0, title: trans.__('Preserve Case') },\n                React.createElement(caseSensitiveIcon.react, { className: preserveCaseButtonToggleClass, tag: \"span\" }))) : null),\n        React.createElement(\"button\", { className: REPLACE_BUTTON_WRAPPER_CLASS, onClick: () => props.onReplaceCurrent(), tabIndex: 0 },\n            React.createElement(\"span\", { className: `${REPLACE_BUTTON_CLASS} ${BUTTON_CONTENT_CLASS}`, tabIndex: 0 }, trans.__('Replace'))),\n        React.createElement(\"button\", { className: REPLACE_BUTTON_WRAPPER_CLASS, tabIndex: 0, onClick: () => props.onReplaceAll() },\n            React.createElement(\"span\", { className: `${REPLACE_BUTTON_CLASS} ${BUTTON_CONTENT_CLASS}`, tabIndex: -1 }, trans.__('Replace All')))));\n}\nfunction UpDownButtons(props) {\n    return (React.createElement(\"div\", { className: UP_DOWN_BUTTON_WRAPPER_CLASS },\n        React.createElement(\"button\", { className: BUTTON_WRAPPER_CLASS, onClick: () => props.onHighlightPrevious(), tabIndex: 0, title: props.trans.__('Previous Match') },\n            React.createElement(caretUpEmptyThinIcon.react, { className: classes(UP_DOWN_BUTTON_CLASS, BUTTON_CONTENT_CLASS), tag: \"span\" })),\n        React.createElement(\"button\", { className: BUTTON_WRAPPER_CLASS, onClick: () => props.onHighlightNext(), tabIndex: 0, title: props.trans.__('Next Match') },\n            React.createElement(caretDownEmptyThinIcon.react, { className: classes(UP_DOWN_BUTTON_CLASS, BUTTON_CONTENT_CLASS), tag: \"span\" }))));\n}\nfunction SearchIndices(props) {\n    return (React.createElement(\"div\", { className: INDEX_COUNTER_CLASS }, props.totalMatches === 0\n        ? '-/-'\n        : `${props.currentIndex === null ? '-' : props.currentIndex + 1}/${props.totalMatches}`));\n}\nfunction FilterToggle(props) {\n    let className = `${FILTER_BUTTON_CLASS} ${BUTTON_CONTENT_CLASS}`;\n    if (props.visible) {\n        className = `${className} ${FILTER_BUTTON_ENABLED_CLASS}`;\n    }\n    const icon = props.anyEnabled ? filterDotIcon : filterIcon;\n    return (React.createElement(\"button\", { className: BUTTON_WRAPPER_CLASS, onClick: () => props.toggleVisible(), tabIndex: 0, title: props.visible\n            ? props.trans.__('Hide Search Filters')\n            : props.trans.__('Show Search Filters') },\n        React.createElement(icon.react, { className: className, tag: \"span\", height: \"20px\", width: \"20px\" })));\n}\nfunction FilterSelection(props) {\n    return (React.createElement(\"label\", { className: props.isEnabled\n            ? SEARCH_FILTER_CLASS\n            : `${SEARCH_FILTER_CLASS} ${SEARCH_FILTER_DISABLED_CLASS}`, title: props.description },\n        React.createElement(\"input\", { type: \"checkbox\", className: \"jp-mod-styled\", disabled: !props.isEnabled, checked: props.value, onChange: props.onToggle }),\n        props.title));\n}\nclass SearchOverlay extends React.Component {\n    constructor(props) {\n        super(props);\n        this.translator = props.translator || nullTranslator;\n    }\n    _onSearchChange(event) {\n        const searchText = event.target.value;\n        this.props.onSearchChanged(searchText);\n    }\n    _onSearchKeydown(event) {\n        if (event.keyCode === 13) {\n            // Enter pressed\n            event.stopPropagation();\n            event.preventDefault();\n            if (event.ctrlKey) {\n                const textarea = event.target;\n                this._insertNewLine(textarea);\n                this.props.onSearchChanged(textarea.value);\n            }\n            else {\n                event.shiftKey\n                    ? this.props.onHighlightPrevious()\n                    : this.props.onHighlightNext();\n            }\n        }\n    }\n    _onReplaceKeydown(event) {\n        if (event.keyCode === 13) {\n            // Enter pressed\n            event.stopPropagation();\n            event.preventDefault();\n            if (event.ctrlKey) {\n                this._insertNewLine(event.target);\n            }\n            else {\n                this.props.onReplaceCurrent();\n            }\n        }\n    }\n    _insertNewLine(textarea) {\n        const [start, end] = [textarea.selectionStart, textarea.selectionEnd];\n        textarea.setRangeText('\\n', start, end, 'end');\n    }\n    _onClose() {\n        // Clean up and close widget.\n        this.props.onClose();\n    }\n    _onReplaceToggled() {\n        // Deactivate invalid replace filters\n        if (!this.props.replaceEntryVisible) {\n            for (const key in this.props.filtersDefinition) {\n                const filter = this.props.filtersDefinition[key];\n                if (!filter.supportReplace) {\n                    this.props.onFilterChanged(key, false).catch(reason => {\n                        console.error(`Fail to update filter value for ${filter.title}:\\n${reason}`);\n                    });\n                }\n            }\n        }\n        this.props.onReplaceEntryShown(!this.props.replaceEntryVisible);\n    }\n    _toggleFiltersVisibility() {\n        this.props.onFiltersVisibilityChanged(!this.props.filtersVisible);\n    }\n    render() {\n        var _a;\n        const trans = this.translator.load('jupyterlab');\n        const showReplace = !this.props.isReadOnly && this.props.replaceEntryVisible;\n        const filters = this.props.filtersDefinition;\n        const hasFilters = Object.keys(filters).length > 0;\n        const filterToggle = hasFilters ? (React.createElement(FilterToggle, { visible: this.props.filtersVisible, anyEnabled: Object.keys(filters).some(name => {\n                var _a;\n                const filter = filters[name];\n                return (_a = this.props.filters[name]) !== null && _a !== void 0 ? _a : filter.default;\n            }), toggleVisible: () => this._toggleFiltersVisibility(), trans: trans })) : null;\n        const filter = hasFilters ? (React.createElement(\"div\", { className: SEARCH_OPTIONS_CLASS }, Object.keys(filters).map(name => {\n            var _a;\n            const filter = filters[name];\n            return (React.createElement(FilterSelection, { key: name, title: filter.title, description: filter.description, isEnabled: !showReplace || filter.supportReplace, onToggle: async () => {\n                    await this.props.onFilterChanged(name, !this.props.filters[name]);\n                }, value: (_a = this.props.filters[name]) !== null && _a !== void 0 ? _a : filter.default }));\n        }))) : null;\n        const icon = this.props.replaceEntryVisible\n            ? caretDownIcon\n            : caretRightIcon;\n        // TODO: Error messages from regex are not currently localizable.\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: OVERLAY_ROW_CLASS },\n                this.props.isReadOnly ? (React.createElement(\"div\", { className: TOGGLE_PLACEHOLDER })) : (React.createElement(\"button\", { className: TOGGLE_WRAPPER, onClick: () => this._onReplaceToggled(), tabIndex: 0, title: trans.__('Toggle Replace') },\n                    React.createElement(icon.react, { className: `${REPLACE_TOGGLE_CLASS} ${BUTTON_CONTENT_CLASS}`, tag: \"span\", elementPosition: \"center\", height: \"20px\", width: \"20px\" }))),\n                React.createElement(SearchEntry, { inputRef: this.props.searchInputRef, useRegex: this.props.useRegex, caseSensitive: this.props.caseSensitive, wholeWords: this.props.wholeWords, onCaseSensitiveToggled: this.props.onCaseSensitiveToggled, onRegexToggled: this.props.onRegexToggled, onWordToggled: this.props.onWordToggled, onKeydown: (e) => this._onSearchKeydown(e), onChange: (e) => this._onSearchChange(e), initialSearchText: this.props.initialSearchText, translator: this.translator }),\n                filterToggle,\n                React.createElement(SearchIndices, { currentIndex: this.props.currentIndex, totalMatches: (_a = this.props.totalMatches) !== null && _a !== void 0 ? _a : 0 }),\n                React.createElement(UpDownButtons, { onHighlightPrevious: () => {\n                        this.props.onHighlightPrevious();\n                    }, onHighlightNext: () => {\n                        this.props.onHighlightNext();\n                    }, trans: trans }),\n                React.createElement(\"button\", { className: BUTTON_WRAPPER_CLASS, onClick: () => this._onClose(), tabIndex: 0 },\n                    React.createElement(closeIcon.react, { className: \"jp-icon-hover\", elementPosition: \"center\", height: \"16px\", width: \"16px\" }))),\n            React.createElement(\"div\", { className: OVERLAY_ROW_CLASS }, showReplace ? (React.createElement(React.Fragment, null,\n                React.createElement(ReplaceEntry, { onPreserveCaseToggled: this.props.onPreserveCaseToggled, onReplaceKeydown: (e) => this._onReplaceKeydown(e), onChange: (e) => this.props.onReplaceChanged(e.target.value), onReplaceCurrent: () => this.props.onReplaceCurrent(), onReplaceAll: () => this.props.onReplaceAll(), replaceOptionsSupport: this.props.replaceOptionsSupport, replaceText: this.props.replaceText, preserveCase: this.props.preserveCase, translator: this.translator }),\n                React.createElement(\"div\", { className: SPACER_CLASS }))) : null),\n            this.props.filtersVisible ? filter : null,\n            !!this.props.errorMessage && (React.createElement(\"div\", { className: REGEX_ERROR_CLASS }, this.props.errorMessage))));\n    }\n}\n/**\n * Search document widget\n */\nexport class SearchDocumentView extends VDomRenderer {\n    /**\n     * Search document widget constructor.\n     *\n     * @param model Search document model\n     * @param translator Application translator object\n     */\n    constructor(model, translator) {\n        super(model);\n        this.translator = translator;\n        this._showReplace = false;\n        this._showFilters = false;\n        this._closed = new Signal(this);\n        this.addClass(OVERLAY_CLASS);\n        this._searchInput = React.createRef();\n    }\n    /**\n     * A signal emitted when the widget is closed.\n     *\n     * Closing the widget detached it from the DOM but does not dispose it.\n     */\n    get closed() {\n        return this._closed;\n    }\n    /**\n     * Focus search input.\n     */\n    focusSearchInput() {\n        var _a;\n        (_a = this._searchInput.current) === null || _a === void 0 ? void 0 : _a.select();\n    }\n    /**\n     * Set the initial search text.\n     */\n    setSearchText(search) {\n        this.model.initialQuery = search;\n        // Only set the new search text to search expression if there is any\n        // to avoid nullifying the one that was remembered from last time.\n        if (search) {\n            this.model.searchExpression = search;\n        }\n    }\n    /**\n     * Set the replace text\n     *\n     * It does not trigger a view update.\n     */\n    setReplaceText(replace) {\n        this.model.replaceText = replace;\n    }\n    /**\n     * Show the replacement input box.\n     */\n    showReplace() {\n        this.setReplaceInputVisibility(true);\n    }\n    /**\n     * A message handler invoked on a `'close-request'` message.\n     *\n     * #### Notes\n     * On top of the default implementation emit closed signal and end model query.\n     */\n    onCloseRequest(msg) {\n        super.onCloseRequest(msg);\n        this._closed.emit();\n        void this.model.endQuery();\n    }\n    setReplaceInputVisibility(v) {\n        if (this._showReplace !== v) {\n            this._showReplace = v;\n            this.update();\n        }\n    }\n    setFiltersVisibility(v) {\n        if (this._showFilters !== v) {\n            this._showFilters = v;\n            this.update();\n        }\n    }\n    render() {\n        return this.model.filtersDefinitionChanged ? (React.createElement(UseSignal, { signal: this.model.filtersDefinitionChanged }, () => this._renderOverlay())) : (this._renderOverlay());\n    }\n    _renderOverlay() {\n        return (React.createElement(SearchOverlay, { caseSensitive: this.model.caseSensitive, currentIndex: this.model.currentIndex, isReadOnly: this.model.isReadOnly, errorMessage: this.model.parsingError, filters: this.model.filters, filtersDefinition: this.model.filtersDefinition, preserveCase: this.model.preserveCase, replaceEntryVisible: this._showReplace, filtersVisible: this._showFilters, replaceOptionsSupport: this.model.replaceOptionsSupport, replaceText: this.model.replaceText, initialSearchText: this.model.initialQuery, searchInputRef: this._searchInput, totalMatches: this.model.totalMatches, translator: this.translator, useRegex: this.model.useRegex, wholeWords: this.model.wholeWords, onCaseSensitiveToggled: () => {\n                this.model.caseSensitive = !this.model.caseSensitive;\n            }, onRegexToggled: () => {\n                this.model.useRegex = !this.model.useRegex;\n            }, onWordToggled: () => {\n                this.model.wholeWords = !this.model.wholeWords;\n            }, onFilterChanged: async (name, value) => {\n                await this.model.setFilter(name, value);\n            }, onFiltersVisibilityChanged: (v) => {\n                this.setFiltersVisibility(v);\n            }, onHighlightNext: () => {\n                void this.model.highlightNext();\n            }, onHighlightPrevious: () => {\n                void this.model.highlightPrevious();\n            }, onPreserveCaseToggled: () => {\n                this.model.preserveCase = !this.model.preserveCase;\n            }, onSearchChanged: (q) => {\n                this.model.searchExpression = q;\n            }, onClose: () => {\n                this.close();\n            }, onReplaceEntryShown: (v) => {\n                this.setReplaceInputVisibility(v);\n            }, onReplaceChanged: (q) => {\n                this.model.replaceText = q;\n            }, onReplaceCurrent: () => {\n                void this.model.replaceCurrentMatch();\n            }, onReplaceAll: () => {\n                void this.model.replaceAllMatches();\n            } }));\n    }\n}\n//# sourceMappingURL=searchview.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { DisposableDelegate } from '@lumino/disposable';\nimport { Signal } from '@lumino/signaling';\n/**\n * Search provider registry\n */\nexport class SearchProviderRegistry {\n    /**\n     * Constructor\n     *\n     * @param translator Application translator object\n     */\n    constructor(translator = nullTranslator) {\n        this.translator = translator;\n        this._changed = new Signal(this);\n        this._providerMap = new Map();\n    }\n    /**\n     * Add a provider to the registry.\n     *\n     * @param key - The provider key.\n     * @returns A disposable delegate that, when disposed, deregisters the given search provider\n     */\n    add(key, provider) {\n        this._providerMap.set(key, provider);\n        this._changed.emit();\n        return new DisposableDelegate(() => {\n            this._providerMap.delete(key);\n            this._changed.emit();\n        });\n    }\n    /**\n     * Returns a matching provider for the widget.\n     *\n     * @param widget - The widget to search over.\n     * @returns the search provider, or undefined if none exists.\n     */\n    getProvider(widget) {\n        // iterate through all providers and ask each one if it can search on the\n        // widget.\n        for (const P of this._providerMap.values()) {\n            if (P.isApplicable(widget)) {\n                return P.createNew(widget, this.translator);\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Whether the registry as a matching provider for the widget.\n     *\n     * @param widget - The widget to search over.\n     * @returns Provider existence\n     */\n    hasProvider(widget) {\n        for (const P of this._providerMap.values()) {\n            if (P.isApplicable(widget)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Signal that emits when a new search provider has been registered\n     * or removed.\n     */\n    get changed() {\n        return this._changed;\n    }\n}\n//# sourceMappingURL=searchproviderregistry.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Token } from '@lumino/coreutils';\n/**\n * The search provider registry token.\n */\nexport const ISearchProviderRegistry = new Token('@jupyterlab/documentsearch:ISearchProviderRegistry', `A service for a registry of search\n  providers for the application. Plugins can register their UI elements with this registry\n  to provide find/replace support.`);\n//# sourceMappingURL=tokens.js.map"],"names":["SearchProvider","constructor","widget","this","_stateChanged","Signal","_filtersChanged","_disposed","stateChanged","filtersChanged","currentMatchIndex","isDisposed","matchesCount","dispose","clearData","getInitialQuery","getFilters","preserveCase","oldText","newText","toUpperCase","toLowerCase","toSentenceCase","first","suffix","join","FOUND_CLASSES","SELECTED_CLASSES","HTMLSearchEngine","search","query","rootNode","Node","console","warn","Promise","resolve","global","RegExp","source","flags","matches","walker","document","createTreeWalker","NodeFilter","SHOW_TEXT","acceptNode","node","parentElement","nodeName","UNSUPPORTED_ELEMENTS","FILTER_REJECT","test","textContent","FILTER_ACCEPT","nextNode","lastIndex","match","exec","push","text","position","index","BASE","HEAD","LINK","META","STYLE","TITLE","BODY","AREA","AUDIO","IMG","MAP","TRACK","VIDEO","APPLET","EMBED","IFRAME","NOEMBED","OBJECT","PARAM","PICTURE","SOURCE","CANVAS","NOSCRIPT","SCRIPT","SVG","GenericSearchProvider","super","arguments","isReadOnly","_matches","_mutationObserver","MutationObserver","_onWidgetChanged","bind","_markNodes","Array","isApplicable","domain","Widget","createNew","registry","translator","_currentMatchIndex","currentMatch","_a","map","m","Object","assign","length","clearHighlight","classList","remove","endQuery","catch","reason","error","highlightNext","loop","_highlightNext","undefined","highlightPrevious","replaceCurrentMatch","replaceAllMatches","startQuery","filters","_query","nodeIdx","activeNode","parent","parentNode","subMatches","unshift","markedNodes","markedNode","createElement","add","newNode","splitText","slice","insertBefore","i","observe","attributes","characterData","childList","subtree","disconnect","forEach","el","replaceChild","createTextNode","normalize","reverse","hit","boundingClientRect","getBoundingClientRect","top","bottom","window","innerHeight","documentElement","clientHeight","left","right","innerWidth","clientWidth","elementInViewport","scrollIntoView","focus","mutations","observer","emit","TextSearchEngine","data","JSON","stringify","Private","SearchDocumentModel","VDomModel","searchProvider","searchDebounceTime","_caseSensitive","_parsingError","_preserveCase","_initialQuery","_filters","_replaceText","_searchExpression","_useRegex","_wholeWords","filter","default","connect","refresh","_searchDebouncer","Debouncer","_updateSearch","caseSensitive","v","currentIndex","disposed","filtersDefinition","_b","_c","call","filtersDefinitionChanged","initialQuery","suggestedInitialQuery","replaceOptionsSupport","parsingError","replaceText","searchExpression","totalMatches","useRegex","wholeWords","invoke","regularExpression","setFilter","name","validateFilter","parseQuery","toString","queryString","regex","flag","queryText","replace","ret","OVERLAY_ROW_CLASS","INPUT_CLASS","INPUT_WRAPPER_CLASS","INPUT_BUTTON_CLASS_OFF","INPUT_BUTTON_CLASS_ON","UP_DOWN_BUTTON_CLASS","SEARCH_FILTER_CLASS","REPLACE_BUTTON_CLASS","REPLACE_BUTTON_WRAPPER_CLASS","BUTTON_CONTENT_CLASS","BUTTON_WRAPPER_CLASS","SearchInput","props","rows","setRows","useState","updateRows","useCallback","event","element","target","inputRef","current","value","split","useEffect","select","initialValue","placeholder","className","onChange","e","onKeyDown","key","autoUpdate","tabIndex","ref","title","defaultValue","autoFocus","SearchEntry","trans","nullTranslator","load","caseButtonToggleClass","classes","regexButtonToggleClass","wordButtonToggleClass","wrapperClass","__","onKeydown","initialSearchText","onClick","onCaseSensitiveToggled","caseSensitiveIcon","react","tag","onWordToggled","wordIcon","onRegexToggled","regexIcon","ReplaceEntry","preserveCaseButtonToggleClass","onReplaceKeydown","onPreserveCaseToggled","onReplaceCurrent","onReplaceAll","UpDownButtons","onHighlightPrevious","caretUpEmptyThinIcon","onHighlightNext","caretDownEmptyThinIcon","SearchIndices","FilterToggle","visible","icon","anyEnabled","filterDotIcon","filterIcon","toggleVisible","height","width","FilterSelection","isEnabled","description","type","disabled","checked","onToggle","SearchOverlay","_onSearchChange","searchText","onSearchChanged","_onSearchKeydown","keyCode","stopPropagation","preventDefault","ctrlKey","textarea","_insertNewLine","shiftKey","_onReplaceKeydown","start","end","selectionStart","selectionEnd","setRangeText","_onClose","onClose","_onReplaceToggled","replaceEntryVisible","supportReplace","onFilterChanged","onReplaceEntryShown","_toggleFiltersVisibility","onFiltersVisibilityChanged","filtersVisible","render","showReplace","hasFilters","keys","filterToggle","some","async","caretDownIcon","caretRightIcon","elementPosition","searchInputRef","closeIcon","onReplaceChanged","errorMessage","SearchDocumentView","VDomRenderer","model","_showReplace","_showFilters","_closed","addClass","_searchInput","closed","focusSearchInput","setSearchText","setReplaceText","setReplaceInputVisibility","onCloseRequest","msg","update","setFiltersVisibility","UseSignal","signal","_renderOverlay","q","close","SearchProviderRegistry","_changed","_providerMap","Map","provider","set","DisposableDelegate","delete","getProvider","P","values","hasProvider","changed","ISearchProviderRegistry","Token"],"sourceRoot":""}