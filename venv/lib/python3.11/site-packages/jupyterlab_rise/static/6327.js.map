{"version":3,"file":"6327.bundle.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@codemirror/commands/dist/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/commands.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/extensions/customStyle.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/extensions/ipython-md.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/extensions/rulers.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/extensions/ybinding.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/extension.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@lezer/generator/dist/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/theme.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/language.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/editor.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/crelt/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@codemirror/search/dist/index.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/factory.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/mimetype.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/searchprovider.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/codemirror/lib/token.js"],"sourcesContent":["import { Annotation, Facet, combineConfig, StateField, EditorSelection, Transaction, ChangeSet, ChangeDesc, StateEffect, Text, findClusterBreak, countColumn, CharCategory } from '@codemirror/state';\nimport { EditorView, Direction } from '@codemirror/view';\nimport { IndentContext, getIndentation, indentString, matchBrackets, syntaxTree, getIndentUnit, indentUnit } from '@codemirror/language';\nimport { NodeProp } from '@lezer/common';\n\n/**\nComment or uncomment the current selection. Will use line comments\nif available, otherwise falling back to block comments.\n*/\nconst toggleComment = target => {\n    let { state } = target, line = state.doc.lineAt(state.selection.main.from), config = getConfig(target.state, line.from);\n    return config.line ? toggleLineComment(target) : config.block ? toggleBlockCommentByLine(target) : false;\n};\nfunction command(f, option) {\n    return ({ state, dispatch }) => {\n        if (state.readOnly)\n            return false;\n        let tr = f(option, state);\n        if (!tr)\n            return false;\n        dispatch(state.update(tr));\n        return true;\n    };\n}\n/**\nComment or uncomment the current selection using line comments.\nThe line comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleLineComment = /*@__PURE__*/command(changeLineComment, 0 /* CommentOption.Toggle */);\n/**\nComment the current selection using line comments.\n*/\nconst lineComment = /*@__PURE__*/command(changeLineComment, 1 /* CommentOption.Comment */);\n/**\nUncomment the current selection using line comments.\n*/\nconst lineUncomment = /*@__PURE__*/command(changeLineComment, 2 /* CommentOption.Uncomment */);\n/**\nComment or uncomment the current selection using block comments.\nThe block comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleBlockComment = /*@__PURE__*/command(changeBlockComment, 0 /* CommentOption.Toggle */);\n/**\nComment the current selection using block comments.\n*/\nconst blockComment = /*@__PURE__*/command(changeBlockComment, 1 /* CommentOption.Comment */);\n/**\nUncomment the current selection using block comments.\n*/\nconst blockUncomment = /*@__PURE__*/command(changeBlockComment, 2 /* CommentOption.Uncomment */);\n/**\nComment or uncomment the lines around the current selection using\nblock comments.\n*/\nconst toggleBlockCommentByLine = /*@__PURE__*/command((o, s) => changeBlockComment(o, s, selectedLineRanges(s)), 0 /* CommentOption.Toggle */);\nfunction getConfig(state, pos) {\n    let data = state.languageDataAt(\"commentTokens\", pos);\n    return data.length ? data[0] : {};\n}\nconst SearchMargin = 50;\n/**\nDetermines if the given range is block-commented in the given\nstate.\n*/\nfunction findBlockComment(state, { open, close }, from, to) {\n    let textBefore = state.sliceDoc(from - SearchMargin, from);\n    let textAfter = state.sliceDoc(to, to + SearchMargin);\n    let spaceBefore = /\\s*$/.exec(textBefore)[0].length, spaceAfter = /^\\s*/.exec(textAfter)[0].length;\n    let beforeOff = textBefore.length - spaceBefore;\n    if (textBefore.slice(beforeOff - open.length, beforeOff) == open &&\n        textAfter.slice(spaceAfter, spaceAfter + close.length) == close) {\n        return { open: { pos: from - spaceBefore, margin: spaceBefore && 1 },\n            close: { pos: to + spaceAfter, margin: spaceAfter && 1 } };\n    }\n    let startText, endText;\n    if (to - from <= 2 * SearchMargin) {\n        startText = endText = state.sliceDoc(from, to);\n    }\n    else {\n        startText = state.sliceDoc(from, from + SearchMargin);\n        endText = state.sliceDoc(to - SearchMargin, to);\n    }\n    let startSpace = /^\\s*/.exec(startText)[0].length, endSpace = /\\s*$/.exec(endText)[0].length;\n    let endOff = endText.length - endSpace - close.length;\n    if (startText.slice(startSpace, startSpace + open.length) == open &&\n        endText.slice(endOff, endOff + close.length) == close) {\n        return { open: { pos: from + startSpace + open.length,\n                margin: /\\s/.test(startText.charAt(startSpace + open.length)) ? 1 : 0 },\n            close: { pos: to - endSpace - close.length,\n                margin: /\\s/.test(endText.charAt(endOff - 1)) ? 1 : 0 } };\n    }\n    return null;\n}\nfunction selectedLineRanges(state) {\n    let ranges = [];\n    for (let r of state.selection.ranges) {\n        let fromLine = state.doc.lineAt(r.from);\n        let toLine = r.to <= fromLine.to ? fromLine : state.doc.lineAt(r.to);\n        let last = ranges.length - 1;\n        if (last >= 0 && ranges[last].to > fromLine.from)\n            ranges[last].to = toLine.to;\n        else\n            ranges.push({ from: fromLine.from + /^\\s*/.exec(fromLine.text)[0].length, to: toLine.to });\n    }\n    return ranges;\n}\n// Performs toggle, comment and uncomment of block comments in\n// languages that support them.\nfunction changeBlockComment(option, state, ranges = state.selection.ranges) {\n    let tokens = ranges.map(r => getConfig(state, r.from).block);\n    if (!tokens.every(c => c))\n        return null;\n    let comments = ranges.map((r, i) => findBlockComment(state, tokens[i], r.from, r.to));\n    if (option != 2 /* CommentOption.Uncomment */ && !comments.every(c => c)) {\n        return { changes: state.changes(ranges.map((range, i) => {\n                if (comments[i])\n                    return [];\n                return [{ from: range.from, insert: tokens[i].open + \" \" }, { from: range.to, insert: \" \" + tokens[i].close }];\n            })) };\n    }\n    else if (option != 1 /* CommentOption.Comment */ && comments.some(c => c)) {\n        let changes = [];\n        for (let i = 0, comment; i < comments.length; i++)\n            if (comment = comments[i]) {\n                let token = tokens[i], { open, close } = comment;\n                changes.push({ from: open.pos - token.open.length, to: open.pos + open.margin }, { from: close.pos - close.margin, to: close.pos + token.close.length });\n            }\n        return { changes };\n    }\n    return null;\n}\n// Performs toggle, comment and uncomment of line comments.\nfunction changeLineComment(option, state, ranges = state.selection.ranges) {\n    let lines = [];\n    let prevLine = -1;\n    for (let { from, to } of ranges) {\n        let startI = lines.length, minIndent = 1e9;\n        let token = getConfig(state, from).line;\n        if (!token)\n            continue;\n        for (let pos = from; pos <= to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.from > prevLine && (from == to || to > line.from)) {\n                prevLine = line.from;\n                let indent = /^\\s*/.exec(line.text)[0].length;\n                let empty = indent == line.length;\n                let comment = line.text.slice(indent, indent + token.length) == token ? indent : -1;\n                if (indent < line.text.length && indent < minIndent)\n                    minIndent = indent;\n                lines.push({ line, comment, token, indent, empty, single: false });\n            }\n            pos = line.to + 1;\n        }\n        if (minIndent < 1e9)\n            for (let i = startI; i < lines.length; i++)\n                if (lines[i].indent < lines[i].line.text.length)\n                    lines[i].indent = minIndent;\n        if (lines.length == startI + 1)\n            lines[startI].single = true;\n    }\n    if (option != 2 /* CommentOption.Uncomment */ && lines.some(l => l.comment < 0 && (!l.empty || l.single))) {\n        let changes = [];\n        for (let { line, token, indent, empty, single } of lines)\n            if (single || !empty)\n                changes.push({ from: line.from + indent, insert: token + \" \" });\n        let changeSet = state.changes(changes);\n        return { changes: changeSet, selection: state.selection.map(changeSet, 1) };\n    }\n    else if (option != 1 /* CommentOption.Comment */ && lines.some(l => l.comment >= 0)) {\n        let changes = [];\n        for (let { line, comment, token } of lines)\n            if (comment >= 0) {\n                let from = line.from + comment, to = from + token.length;\n                if (line.text[to - line.from] == \" \")\n                    to++;\n                changes.push({ from, to });\n            }\n        return { changes };\n    }\n    return null;\n}\n\nconst fromHistory = /*@__PURE__*/Annotation.define();\n/**\nTransaction annotation that will prevent that transaction from\nbeing combined with other transactions in the undo history. Given\n`\"before\"`, it'll prevent merging with previous transactions. With\n`\"after\"`, subsequent transactions won't be combined with this\none. With `\"full\"`, the transaction is isolated on both sides.\n*/\nconst isolateHistory = /*@__PURE__*/Annotation.define();\n/**\nThis facet provides a way to register functions that, given a\ntransaction, provide a set of effects that the history should\nstore when inverting the transaction. This can be used to\nintegrate some kinds of effects in the history, so that they can\nbe undone (and redone again).\n*/\nconst invertedEffects = /*@__PURE__*/Facet.define();\nconst historyConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            minDepth: 100,\n            newGroupDelay: 500,\n            joinToEvent: (_t, isAdjacent) => isAdjacent,\n        }, {\n            minDepth: Math.max,\n            newGroupDelay: Math.min,\n            joinToEvent: (a, b) => (tr, adj) => a(tr, adj) || b(tr, adj)\n        });\n    }\n});\nfunction changeEnd(changes) {\n    let end = 0;\n    changes.iterChangedRanges((_, to) => end = to);\n    return end;\n}\nconst historyField_ = /*@__PURE__*/StateField.define({\n    create() {\n        return HistoryState.empty;\n    },\n    update(state, tr) {\n        let config = tr.state.facet(historyConfig);\n        let fromHist = tr.annotation(fromHistory);\n        if (fromHist) {\n            let selection = tr.docChanged ? EditorSelection.single(changeEnd(tr.changes)) : undefined;\n            let item = HistEvent.fromTransaction(tr, selection), from = fromHist.side;\n            let other = from == 0 /* BranchName.Done */ ? state.undone : state.done;\n            if (item)\n                other = updateBranch(other, other.length, config.minDepth, item);\n            else\n                other = addSelection(other, tr.startState.selection);\n            return new HistoryState(from == 0 /* BranchName.Done */ ? fromHist.rest : other, from == 0 /* BranchName.Done */ ? other : fromHist.rest);\n        }\n        let isolate = tr.annotation(isolateHistory);\n        if (isolate == \"full\" || isolate == \"before\")\n            state = state.isolate();\n        if (tr.annotation(Transaction.addToHistory) === false)\n            return !tr.changes.empty ? state.addMapping(tr.changes.desc) : state;\n        let event = HistEvent.fromTransaction(tr);\n        let time = tr.annotation(Transaction.time), userEvent = tr.annotation(Transaction.userEvent);\n        if (event)\n            state = state.addChanges(event, time, userEvent, config, tr);\n        else if (tr.selection)\n            state = state.addSelection(tr.startState.selection, time, userEvent, config.newGroupDelay);\n        if (isolate == \"full\" || isolate == \"after\")\n            state = state.isolate();\n        return state;\n    },\n    toJSON(value) {\n        return { done: value.done.map(e => e.toJSON()), undone: value.undone.map(e => e.toJSON()) };\n    },\n    fromJSON(json) {\n        return new HistoryState(json.done.map(HistEvent.fromJSON), json.undone.map(HistEvent.fromJSON));\n    }\n});\n/**\nCreate a history extension with the given configuration.\n*/\nfunction history(config = {}) {\n    return [\n        historyField_,\n        historyConfig.of(config),\n        EditorView.domEventHandlers({\n            beforeinput(e, view) {\n                let command = e.inputType == \"historyUndo\" ? undo : e.inputType == \"historyRedo\" ? redo : null;\n                if (!command)\n                    return false;\n                e.preventDefault();\n                return command(view);\n            }\n        })\n    ];\n}\n/**\nThe state field used to store the history data. Should probably\nonly be used when you want to\n[serialize](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) or\n[deserialize](https://codemirror.net/6/docs/ref/#state.EditorState^fromJSON) state objects in a way\nthat preserves history.\n*/\nconst historyField = historyField_;\nfunction cmd(side, selection) {\n    return function ({ state, dispatch }) {\n        if (!selection && state.readOnly)\n            return false;\n        let historyState = state.field(historyField_, false);\n        if (!historyState)\n            return false;\n        let tr = historyState.pop(side, state, selection);\n        if (!tr)\n            return false;\n        dispatch(tr);\n        return true;\n    };\n}\n/**\nUndo a single group of history events. Returns false if no group\nwas available.\n*/\nconst undo = /*@__PURE__*/cmd(0 /* BranchName.Done */, false);\n/**\nRedo a group of history events. Returns false if no group was\navailable.\n*/\nconst redo = /*@__PURE__*/cmd(1 /* BranchName.Undone */, false);\n/**\nUndo a change or selection change.\n*/\nconst undoSelection = /*@__PURE__*/cmd(0 /* BranchName.Done */, true);\n/**\nRedo a change or selection change.\n*/\nconst redoSelection = /*@__PURE__*/cmd(1 /* BranchName.Undone */, true);\nfunction depth(side) {\n    return function (state) {\n        let histState = state.field(historyField_, false);\n        if (!histState)\n            return 0;\n        let branch = side == 0 /* BranchName.Done */ ? histState.done : histState.undone;\n        return branch.length - (branch.length && !branch[0].changes ? 1 : 0);\n    };\n}\n/**\nThe amount of undoable change events available in a given state.\n*/\nconst undoDepth = /*@__PURE__*/depth(0 /* BranchName.Done */);\n/**\nThe amount of redoable change events available in a given state.\n*/\nconst redoDepth = /*@__PURE__*/depth(1 /* BranchName.Undone */);\n// History events store groups of changes or effects that need to be\n// undone/redone together.\nclass HistEvent {\n    constructor(\n    // The changes in this event. Normal events hold at least one\n    // change or effect. But it may be necessary to store selection\n    // events before the first change, in which case a special type of\n    // instance is created which doesn't hold any changes, with\n    // changes == startSelection == undefined\n    changes, \n    // The effects associated with this event\n    effects, \n    // Accumulated mapping (from addToHistory==false) that should be\n    // applied to events below this one.\n    mapped, \n    // The selection before this event\n    startSelection, \n    // Stores selection changes after this event, to be used for\n    // selection undo/redo.\n    selectionsAfter) {\n        this.changes = changes;\n        this.effects = effects;\n        this.mapped = mapped;\n        this.startSelection = startSelection;\n        this.selectionsAfter = selectionsAfter;\n    }\n    setSelAfter(after) {\n        return new HistEvent(this.changes, this.effects, this.mapped, this.startSelection, after);\n    }\n    toJSON() {\n        var _a, _b, _c;\n        return {\n            changes: (_a = this.changes) === null || _a === void 0 ? void 0 : _a.toJSON(),\n            mapped: (_b = this.mapped) === null || _b === void 0 ? void 0 : _b.toJSON(),\n            startSelection: (_c = this.startSelection) === null || _c === void 0 ? void 0 : _c.toJSON(),\n            selectionsAfter: this.selectionsAfter.map(s => s.toJSON())\n        };\n    }\n    static fromJSON(json) {\n        return new HistEvent(json.changes && ChangeSet.fromJSON(json.changes), [], json.mapped && ChangeDesc.fromJSON(json.mapped), json.startSelection && EditorSelection.fromJSON(json.startSelection), json.selectionsAfter.map(EditorSelection.fromJSON));\n    }\n    // This does not check `addToHistory` and such, it assumes the\n    // transaction needs to be converted to an item. Returns null when\n    // there are no changes or effects in the transaction.\n    static fromTransaction(tr, selection) {\n        let effects = none;\n        for (let invert of tr.startState.facet(invertedEffects)) {\n            let result = invert(tr);\n            if (result.length)\n                effects = effects.concat(result);\n        }\n        if (!effects.length && tr.changes.empty)\n            return null;\n        return new HistEvent(tr.changes.invert(tr.startState.doc), effects, undefined, selection || tr.startState.selection, none);\n    }\n    static selection(selections) {\n        return new HistEvent(undefined, none, undefined, undefined, selections);\n    }\n}\nfunction updateBranch(branch, to, maxLen, newEvent) {\n    let start = to + 1 > maxLen + 20 ? to - maxLen - 1 : 0;\n    let newBranch = branch.slice(start, to);\n    newBranch.push(newEvent);\n    return newBranch;\n}\nfunction isAdjacent(a, b) {\n    let ranges = [], isAdjacent = false;\n    a.iterChangedRanges((f, t) => ranges.push(f, t));\n    b.iterChangedRanges((_f, _t, f, t) => {\n        for (let i = 0; i < ranges.length;) {\n            let from = ranges[i++], to = ranges[i++];\n            if (t >= from && f <= to)\n                isAdjacent = true;\n        }\n    });\n    return isAdjacent;\n}\nfunction eqSelectionShape(a, b) {\n    return a.ranges.length == b.ranges.length &&\n        a.ranges.filter((r, i) => r.empty != b.ranges[i].empty).length === 0;\n}\nfunction conc(a, b) {\n    return !a.length ? b : !b.length ? a : a.concat(b);\n}\nconst none = [];\nconst MaxSelectionsPerEvent = 200;\nfunction addSelection(branch, selection) {\n    if (!branch.length) {\n        return [HistEvent.selection([selection])];\n    }\n    else {\n        let lastEvent = branch[branch.length - 1];\n        let sels = lastEvent.selectionsAfter.slice(Math.max(0, lastEvent.selectionsAfter.length - MaxSelectionsPerEvent));\n        if (sels.length && sels[sels.length - 1].eq(selection))\n            return branch;\n        sels.push(selection);\n        return updateBranch(branch, branch.length - 1, 1e9, lastEvent.setSelAfter(sels));\n    }\n}\n// Assumes the top item has one or more selectionAfter values\nfunction popSelection(branch) {\n    let last = branch[branch.length - 1];\n    let newBranch = branch.slice();\n    newBranch[branch.length - 1] = last.setSelAfter(last.selectionsAfter.slice(0, last.selectionsAfter.length - 1));\n    return newBranch;\n}\n// Add a mapping to the top event in the given branch. If this maps\n// away all the changes and effects in that item, drop it and\n// propagate the mapping to the next item.\nfunction addMappingToBranch(branch, mapping) {\n    if (!branch.length)\n        return branch;\n    let length = branch.length, selections = none;\n    while (length) {\n        let event = mapEvent(branch[length - 1], mapping, selections);\n        if (event.changes && !event.changes.empty || event.effects.length) { // Event survived mapping\n            let result = branch.slice(0, length);\n            result[length - 1] = event;\n            return result;\n        }\n        else { // Drop this event, since there's no changes or effects left\n            mapping = event.mapped;\n            length--;\n            selections = event.selectionsAfter;\n        }\n    }\n    return selections.length ? [HistEvent.selection(selections)] : none;\n}\nfunction mapEvent(event, mapping, extraSelections) {\n    let selections = conc(event.selectionsAfter.length ? event.selectionsAfter.map(s => s.map(mapping)) : none, extraSelections);\n    // Change-less events don't store mappings (they are always the last event in a branch)\n    if (!event.changes)\n        return HistEvent.selection(selections);\n    let mappedChanges = event.changes.map(mapping), before = mapping.mapDesc(event.changes, true);\n    let fullMapping = event.mapped ? event.mapped.composeDesc(before) : before;\n    return new HistEvent(mappedChanges, StateEffect.mapEffects(event.effects, mapping), fullMapping, event.startSelection.map(before), selections);\n}\nconst joinableUserEvent = /^(input\\.type|delete)($|\\.)/;\nclass HistoryState {\n    constructor(done, undone, prevTime = 0, prevUserEvent = undefined) {\n        this.done = done;\n        this.undone = undone;\n        this.prevTime = prevTime;\n        this.prevUserEvent = prevUserEvent;\n    }\n    isolate() {\n        return this.prevTime ? new HistoryState(this.done, this.undone) : this;\n    }\n    addChanges(event, time, userEvent, config, tr) {\n        let done = this.done, lastEvent = done[done.length - 1];\n        if (lastEvent && lastEvent.changes && !lastEvent.changes.empty && event.changes &&\n            (!userEvent || joinableUserEvent.test(userEvent)) &&\n            ((!lastEvent.selectionsAfter.length &&\n                time - this.prevTime < config.newGroupDelay &&\n                config.joinToEvent(tr, isAdjacent(lastEvent.changes, event.changes))) ||\n                // For compose (but not compose.start) events, always join with previous event\n                userEvent == \"input.type.compose\")) {\n            done = updateBranch(done, done.length - 1, config.minDepth, new HistEvent(event.changes.compose(lastEvent.changes), conc(event.effects, lastEvent.effects), lastEvent.mapped, lastEvent.startSelection, none));\n        }\n        else {\n            done = updateBranch(done, done.length, config.minDepth, event);\n        }\n        return new HistoryState(done, none, time, userEvent);\n    }\n    addSelection(selection, time, userEvent, newGroupDelay) {\n        let last = this.done.length ? this.done[this.done.length - 1].selectionsAfter : none;\n        if (last.length > 0 &&\n            time - this.prevTime < newGroupDelay &&\n            userEvent == this.prevUserEvent && userEvent && /^select($|\\.)/.test(userEvent) &&\n            eqSelectionShape(last[last.length - 1], selection))\n            return this;\n        return new HistoryState(addSelection(this.done, selection), this.undone, time, userEvent);\n    }\n    addMapping(mapping) {\n        return new HistoryState(addMappingToBranch(this.done, mapping), addMappingToBranch(this.undone, mapping), this.prevTime, this.prevUserEvent);\n    }\n    pop(side, state, selection) {\n        let branch = side == 0 /* BranchName.Done */ ? this.done : this.undone;\n        if (branch.length == 0)\n            return null;\n        let event = branch[branch.length - 1];\n        if (selection && event.selectionsAfter.length) {\n            return state.update({\n                selection: event.selectionsAfter[event.selectionsAfter.length - 1],\n                annotations: fromHistory.of({ side, rest: popSelection(branch) }),\n                userEvent: side == 0 /* BranchName.Done */ ? \"select.undo\" : \"select.redo\",\n                scrollIntoView: true\n            });\n        }\n        else if (!event.changes) {\n            return null;\n        }\n        else {\n            let rest = branch.length == 1 ? none : branch.slice(0, branch.length - 1);\n            if (event.mapped)\n                rest = addMappingToBranch(rest, event.mapped);\n            return state.update({\n                changes: event.changes,\n                selection: event.startSelection,\n                effects: event.effects,\n                annotations: fromHistory.of({ side, rest }),\n                filter: false,\n                userEvent: side == 0 /* BranchName.Done */ ? \"undo\" : \"redo\",\n                scrollIntoView: true\n            });\n        }\n    }\n}\nHistoryState.empty = /*@__PURE__*/new HistoryState(none, none);\n/**\nDefault key bindings for the undo history.\n\n- Mod-z: [`undo`](https://codemirror.net/6/docs/ref/#commands.undo).\n- Mod-y (Mod-Shift-z on macOS) + Ctrl-Shift-z on Linux: [`redo`](https://codemirror.net/6/docs/ref/#commands.redo).\n- Mod-u: [`undoSelection`](https://codemirror.net/6/docs/ref/#commands.undoSelection).\n- Alt-u (Mod-Shift-u on macOS): [`redoSelection`](https://codemirror.net/6/docs/ref/#commands.redoSelection).\n*/\nconst historyKeymap = [\n    { key: \"Mod-z\", run: undo, preventDefault: true },\n    { key: \"Mod-y\", mac: \"Mod-Shift-z\", run: redo, preventDefault: true },\n    { linux: \"Ctrl-Shift-z\", run: redo, preventDefault: true },\n    { key: \"Mod-u\", run: undoSelection, preventDefault: true },\n    { key: \"Alt-u\", mac: \"Mod-Shift-u\", run: redoSelection, preventDefault: true }\n];\n\nfunction updateSel(sel, by) {\n    return EditorSelection.create(sel.ranges.map(by), sel.mainIndex);\n}\nfunction setSel(state, selection) {\n    return state.update({ selection, scrollIntoView: true, userEvent: \"select\" });\n}\nfunction moveSel({ state, dispatch }, how) {\n    let selection = updateSel(state.selection, how);\n    if (selection.eq(state.selection))\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\nfunction rangeEnd(range, forward) {\n    return EditorSelection.cursor(forward ? range.to : range.from);\n}\nfunction cursorByChar(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByChar(range, forward) : rangeEnd(range, forward));\n}\nfunction ltrAtCursor(view) {\n    return view.textDirectionAt(view.state.selection.main.head) == Direction.LTR;\n}\n/**\nMove the selection one character to the left (which is backward in\nleft-to-right text, forward in right-to-left text).\n*/\nconst cursorCharLeft = view => cursorByChar(view, !ltrAtCursor(view));\n/**\nMove the selection one character to the right.\n*/\nconst cursorCharRight = view => cursorByChar(view, ltrAtCursor(view));\n/**\nMove the selection one character forward.\n*/\nconst cursorCharForward = view => cursorByChar(view, true);\n/**\nMove the selection one character backward.\n*/\nconst cursorCharBackward = view => cursorByChar(view, false);\nfunction cursorByGroup(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByGroup(range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection to the left across one group of word or\nnon-word (but also non-space) characters.\n*/\nconst cursorGroupLeft = view => cursorByGroup(view, !ltrAtCursor(view));\n/**\nMove the selection one group to the right.\n*/\nconst cursorGroupRight = view => cursorByGroup(view, ltrAtCursor(view));\n/**\nMove the selection one group forward.\n*/\nconst cursorGroupForward = view => cursorByGroup(view, true);\n/**\nMove the selection one group backward.\n*/\nconst cursorGroupBackward = view => cursorByGroup(view, false);\nfunction moveBySubword(view, range, forward) {\n    let categorize = view.state.charCategorizer(range.from);\n    return view.moveByChar(range, forward, start => {\n        let cat = CharCategory.Space, pos = range.from;\n        let done = false, sawUpper = false, sawLower = false;\n        let step = (next) => {\n            if (done)\n                return false;\n            pos += forward ? next.length : -next.length;\n            let nextCat = categorize(next), ahead;\n            if (nextCat == CharCategory.Word && next.charCodeAt(0) < 128 && /[\\W_]/.test(next))\n                nextCat = -1; // Treat word punctuation specially\n            if (cat == CharCategory.Space)\n                cat = nextCat;\n            if (cat != nextCat)\n                return false;\n            if (cat == CharCategory.Word) {\n                if (next.toLowerCase() == next) {\n                    if (!forward && sawUpper)\n                        return false;\n                    sawLower = true;\n                }\n                else if (sawLower) {\n                    if (forward)\n                        return false;\n                    done = true;\n                }\n                else {\n                    if (sawUpper && forward && categorize(ahead = view.state.sliceDoc(pos, pos + 1)) == CharCategory.Word &&\n                        ahead.toLowerCase() == ahead)\n                        return false;\n                    sawUpper = true;\n                }\n            }\n            return true;\n        };\n        step(start);\n        return step;\n    });\n}\nfunction cursorBySubword(view, forward) {\n    return moveSel(view, range => range.empty ? moveBySubword(view, range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection one group or camel-case subword forward.\n*/\nconst cursorSubwordForward = view => cursorBySubword(view, true);\n/**\nMove the selection one group or camel-case subword backward.\n*/\nconst cursorSubwordBackward = view => cursorBySubword(view, false);\nfunction interestingNode(state, node, bracketProp) {\n    if (node.type.prop(bracketProp))\n        return true;\n    let len = node.to - node.from;\n    return len && (len > 2 || /[^\\s,.;:]/.test(state.sliceDoc(node.from, node.to))) || node.firstChild;\n}\nfunction moveBySyntax(state, start, forward) {\n    let pos = syntaxTree(state).resolveInner(start.head);\n    let bracketProp = forward ? NodeProp.closedBy : NodeProp.openedBy;\n    // Scan forward through child nodes to see if there's an interesting\n    // node ahead.\n    for (let at = start.head;;) {\n        let next = forward ? pos.childAfter(at) : pos.childBefore(at);\n        if (!next)\n            break;\n        if (interestingNode(state, next, bracketProp))\n            pos = next;\n        else\n            at = forward ? next.to : next.from;\n    }\n    let bracket = pos.type.prop(bracketProp), match, newPos;\n    if (bracket && (match = forward ? matchBrackets(state, pos.from, 1) : matchBrackets(state, pos.to, -1)) && match.matched)\n        newPos = forward ? match.end.to : match.end.from;\n    else\n        newPos = forward ? pos.to : pos.from;\n    return EditorSelection.cursor(newPos, forward ? -1 : 1);\n}\n/**\nMove the cursor over the next syntactic element to the left.\n*/\nconst cursorSyntaxLeft = view => moveSel(view, range => moveBySyntax(view.state, range, !ltrAtCursor(view)));\n/**\nMove the cursor over the next syntactic element to the right.\n*/\nconst cursorSyntaxRight = view => moveSel(view, range => moveBySyntax(view.state, range, ltrAtCursor(view)));\nfunction cursorByLine(view, forward) {\n    return moveSel(view, range => {\n        if (!range.empty)\n            return rangeEnd(range, forward);\n        let moved = view.moveVertically(range, forward);\n        return moved.head != range.head ? moved : view.moveToLineBoundary(range, forward);\n    });\n}\n/**\nMove the selection one line up.\n*/\nconst cursorLineUp = view => cursorByLine(view, false);\n/**\nMove the selection one line down.\n*/\nconst cursorLineDown = view => cursorByLine(view, true);\nfunction pageInfo(view) {\n    let selfScroll = view.scrollDOM.clientHeight < view.scrollDOM.scrollHeight - 2;\n    let marginTop = 0, marginBottom = 0, height;\n    if (selfScroll) {\n        for (let source of view.state.facet(EditorView.scrollMargins)) {\n            let margins = source(view);\n            if (margins === null || margins === void 0 ? void 0 : margins.top)\n                marginTop = Math.max(margins === null || margins === void 0 ? void 0 : margins.top, marginTop);\n            if (margins === null || margins === void 0 ? void 0 : margins.bottom)\n                marginBottom = Math.max(margins === null || margins === void 0 ? void 0 : margins.bottom, marginBottom);\n        }\n        height = view.scrollDOM.clientHeight - marginTop - marginBottom;\n    }\n    else {\n        height = (view.dom.ownerDocument.defaultView || window).innerHeight;\n    }\n    return { marginTop, marginBottom, selfScroll,\n        height: Math.max(view.defaultLineHeight, height - 5) };\n}\nfunction cursorByPage(view, forward) {\n    let page = pageInfo(view);\n    let { state } = view, selection = updateSel(state.selection, range => {\n        return range.empty ? view.moveVertically(range, forward, page.height)\n            : rangeEnd(range, forward);\n    });\n    if (selection.eq(state.selection))\n        return false;\n    let effect;\n    if (page.selfScroll) {\n        let startPos = view.coordsAtPos(state.selection.main.head);\n        let scrollRect = view.scrollDOM.getBoundingClientRect();\n        let scrollTop = scrollRect.top + page.marginTop, scrollBottom = scrollRect.bottom - page.marginBottom;\n        if (startPos && startPos.top > scrollTop && startPos.bottom < scrollBottom)\n            effect = EditorView.scrollIntoView(selection.main.head, { y: \"start\", yMargin: startPos.top - scrollTop });\n    }\n    view.dispatch(setSel(state, selection), { effects: effect });\n    return true;\n}\n/**\nMove the selection one page up.\n*/\nconst cursorPageUp = view => cursorByPage(view, false);\n/**\nMove the selection one page down.\n*/\nconst cursorPageDown = view => cursorByPage(view, true);\nfunction moveByLineBoundary(view, start, forward) {\n    let line = view.lineBlockAt(start.head), moved = view.moveToLineBoundary(start, forward);\n    if (moved.head == start.head && moved.head != (forward ? line.to : line.from))\n        moved = view.moveToLineBoundary(start, forward, false);\n    if (!forward && moved.head == line.from && line.length) {\n        let space = /^\\s*/.exec(view.state.sliceDoc(line.from, Math.min(line.from + 100, line.to)))[0].length;\n        if (space && start.head != line.from + space)\n            moved = EditorSelection.cursor(line.from + space);\n    }\n    return moved;\n}\n/**\nMove the selection to the next line wrap point, or to the end of\nthe line if there isn't one left on this line.\n*/\nconst cursorLineBoundaryForward = view => moveSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection to previous line wrap point, or failing that to\nthe start of the line. If the line is indented, and the cursor\nisn't already at the end of the indentation, this will move to the\nend of the indentation instead of the start of the line.\n*/\nconst cursorLineBoundaryBackward = view => moveSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection one line wrap point to the left.\n*/\nconst cursorLineBoundaryLeft = view => moveSel(view, range => moveByLineBoundary(view, range, !ltrAtCursor(view)));\n/**\nMove the selection one line wrap point to the right.\n*/\nconst cursorLineBoundaryRight = view => moveSel(view, range => moveByLineBoundary(view, range, ltrAtCursor(view)));\n/**\nMove the selection to the start of the line.\n*/\nconst cursorLineStart = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from, 1));\n/**\nMove the selection to the end of the line.\n*/\nconst cursorLineEnd = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to, -1));\nfunction toMatchingBracket(state, dispatch, extend) {\n    let found = false, selection = updateSel(state.selection, range => {\n        let matching = matchBrackets(state, range.head, -1)\n            || matchBrackets(state, range.head, 1)\n            || (range.head > 0 && matchBrackets(state, range.head - 1, 1))\n            || (range.head < state.doc.length && matchBrackets(state, range.head + 1, -1));\n        if (!matching || !matching.end)\n            return range;\n        found = true;\n        let head = matching.start.from == range.head ? matching.end.to : matching.end.from;\n        return extend ? EditorSelection.range(range.anchor, head) : EditorSelection.cursor(head);\n    });\n    if (!found)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\n/**\nMove the selection to the bracket matching the one it is currently\non, if any.\n*/\nconst cursorMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, false);\n/**\nExtend the selection to the bracket matching the one the selection\nhead is currently on, if any.\n*/\nconst selectMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, true);\nfunction extendSel(view, how) {\n    let selection = updateSel(view.state.selection, range => {\n        let head = how(range);\n        return EditorSelection.range(range.anchor, head.head, head.goalColumn, head.bidiLevel || undefined);\n    });\n    if (selection.eq(view.state.selection))\n        return false;\n    view.dispatch(setSel(view.state, selection));\n    return true;\n}\nfunction selectByChar(view, forward) {\n    return extendSel(view, range => view.moveByChar(range, forward));\n}\n/**\nMove the selection head one character to the left, while leaving\nthe anchor in place.\n*/\nconst selectCharLeft = view => selectByChar(view, !ltrAtCursor(view));\n/**\nMove the selection head one character to the right.\n*/\nconst selectCharRight = view => selectByChar(view, ltrAtCursor(view));\n/**\nMove the selection head one character forward.\n*/\nconst selectCharForward = view => selectByChar(view, true);\n/**\nMove the selection head one character backward.\n*/\nconst selectCharBackward = view => selectByChar(view, false);\nfunction selectByGroup(view, forward) {\n    return extendSel(view, range => view.moveByGroup(range, forward));\n}\n/**\nMove the selection head one [group](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) to\nthe left.\n*/\nconst selectGroupLeft = view => selectByGroup(view, !ltrAtCursor(view));\n/**\nMove the selection head one group to the right.\n*/\nconst selectGroupRight = view => selectByGroup(view, ltrAtCursor(view));\n/**\nMove the selection head one group forward.\n*/\nconst selectGroupForward = view => selectByGroup(view, true);\n/**\nMove the selection head one group backward.\n*/\nconst selectGroupBackward = view => selectByGroup(view, false);\nfunction selectBySubword(view, forward) {\n    return extendSel(view, range => moveBySubword(view, range, forward));\n}\n/**\nMove the selection head one group or camel-case subword forward.\n*/\nconst selectSubwordForward = view => selectBySubword(view, true);\n/**\nMove the selection head one group or subword backward.\n*/\nconst selectSubwordBackward = view => selectBySubword(view, false);\n/**\nMove the selection head over the next syntactic element to the left.\n*/\nconst selectSyntaxLeft = view => extendSel(view, range => moveBySyntax(view.state, range, !ltrAtCursor(view)));\n/**\nMove the selection head over the next syntactic element to the right.\n*/\nconst selectSyntaxRight = view => extendSel(view, range => moveBySyntax(view.state, range, ltrAtCursor(view)));\nfunction selectByLine(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward));\n}\n/**\nMove the selection head one line up.\n*/\nconst selectLineUp = view => selectByLine(view, false);\n/**\nMove the selection head one line down.\n*/\nconst selectLineDown = view => selectByLine(view, true);\nfunction selectByPage(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward, pageInfo(view).height));\n}\n/**\nMove the selection head one page up.\n*/\nconst selectPageUp = view => selectByPage(view, false);\n/**\nMove the selection head one page down.\n*/\nconst selectPageDown = view => selectByPage(view, true);\n/**\nMove the selection head to the next line boundary.\n*/\nconst selectLineBoundaryForward = view => extendSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection head to the previous line boundary.\n*/\nconst selectLineBoundaryBackward = view => extendSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection head one line boundary to the left.\n*/\nconst selectLineBoundaryLeft = view => extendSel(view, range => moveByLineBoundary(view, range, !ltrAtCursor(view)));\n/**\nMove the selection head one line boundary to the right.\n*/\nconst selectLineBoundaryRight = view => extendSel(view, range => moveByLineBoundary(view, range, ltrAtCursor(view)));\n/**\nMove the selection head to the start of the line.\n*/\nconst selectLineStart = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from));\n/**\nMove the selection head to the end of the line.\n*/\nconst selectLineEnd = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to));\n/**\nMove the selection to the start of the document.\n*/\nconst cursorDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: 0 }));\n    return true;\n};\n/**\nMove the selection to the end of the document.\n*/\nconst cursorDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.doc.length }));\n    return true;\n};\n/**\nMove the selection head to the start of the document.\n*/\nconst selectDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: 0 }));\n    return true;\n};\n/**\nMove the selection head to the end of the document.\n*/\nconst selectDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: state.doc.length }));\n    return true;\n};\n/**\nSelect the entire document.\n*/\nconst selectAll = ({ state, dispatch }) => {\n    dispatch(state.update({ selection: { anchor: 0, head: state.doc.length }, userEvent: \"select\" }));\n    return true;\n};\n/**\nExpand the selection to cover entire lines.\n*/\nconst selectLine = ({ state, dispatch }) => {\n    let ranges = selectedLineBlocks(state).map(({ from, to }) => EditorSelection.range(from, Math.min(to + 1, state.doc.length)));\n    dispatch(state.update({ selection: EditorSelection.create(ranges), userEvent: \"select\" }));\n    return true;\n};\n/**\nSelect the next syntactic construct that is larger than the\nselection. Note that this will only work insofar as the language\n[provider](https://codemirror.net/6/docs/ref/#language.language) you use builds up a full\nsyntax tree.\n*/\nconst selectParentSyntax = ({ state, dispatch }) => {\n    let selection = updateSel(state.selection, range => {\n        var _a;\n        let context = syntaxTree(state).resolveInner(range.head, 1);\n        while (!((context.from < range.from && context.to >= range.to) ||\n            (context.to > range.to && context.from <= range.from) ||\n            !((_a = context.parent) === null || _a === void 0 ? void 0 : _a.parent)))\n            context = context.parent;\n        return EditorSelection.range(context.to, context.from);\n    });\n    dispatch(setSel(state, selection));\n    return true;\n};\n/**\nSimplify the current selection. When multiple ranges are selected,\nreduce it to its main range. Otherwise, if the selection is\nnon-empty, convert it to a cursor selection.\n*/\nconst simplifySelection = ({ state, dispatch }) => {\n    let cur = state.selection, selection = null;\n    if (cur.ranges.length > 1)\n        selection = EditorSelection.create([cur.main]);\n    else if (!cur.main.empty)\n        selection = EditorSelection.create([EditorSelection.cursor(cur.main.head)]);\n    if (!selection)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n};\nfunction deleteBy(target, by) {\n    if (target.state.readOnly)\n        return false;\n    let event = \"delete.selection\", { state } = target;\n    let changes = state.changeByRange(range => {\n        let { from, to } = range;\n        if (from == to) {\n            let towards = by(from);\n            if (towards < from) {\n                event = \"delete.backward\";\n                towards = skipAtomic(target, towards, false);\n            }\n            else if (towards > from) {\n                event = \"delete.forward\";\n                towards = skipAtomic(target, towards, true);\n            }\n            from = Math.min(from, towards);\n            to = Math.max(to, towards);\n        }\n        else {\n            from = skipAtomic(target, from, false);\n            to = skipAtomic(target, to, true);\n        }\n        return from == to ? { range } : { changes: { from, to }, range: EditorSelection.cursor(from) };\n    });\n    if (changes.changes.empty)\n        return false;\n    target.dispatch(state.update(changes, {\n        scrollIntoView: true,\n        userEvent: event,\n        effects: event == \"delete.selection\" ? EditorView.announce.of(state.phrase(\"Selection deleted\")) : undefined\n    }));\n    return true;\n}\nfunction skipAtomic(target, pos, forward) {\n    if (target instanceof EditorView)\n        for (let ranges of target.state.facet(EditorView.atomicRanges).map(f => f(target)))\n            ranges.between(pos, pos, (from, to) => {\n                if (from < pos && to > pos)\n                    pos = forward ? to : from;\n            });\n    return pos;\n}\nconst deleteByChar = (target, forward) => deleteBy(target, pos => {\n    let { state } = target, line = state.doc.lineAt(pos), before, targetPos;\n    if (!forward && pos > line.from && pos < line.from + 200 &&\n        !/[^ \\t]/.test(before = line.text.slice(0, pos - line.from))) {\n        if (before[before.length - 1] == \"\\t\")\n            return pos - 1;\n        let col = countColumn(before, state.tabSize), drop = col % getIndentUnit(state) || getIndentUnit(state);\n        for (let i = 0; i < drop && before[before.length - 1 - i] == \" \"; i++)\n            pos--;\n        targetPos = pos;\n    }\n    else {\n        targetPos = findClusterBreak(line.text, pos - line.from, forward, forward) + line.from;\n        if (targetPos == pos && line.number != (forward ? state.doc.lines : 1))\n            targetPos += forward ? 1 : -1;\n    }\n    return targetPos;\n});\n/**\nDelete the selection, or, for cursor selections, the character\nbefore the cursor.\n*/\nconst deleteCharBackward = view => deleteByChar(view, false);\n/**\nDelete the selection or the character after the cursor.\n*/\nconst deleteCharForward = view => deleteByChar(view, true);\nconst deleteByGroup = (target, forward) => deleteBy(target, start => {\n    let pos = start, { state } = target, line = state.doc.lineAt(pos);\n    let categorize = state.charCategorizer(pos);\n    for (let cat = null;;) {\n        if (pos == (forward ? line.to : line.from)) {\n            if (pos == start && line.number != (forward ? state.doc.lines : 1))\n                pos += forward ? 1 : -1;\n            break;\n        }\n        let next = findClusterBreak(line.text, pos - line.from, forward) + line.from;\n        let nextChar = line.text.slice(Math.min(pos, next) - line.from, Math.max(pos, next) - line.from);\n        let nextCat = categorize(nextChar);\n        if (cat != null && nextCat != cat)\n            break;\n        if (nextChar != \" \" || pos != start)\n            cat = nextCat;\n        pos = next;\n    }\n    return pos;\n});\n/**\nDelete the selection or backward until the end of the next\n[group](https://codemirror.net/6/docs/ref/#view.EditorView.moveByGroup), only skipping groups of\nwhitespace when they consist of a single space.\n*/\nconst deleteGroupBackward = target => deleteByGroup(target, false);\n/**\nDelete the selection or forward until the end of the next group.\n*/\nconst deleteGroupForward = target => deleteByGroup(target, true);\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe end of the line. If the cursor is directly at the end of the\nline, delete the line break after it.\n*/\nconst deleteToLineEnd = view => deleteBy(view, pos => {\n    let lineEnd = view.lineBlockAt(pos).to;\n    return pos < lineEnd ? lineEnd : Math.min(view.state.doc.length, pos + 1);\n});\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe start of the line. If the cursor is directly at the start of the\nline, delete the line break before it.\n*/\nconst deleteToLineStart = view => deleteBy(view, pos => {\n    let lineStart = view.lineBlockAt(pos).from;\n    return pos > lineStart ? lineStart : Math.max(0, pos - 1);\n});\n/**\nDelete all whitespace directly before a line end from the\ndocument.\n*/\nconst deleteTrailingWhitespace = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = [];\n    for (let pos = 0, prev = \"\", iter = state.doc.iter();;) {\n        iter.next();\n        if (iter.lineBreak || iter.done) {\n            let trailing = prev.search(/\\s+$/);\n            if (trailing > -1)\n                changes.push({ from: pos - (prev.length - trailing), to: pos });\n            if (iter.done)\n                break;\n            prev = \"\";\n        }\n        else {\n            prev = iter.value;\n        }\n        pos += iter.value.length;\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({ changes, userEvent: \"delete\" }));\n    return true;\n};\n/**\nReplace each selection range with a line break, leaving the cursor\non the line before the break.\n*/\nconst splitLine = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        return { changes: { from: range.from, to: range.to, insert: Text.of([\"\", \"\"]) },\n            range: EditorSelection.cursor(range.from) };\n    });\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nFlip the characters before and after the cursor(s).\n*/\nconst transposeChars = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        if (!range.empty || range.from == 0 || range.from == state.doc.length)\n            return { range };\n        let pos = range.from, line = state.doc.lineAt(pos);\n        let from = pos == line.from ? pos - 1 : findClusterBreak(line.text, pos - line.from, false) + line.from;\n        let to = pos == line.to ? pos + 1 : findClusterBreak(line.text, pos - line.from, true) + line.from;\n        return { changes: { from, to, insert: state.doc.slice(pos, to).append(state.doc.slice(from, pos)) },\n            range: EditorSelection.cursor(to) };\n    });\n    if (changes.changes.empty)\n        return false;\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"move.character\" }));\n    return true;\n};\nfunction selectedLineBlocks(state) {\n    let blocks = [], upto = -1;\n    for (let range of state.selection.ranges) {\n        let startLine = state.doc.lineAt(range.from), endLine = state.doc.lineAt(range.to);\n        if (!range.empty && range.to == endLine.from)\n            endLine = state.doc.lineAt(range.to - 1);\n        if (upto >= startLine.number) {\n            let prev = blocks[blocks.length - 1];\n            prev.to = endLine.to;\n            prev.ranges.push(range);\n        }\n        else {\n            blocks.push({ from: startLine.from, to: endLine.to, ranges: [range] });\n        }\n        upto = endLine.number + 1;\n    }\n    return blocks;\n}\nfunction moveLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [], ranges = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward ? block.to == state.doc.length : block.from == 0)\n            continue;\n        let nextLine = state.doc.lineAt(forward ? block.to + 1 : block.from - 1);\n        let size = nextLine.length + 1;\n        if (forward) {\n            changes.push({ from: block.to, to: nextLine.to }, { from: block.from, insert: nextLine.text + state.lineBreak });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(Math.min(state.doc.length, r.anchor + size), Math.min(state.doc.length, r.head + size)));\n        }\n        else {\n            changes.push({ from: nextLine.from, to: block.from }, { from: block.to, insert: state.lineBreak + nextLine.text });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(r.anchor - size, r.head - size));\n        }\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({\n        changes,\n        scrollIntoView: true,\n        selection: EditorSelection.create(ranges, state.selection.mainIndex),\n        userEvent: \"move.line\"\n    }));\n    return true;\n}\n/**\nMove the selected lines up one line.\n*/\nconst moveLineUp = ({ state, dispatch }) => moveLine(state, dispatch, false);\n/**\nMove the selected lines down one line.\n*/\nconst moveLineDown = ({ state, dispatch }) => moveLine(state, dispatch, true);\nfunction copyLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward)\n            changes.push({ from: block.from, insert: state.doc.slice(block.from, block.to) + state.lineBreak });\n        else\n            changes.push({ from: block.to, insert: state.lineBreak + state.doc.slice(block.from, block.to) });\n    }\n    dispatch(state.update({ changes, scrollIntoView: true, userEvent: \"input.copyline\" }));\n    return true;\n}\n/**\nCreate a copy of the selected lines. Keep the selection in the top copy.\n*/\nconst copyLineUp = ({ state, dispatch }) => copyLine(state, dispatch, false);\n/**\nCreate a copy of the selected lines. Keep the selection in the bottom copy.\n*/\nconst copyLineDown = ({ state, dispatch }) => copyLine(state, dispatch, true);\n/**\nDelete selected lines.\n*/\nconst deleteLine = view => {\n    if (view.state.readOnly)\n        return false;\n    let { state } = view, changes = state.changes(selectedLineBlocks(state).map(({ from, to }) => {\n        if (from > 0)\n            from--;\n        else if (to < state.doc.length)\n            to++;\n        return { from, to };\n    }));\n    let selection = updateSel(state.selection, range => view.moveVertically(range, true)).map(changes);\n    view.dispatch({ changes, selection, scrollIntoView: true, userEvent: \"delete.line\" });\n    return true;\n};\n/**\nReplace the selection with a newline.\n*/\nconst insertNewline = ({ state, dispatch }) => {\n    dispatch(state.update(state.replaceSelection(state.lineBreak), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\nfunction isBetweenBrackets(state, pos) {\n    if (/\\(\\)|\\[\\]|\\{\\}/.test(state.sliceDoc(pos - 1, pos + 1)))\n        return { from: pos, to: pos };\n    let context = syntaxTree(state).resolveInner(pos);\n    let before = context.childBefore(pos), after = context.childAfter(pos), closedBy;\n    if (before && after && before.to <= pos && after.from >= pos &&\n        (closedBy = before.type.prop(NodeProp.closedBy)) && closedBy.indexOf(after.name) > -1 &&\n        state.doc.lineAt(before.to).from == state.doc.lineAt(after.from).from)\n        return { from: before.to, to: after.from };\n    return null;\n}\n/**\nReplace the selection with a newline and indent the newly created\nline(s). If the current line consists only of whitespace, this\nwill also delete that whitespace. When the cursor is between\nmatching brackets, an additional newline will be inserted after\nthe cursor.\n*/\nconst insertNewlineAndIndent = /*@__PURE__*/newlineAndIndent(false);\n/**\nCreate a blank, indented line below the current line.\n*/\nconst insertBlankLine = /*@__PURE__*/newlineAndIndent(true);\nfunction newlineAndIndent(atEof) {\n    return ({ state, dispatch }) => {\n        if (state.readOnly)\n            return false;\n        let changes = state.changeByRange(range => {\n            let { from, to } = range, line = state.doc.lineAt(from);\n            let explode = !atEof && from == to && isBetweenBrackets(state, from);\n            if (atEof)\n                from = to = (to <= line.to ? line : state.doc.lineAt(to)).to;\n            let cx = new IndentContext(state, { simulateBreak: from, simulateDoubleBreak: !!explode });\n            let indent = getIndentation(cx, from);\n            if (indent == null)\n                indent = /^\\s*/.exec(state.doc.lineAt(from).text)[0].length;\n            while (to < line.to && /\\s/.test(line.text[to - line.from]))\n                to++;\n            if (explode)\n                ({ from, to } = explode);\n            else if (from > line.from && from < line.from + 100 && !/\\S/.test(line.text.slice(0, from)))\n                from = line.from;\n            let insert = [\"\", indentString(state, indent)];\n            if (explode)\n                insert.push(indentString(state, cx.lineIndent(line.from, -1)));\n            return { changes: { from, to, insert: Text.of(insert) },\n                range: EditorSelection.cursor(from + 1 + insert[1].length) };\n        });\n        dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n        return true;\n    };\n}\nfunction changeBySelectedLine(state, f) {\n    let atLine = -1;\n    return state.changeByRange(range => {\n        let changes = [];\n        for (let pos = range.from; pos <= range.to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.number > atLine && (range.empty || range.to > line.from)) {\n                f(line, changes, range);\n                atLine = line.number;\n            }\n            pos = line.to + 1;\n        }\n        let changeSet = state.changes(changes);\n        return { changes,\n            range: EditorSelection.range(changeSet.mapPos(range.anchor, 1), changeSet.mapPos(range.head, 1)) };\n    });\n}\n/**\nAuto-indent the selected lines. This uses the [indentation service\nfacet](https://codemirror.net/6/docs/ref/#language.indentService) as source for auto-indent\ninformation.\n*/\nconst indentSelection = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let updated = Object.create(null);\n    let context = new IndentContext(state, { overrideIndentation: start => {\n            let found = updated[start];\n            return found == null ? -1 : found;\n        } });\n    let changes = changeBySelectedLine(state, (line, changes, range) => {\n        let indent = getIndentation(context, line.from);\n        if (indent == null)\n            return;\n        if (!/\\S/.test(line.text))\n            indent = 0;\n        let cur = /^\\s*/.exec(line.text)[0];\n        let norm = indentString(state, indent);\n        if (cur != norm || range.from < line.from + cur.length) {\n            updated[line.from] = indent;\n            changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n    });\n    if (!changes.changes.empty)\n        dispatch(state.update(changes, { userEvent: \"indent\" }));\n    return true;\n};\n/**\nAdd a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation to all selected\nlines.\n*/\nconst indentMore = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        changes.push({ from: line.from, insert: state.facet(indentUnit) });\n    }), { userEvent: \"input.indent\" }));\n    return true;\n};\n/**\nRemove a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation from all\nselected lines.\n*/\nconst indentLess = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        let space = /^\\s*/.exec(line.text)[0];\n        if (!space)\n            return;\n        let col = countColumn(space, state.tabSize), keep = 0;\n        let insert = indentString(state, Math.max(0, col - getIndentUnit(state)));\n        while (keep < space.length && keep < insert.length && space.charCodeAt(keep) == insert.charCodeAt(keep))\n            keep++;\n        changes.push({ from: line.from + keep, to: line.from + space.length, insert: insert.slice(keep) });\n    }), { userEvent: \"delete.dedent\" }));\n    return true;\n};\n/**\nInsert a tab character at the cursor or, if something is selected,\nuse [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore) to indent the entire\nselection.\n*/\nconst insertTab = ({ state, dispatch }) => {\n    if (state.selection.ranges.some(r => !r.empty))\n        return indentMore({ state, dispatch });\n    dispatch(state.update(state.replaceSelection(\"\\t\"), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nArray of key bindings containing the Emacs-style bindings that are\navailable on macOS by default.\n\n - Ctrl-b: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - Ctrl-f: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-p: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - Ctrl-n: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Ctrl-a: [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Ctrl-e: [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - Ctrl-d: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-h: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Ctrl-k: [`deleteToLineEnd`](https://codemirror.net/6/docs/ref/#commands.deleteToLineEnd)\n - Ctrl-Alt-h: [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-o: [`splitLine`](https://codemirror.net/6/docs/ref/#commands.splitLine)\n - Ctrl-t: [`transposeChars`](https://codemirror.net/6/docs/ref/#commands.transposeChars)\n - Ctrl-v: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown)\n - Alt-v: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp)\n*/\nconst emacsStyleKeymap = [\n    { key: \"Ctrl-b\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Ctrl-f\", run: cursorCharRight, shift: selectCharRight },\n    { key: \"Ctrl-p\", run: cursorLineUp, shift: selectLineUp },\n    { key: \"Ctrl-n\", run: cursorLineDown, shift: selectLineDown },\n    { key: \"Ctrl-a\", run: cursorLineStart, shift: selectLineStart },\n    { key: \"Ctrl-e\", run: cursorLineEnd, shift: selectLineEnd },\n    { key: \"Ctrl-d\", run: deleteCharForward },\n    { key: \"Ctrl-h\", run: deleteCharBackward },\n    { key: \"Ctrl-k\", run: deleteToLineEnd },\n    { key: \"Ctrl-Alt-h\", run: deleteGroupBackward },\n    { key: \"Ctrl-o\", run: splitLine },\n    { key: \"Ctrl-t\", run: transposeChars },\n    { key: \"Ctrl-v\", run: cursorPageDown },\n];\n/**\nAn array of key bindings closely sticking to platform-standard or\nwidely used bindings. (This includes the bindings from\n[`emacsStyleKeymap`](https://codemirror.net/6/docs/ref/#commands.emacsStyleKeymap), with their `key`\nproperty changed to `mac`.)\n\n - ArrowLeft: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - ArrowRight: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-ArrowLeft (Alt-ArrowLeft on macOS): [`cursorGroupLeft`](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) ([`selectGroupLeft`](https://codemirror.net/6/docs/ref/#commands.selectGroupLeft) with Shift)\n - Ctrl-ArrowRight (Alt-ArrowRight on macOS): [`cursorGroupRight`](https://codemirror.net/6/docs/ref/#commands.cursorGroupRight) ([`selectGroupRight`](https://codemirror.net/6/docs/ref/#commands.selectGroupRight) with Shift)\n - Cmd-ArrowLeft (on macOS): [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Cmd-ArrowRight (on macOS): [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - ArrowUp: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - ArrowDown: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Cmd-ArrowUp (on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Cmd-ArrowDown (on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Ctrl-ArrowUp (on macOS): [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - Ctrl-ArrowDown (on macOS): [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - PageUp: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - PageDown: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - Home: [`cursorLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryBackward) ([`selectLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryBackward) with Shift)\n - End: [`cursorLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryForward) ([`selectLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryForward) with Shift)\n - Ctrl-Home (Cmd-Home on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Ctrl-End (Cmd-Home on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Enter: [`insertNewlineAndIndent`](https://codemirror.net/6/docs/ref/#commands.insertNewlineAndIndent)\n - Ctrl-a (Cmd-a on macOS): [`selectAll`](https://codemirror.net/6/docs/ref/#commands.selectAll)\n - Backspace: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Delete: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-Backspace (Alt-Backspace on macOS): [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-Delete (Alt-Delete on macOS): [`deleteGroupForward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupForward)\n - Cmd-Backspace (macOS): [`deleteToLineStart`](https://codemirror.net/6/docs/ref/#commands.deleteToLineStart).\n - Cmd-Delete (macOS): [`deleteToLineEnd`](https://codemirror.net/6/docs/ref/#commands.deleteToLineEnd).\n*/\nconst standardKeymap = /*@__PURE__*/[\n    { key: \"ArrowLeft\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Mod-ArrowLeft\", mac: \"Alt-ArrowLeft\", run: cursorGroupLeft, shift: selectGroupLeft, preventDefault: true },\n    { mac: \"Cmd-ArrowLeft\", run: cursorLineBoundaryLeft, shift: selectLineBoundaryLeft, preventDefault: true },\n    { key: \"ArrowRight\", run: cursorCharRight, shift: selectCharRight, preventDefault: true },\n    { key: \"Mod-ArrowRight\", mac: \"Alt-ArrowRight\", run: cursorGroupRight, shift: selectGroupRight, preventDefault: true },\n    { mac: \"Cmd-ArrowRight\", run: cursorLineBoundaryRight, shift: selectLineBoundaryRight, preventDefault: true },\n    { key: \"ArrowUp\", run: cursorLineUp, shift: selectLineUp, preventDefault: true },\n    { mac: \"Cmd-ArrowUp\", run: cursorDocStart, shift: selectDocStart },\n    { mac: \"Ctrl-ArrowUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"ArrowDown\", run: cursorLineDown, shift: selectLineDown, preventDefault: true },\n    { mac: \"Cmd-ArrowDown\", run: cursorDocEnd, shift: selectDocEnd },\n    { mac: \"Ctrl-ArrowDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"PageUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"PageDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"Home\", run: cursorLineBoundaryBackward, shift: selectLineBoundaryBackward, preventDefault: true },\n    { key: \"Mod-Home\", run: cursorDocStart, shift: selectDocStart },\n    { key: \"End\", run: cursorLineBoundaryForward, shift: selectLineBoundaryForward, preventDefault: true },\n    { key: \"Mod-End\", run: cursorDocEnd, shift: selectDocEnd },\n    { key: \"Enter\", run: insertNewlineAndIndent },\n    { key: \"Mod-a\", run: selectAll },\n    { key: \"Backspace\", run: deleteCharBackward, shift: deleteCharBackward },\n    { key: \"Delete\", run: deleteCharForward },\n    { key: \"Mod-Backspace\", mac: \"Alt-Backspace\", run: deleteGroupBackward },\n    { key: \"Mod-Delete\", mac: \"Alt-Delete\", run: deleteGroupForward },\n    { mac: \"Mod-Backspace\", run: deleteToLineStart },\n    { mac: \"Mod-Delete\", run: deleteToLineEnd }\n].concat(/*@__PURE__*/emacsStyleKeymap.map(b => ({ mac: b.key, run: b.run, shift: b.shift })));\n/**\nThe default keymap. Includes all bindings from\n[`standardKeymap`](https://codemirror.net/6/docs/ref/#commands.standardKeymap) plus the following:\n\n- Alt-ArrowLeft (Ctrl-ArrowLeft on macOS): [`cursorSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxLeft) ([`selectSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxLeft) with Shift)\n- Alt-ArrowRight (Ctrl-ArrowRight on macOS): [`cursorSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxRight) ([`selectSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxRight) with Shift)\n- Alt-ArrowUp: [`moveLineUp`](https://codemirror.net/6/docs/ref/#commands.moveLineUp)\n- Alt-ArrowDown: [`moveLineDown`](https://codemirror.net/6/docs/ref/#commands.moveLineDown)\n- Shift-Alt-ArrowUp: [`copyLineUp`](https://codemirror.net/6/docs/ref/#commands.copyLineUp)\n- Shift-Alt-ArrowDown: [`copyLineDown`](https://codemirror.net/6/docs/ref/#commands.copyLineDown)\n- Escape: [`simplifySelection`](https://codemirror.net/6/docs/ref/#commands.simplifySelection)\n- Ctrl-Enter (Cmd-Enter on macOS): [`insertBlankLine`](https://codemirror.net/6/docs/ref/#commands.insertBlankLine)\n- Alt-l (Ctrl-l on macOS): [`selectLine`](https://codemirror.net/6/docs/ref/#commands.selectLine)\n- Ctrl-i (Cmd-i on macOS): [`selectParentSyntax`](https://codemirror.net/6/docs/ref/#commands.selectParentSyntax)\n- Ctrl-[ (Cmd-[ on macOS): [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess)\n- Ctrl-] (Cmd-] on macOS): [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore)\n- Ctrl-Alt-\\\\ (Cmd-Alt-\\\\ on macOS): [`indentSelection`](https://codemirror.net/6/docs/ref/#commands.indentSelection)\n- Shift-Ctrl-k (Shift-Cmd-k on macOS): [`deleteLine`](https://codemirror.net/6/docs/ref/#commands.deleteLine)\n- Shift-Ctrl-\\\\ (Shift-Cmd-\\\\ on macOS): [`cursorMatchingBracket`](https://codemirror.net/6/docs/ref/#commands.cursorMatchingBracket)\n- Ctrl-/ (Cmd-/ on macOS): [`toggleComment`](https://codemirror.net/6/docs/ref/#commands.toggleComment).\n- Shift-Alt-a: [`toggleBlockComment`](https://codemirror.net/6/docs/ref/#commands.toggleBlockComment).\n*/\nconst defaultKeymap = /*@__PURE__*/[\n    { key: \"Alt-ArrowLeft\", mac: \"Ctrl-ArrowLeft\", run: cursorSyntaxLeft, shift: selectSyntaxLeft },\n    { key: \"Alt-ArrowRight\", mac: \"Ctrl-ArrowRight\", run: cursorSyntaxRight, shift: selectSyntaxRight },\n    { key: \"Alt-ArrowUp\", run: moveLineUp },\n    { key: \"Shift-Alt-ArrowUp\", run: copyLineUp },\n    { key: \"Alt-ArrowDown\", run: moveLineDown },\n    { key: \"Shift-Alt-ArrowDown\", run: copyLineDown },\n    { key: \"Escape\", run: simplifySelection },\n    { key: \"Mod-Enter\", run: insertBlankLine },\n    { key: \"Alt-l\", mac: \"Ctrl-l\", run: selectLine },\n    { key: \"Mod-i\", run: selectParentSyntax, preventDefault: true },\n    { key: \"Mod-[\", run: indentLess },\n    { key: \"Mod-]\", run: indentMore },\n    { key: \"Mod-Alt-\\\\\", run: indentSelection },\n    { key: \"Shift-Mod-k\", run: deleteLine },\n    { key: \"Shift-Mod-\\\\\", run: cursorMatchingBracket },\n    { key: \"Mod-/\", run: toggleComment },\n    { key: \"Alt-A\", run: toggleBlockComment }\n].concat(standardKeymap);\n/**\nA binding that binds Tab to [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore) and\nShift-Tab to [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess).\nPlease see the [Tab example](../../examples/tab/) before using\nthis.\n*/\nconst indentWithTab = { key: \"Tab\", run: indentMore, shift: indentLess };\n\nexport { blockComment, blockUncomment, copyLineDown, copyLineUp, cursorCharBackward, cursorCharForward, cursorCharLeft, cursorCharRight, cursorDocEnd, cursorDocStart, cursorGroupBackward, cursorGroupForward, cursorGroupLeft, cursorGroupRight, cursorLineBoundaryBackward, cursorLineBoundaryForward, cursorLineBoundaryLeft, cursorLineBoundaryRight, cursorLineDown, cursorLineEnd, cursorLineStart, cursorLineUp, cursorMatchingBracket, cursorPageDown, cursorPageUp, cursorSubwordBackward, cursorSubwordForward, cursorSyntaxLeft, cursorSyntaxRight, defaultKeymap, deleteCharBackward, deleteCharForward, deleteGroupBackward, deleteGroupForward, deleteLine, deleteToLineEnd, deleteToLineStart, deleteTrailingWhitespace, emacsStyleKeymap, history, historyField, historyKeymap, indentLess, indentMore, indentSelection, indentWithTab, insertBlankLine, insertNewline, insertNewlineAndIndent, insertTab, invertedEffects, isolateHistory, lineComment, lineUncomment, moveLineDown, moveLineUp, redo, redoDepth, redoSelection, selectAll, selectCharBackward, selectCharForward, selectCharLeft, selectCharRight, selectDocEnd, selectDocStart, selectGroupBackward, selectGroupForward, selectGroupLeft, selectGroupRight, selectLine, selectLineBoundaryBackward, selectLineBoundaryForward, selectLineBoundaryLeft, selectLineBoundaryRight, selectLineDown, selectLineEnd, selectLineStart, selectLineUp, selectMatchingBracket, selectPageDown, selectPageUp, selectParentSyntax, selectSubwordBackward, selectSubwordForward, selectSyntaxLeft, selectSyntaxRight, simplifySelection, splitLine, standardKeymap, toggleBlockComment, toggleBlockCommentByLine, toggleComment, toggleLineComment, transposeChars, undo, undoDepth, undoSelection };\n","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { indentMore, insertTab } from '@codemirror/commands';\n/**\n * CodeMirror commands namespace\n */\nexport var StateCommands;\n(function (StateCommands) {\n    /**\n     * Indent or insert a tab as appropriate.\n     */\n    function indentMoreOrInsertTab(target) {\n        const arg = { state: target.state, dispatch: target.dispatch };\n        const from = target.state.selection.main.from;\n        const to = target.state.selection.main.to;\n        if (from != to) {\n            return indentMore(arg);\n        }\n        const line = target.state.doc.lineAt(from);\n        const before = target.state.doc.slice(line.from, from).toString();\n        if (/^\\s*$/.test(before)) {\n            return indentMore(arg);\n        }\n        else {\n            return insertTab(arg);\n        }\n    }\n    StateCommands.indentMoreOrInsertTab = indentMoreOrInsertTab;\n})(StateCommands || (StateCommands = {}));\n//# sourceMappingURL=commands.js.map","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { combineConfig, Facet } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\n/**\n * Custom theme configuration\n *\n * The first non-null value takes precedence\n */\nconst customThemeConfig = Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            fontFamily: null,\n            fontSize: null,\n            lineHeight: null\n        }, {\n            fontFamily: (a, b) => a !== null && a !== void 0 ? a : b,\n            fontSize: (a, b) => a !== null && a !== void 0 ? a : b,\n            lineHeight: (a, b) => a !== null && a !== void 0 ? a : b\n        });\n    }\n});\nfunction setEditorStyle(view) {\n    const { fontFamily, fontSize, lineHeight } = view.state.facet(customThemeConfig);\n    let style = '';\n    if (fontSize) {\n        style += `font-size: ${fontSize}px !important;`;\n    }\n    if (fontFamily) {\n        style += `font-family: ${fontFamily} !important;`;\n    }\n    if (lineHeight) {\n        style += `line-height: ${lineHeight.toString()} !important`;\n    }\n    return { style: style };\n}\n/**\n * Get the extension to customize an editor theme.\n *\n * @param config Theme customization\n * @returns Editor extension\n */\nexport function customTheme(config) {\n    return [\n        customThemeConfig.of(config),\n        EditorView.editorAttributes.of(setEditorStyle)\n    ];\n}\n//# sourceMappingURL=customStyle.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { parseMixed } from '@lezer/common';\nimport { tags } from '@lezer/highlight';\n// Mathematical expression delimiters\nconst INLINE_MATH_DOLLAR = 'InlineMathDollar';\nconst INLINE_MATH_BRACKET = 'InlineMathBracket';\nconst BLOCK_MATH_DOLLAR = 'BlockMathDollar';\nconst BLOCK_MATH_BRACKET = 'BlockMathBracket';\n/**\n * Lengh of the delimiter for a math expression\n */\nconst DELIMITER_LENGTH = {\n    [INLINE_MATH_DOLLAR]: 1,\n    [INLINE_MATH_BRACKET]: 3,\n    [BLOCK_MATH_DOLLAR]: 2,\n    [BLOCK_MATH_BRACKET]: 3\n};\n/**\n * Delimiters for math expressions\n */\n// Delimiters must be defined as constant because they are used in object match tests\nconst DELIMITERS = Object.keys(DELIMITER_LENGTH).reduce((agg, name) => {\n    agg[name] = { mark: `${name}Mark`, resolve: name };\n    return agg;\n}, {});\n/**\n * Define an IPython mathematical expression parser for Markdown.\n *\n * @param latexParser CodeMirror {@link Parser} for LaTeX mathematical expression\n * @returns Markdown extension\n */\nexport function parseMathIPython(latexParser) {\n    const defineNodes = new Array();\n    Object.keys(DELIMITER_LENGTH).forEach(name => {\n        defineNodes.push({\n            name,\n            style: tags.emphasis\n        }, { name: `${name}Mark`, style: tags.processingInstruction });\n    });\n    return {\n        defineNodes,\n        parseInline: [\n            {\n                name: BLOCK_MATH_DOLLAR,\n                parse(cx, next, pos) {\n                    if (next != 36 /* '$' */ || cx.char(pos + 1) != 36) {\n                        return -1;\n                    }\n                    return cx.addDelimiter(DELIMITERS[BLOCK_MATH_DOLLAR], pos, pos + DELIMITER_LENGTH[BLOCK_MATH_DOLLAR], true, true);\n                }\n            },\n            {\n                name: INLINE_MATH_DOLLAR,\n                parse(cx, next, pos) {\n                    if (next != 36 /* '$' */ || cx.char(pos + 1) == 36) {\n                        return -1;\n                    }\n                    return cx.addDelimiter(DELIMITERS[INLINE_MATH_DOLLAR], pos, pos + DELIMITER_LENGTH[INLINE_MATH_DOLLAR], true, true);\n                }\n            },\n            // Inline expression wrapped in \\\\( ... \\\\)\n            {\n                name: INLINE_MATH_BRACKET,\n                before: 'Escape',\n                parse(cx, next, pos) {\n                    if (next != 92 /* '\\' */ ||\n                        cx.char(pos + 1) != 92 ||\n                        ![40 /* '(' */, 41 /* ')' */].includes(cx.char(pos + 2))) {\n                        return -1;\n                    }\n                    return cx.addDelimiter(DELIMITERS[INLINE_MATH_BRACKET], pos, pos + DELIMITER_LENGTH[INLINE_MATH_BRACKET], cx.char(pos + 2) == 40, cx.char(pos + 2) == 41);\n                }\n            },\n            // Block expression wrapped in \\\\[ ... \\\\]\n            {\n                name: BLOCK_MATH_BRACKET,\n                before: 'Escape',\n                parse(cx, next, pos) {\n                    if (next != 92 /* '\\' */ ||\n                        cx.char(pos + 1) != 92 ||\n                        ![91 /* '[' */, 93 /* ']' */].includes(cx.char(pos + 2))) {\n                        return -1;\n                    }\n                    return cx.addDelimiter(DELIMITERS[BLOCK_MATH_BRACKET], pos, pos + DELIMITER_LENGTH[BLOCK_MATH_BRACKET], cx.char(pos + 2) == 91, cx.char(pos + 2) == 93);\n                }\n            }\n        ],\n        wrap: latexParser\n            ? parseMixed((node, input) => {\n                // Test if the node type is one of the math expression\n                const delimiterLength = DELIMITER_LENGTH[node.type.name];\n                if (delimiterLength) {\n                    return {\n                        parser: latexParser,\n                        // Remove delimiter from LaTeX parser otherwise it won't be highlighted\n                        overlay: [\n                            {\n                                from: node.from + delimiterLength,\n                                to: node.to - delimiterLength\n                            }\n                        ]\n                    };\n                }\n                return null;\n            })\n            : undefined\n    };\n}\n//# sourceMappingURL=ipython-md.js.map","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\n// Inspired by https://discuss.codemirror.net/t/how-to-implement-ruler/4616/\nimport { Facet } from '@codemirror/state';\nimport { EditorView, ViewPlugin } from '@codemirror/view';\nimport { JSONExt } from '@lumino/coreutils';\nconst RULERS_CLASSNAME = 'cm-rulers';\n/**\n * Rulers style\n */\nconst baseTheme = EditorView.baseTheme({\n    [`.${RULERS_CLASSNAME}`]: { borderRight: '1px dotted gray', opacity: 0.7 }\n});\n/**\n * Rulers facet\n */\nconst rulerConfig = Facet.define({\n    // Merge all unique values\n    combine(value) {\n        const final = value.reduce((agg, arr) => agg.concat(\n        // Check value is not in aggregate nor multiple time in the array.\n        arr.filter((v, idx) => !agg.includes(v) && idx == arr.lastIndexOf(v))), []);\n        return final;\n    }\n});\n/**\n * View plugin displaying the rulers\n */\nconst plugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.rulersContainer = view.dom.appendChild(document.createElement('div'));\n        this.rulersContainer.style.cssText = `\n                position: absolute;\n                left: 0;\n                top: 0;\n                width: 100%;\n                height: 100%;\n                pointer-events: none;\n                overflow: hidden;\n            `;\n        const defaultCharacterWidth = view.defaultCharacterWidth;\n        const widths = view.state.facet(rulerConfig);\n        this.rulers = widths.map(width => {\n            const ruler = this.rulersContainer.appendChild(document.createElement('div'));\n            ruler.classList.add(RULERS_CLASSNAME);\n            ruler.style.cssText = `\n                position: absolute;\n                left: ${width * defaultCharacterWidth}px;\n                height: 100%;\n            `;\n            // FIXME: This should be equal to the amount of padding on a line.\n            // This value should be extracted from CodeMirror rather than hardcoded.\n            ruler.style.width = '6px';\n            return ruler;\n        });\n    }\n    update(update) {\n        const widths = update.view.state.facet(rulerConfig);\n        if (update.viewportChanged ||\n            !JSONExt.deepEqual(widths, update.startState.facet(rulerConfig))) {\n            const defaultCharacterWidth = update.view.defaultCharacterWidth;\n            this.rulers.forEach((ruler, rulerIdx) => {\n                ruler.style.left = `${widths[rulerIdx] * defaultCharacterWidth}px`;\n            });\n        }\n    }\n    destroy() {\n        this.rulers.forEach(ruler => {\n            ruler.remove();\n        });\n        this.rulersContainer.remove();\n    }\n});\n/**\n * Extension for CodeMirror 6 displaying rulers.\n *\n * @param value Rulers position\n * @returns CodeMirror 6 extension\n */\nexport function rulers(value) {\n    return [baseTheme, rulerConfig.of(value), plugin];\n}\n//# sourceMappingURL=rulers.js.map","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n *\n * Binding for yjs and codemirror\n *\n * It is a simplification of https://github.com/yjs/y-codemirror.next\n * licensed under MIT License by Kevin Jahns\n */\nimport { Annotation, EditorSelection, Facet } from '@codemirror/state';\nimport { ViewPlugin } from '@codemirror/view';\nimport { createAbsolutePositionFromRelativePosition, createRelativePositionFromJSON, createRelativePositionFromTypeIndex, relativePositionToJSON } from 'yjs';\n/**\n * Defines a range on text using relative positions that can be transformed back to\n * absolute positions. (https://docs.yjs.dev/api/relative-positions)\n */\nexport class YRange {\n    /**\n     * @param yanchor\n     * @param yhead\n     */\n    constructor(yanchor, yhead) {\n        this.yanchor = yanchor;\n        this.yhead = yhead;\n    }\n    /**\n     * Convert the position to JSON\n     */\n    toJSON() {\n        return {\n            yanchor: relativePositionToJSON(this.yanchor),\n            yhead: relativePositionToJSON(this.yhead)\n        };\n    }\n    /**\n     * Convert a JSON range to a YRange\n     * @param json Range to convert\n     * @return The range as YRange\n     */\n    static fromJSON(json) {\n        return new YRange(createRelativePositionFromJSON(json.yanchor), createRelativePositionFromJSON(json.yhead));\n    }\n}\n/**\n * Yjs binding configuration\n */\nexport class YSyncConfig {\n    /**\n     * Create a new binding configuration\n     *\n     * @param ytext Yjs text to synchronize\n     */\n    constructor(ytext) {\n        this.ytext = ytext;\n    }\n    /**\n     * Helper function to transform an absolute index position to a Yjs-based relative position\n     * (https://docs.yjs.dev/api/relative-positions).\n     *\n     * A relative position can be transformed back to an absolute position even after the document has changed. The position is\n     * automatically adapted. This does not require any position transformations. Relative positions are computed based on\n     * the internal Yjs document model. Peers that share content through Yjs are guaranteed that their positions will always\n     * synced up when using relative positions.\n     *\n     * ```js\n     * import { ySyncFacet } from 'y-codemirror'\n     *\n     * ..\n     * const ysync = view.state.facet(ySyncFacet)\n     * // transform an absolute index position to a ypos\n     * const ypos = ysync.getYPos(3)\n     * // transform the ypos back to an absolute position\n     * ysync.fromYPos(ypos) // => 3\n     * ```\n     *\n     * It cannot be guaranteed that absolute index positions can be synced up between peers.\n     * This might lead to undesired behavior when implementing features that require that all peers see the\n     * same marked range (e.g. a comment plugin).\n     *\n     * @param pos\n     * @param assoc\n     */\n    toYPos(pos, assoc = 0) {\n        return createRelativePositionFromTypeIndex(this.ytext, pos, assoc);\n    }\n    /**\n     * @param rpos\n     */\n    fromYPos(rpos) {\n        const pos = createAbsolutePositionFromRelativePosition(createRelativePositionFromJSON(rpos), this.ytext.doc);\n        if (pos == null || pos.type !== this.ytext) {\n            throw new Error('[y-codemirror] The position you want to retrieve was created by a different document');\n        }\n        return {\n            pos: pos.index,\n            assoc: pos.assoc\n        };\n    }\n    /**\n     * @param range\n     * @return\n     */\n    toYRange(range) {\n        const assoc = range.assoc;\n        const yanchor = this.toYPos(range.anchor, assoc);\n        const yhead = this.toYPos(range.head, assoc);\n        return new YRange(yanchor, yhead);\n    }\n    /**\n     * @param yrange\n     */\n    fromYRange(yrange) {\n        const anchor = this.fromYPos(yrange.yanchor);\n        const head = this.fromYPos(yrange.yhead);\n        if (anchor.pos === head.pos) {\n            return EditorSelection.cursor(head.pos, head.assoc);\n        }\n        return EditorSelection.range(anchor.pos, head.pos);\n    }\n}\n/**\n * Yjs binding facet\n */\nexport const ySyncFacet = Facet.define({\n    combine(inputs) {\n        return inputs[inputs.length - 1];\n    }\n});\n/**\n * Yjs binding annotation\n *\n * It is used to track the origin of the document changes\n */\nexport const ySyncAnnotation = Annotation.define();\n/**\n * Yjs binding view plugin to synchronize the\n * editor state with the Yjs document.\n */\nexport const ySync = ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.conf = view.state.facet(ySyncFacet);\n        this._observer = (event, tr) => {\n            var _a;\n            if (tr.origin !== this.conf) {\n                const delta = event.delta;\n                const changes = [];\n                let pos = 0;\n                for (let i = 0; i < delta.length; i++) {\n                    const d = delta[i];\n                    if (d.insert != null) {\n                        changes.push({ from: pos, to: pos, insert: d.insert });\n                    }\n                    else if (d.delete != null) {\n                        changes.push({ from: pos, to: pos + d.delete, insert: '' });\n                        pos += d.delete;\n                    }\n                    else {\n                        pos += (_a = d.retain) !== null && _a !== void 0 ? _a : 0;\n                    }\n                }\n                view.dispatch({\n                    changes,\n                    // Specified the changes origin to not loop when synchronizing\n                    annotations: [ySyncAnnotation.of(this.conf)]\n                });\n            }\n        };\n        this._ytext = this.conf.ytext;\n        this._ytext.observe(this._observer);\n    }\n    update(update) {\n        if (!update.docChanged ||\n            (update.transactions.length > 0 &&\n                update.transactions[0].annotation(ySyncAnnotation) === this.conf)) {\n            return;\n        }\n        const ytext = this.conf.ytext;\n        ytext.doc.transact(() => {\n            /**\n             * This variable adjusts the fromA position to the current position in the Y.Text type.\n             */\n            let adj = 0;\n            update.changes.iterChanges((fromA, toA, fromB, toB, insert) => {\n                const insertText = insert.sliceString(0, insert.length, '\\n');\n                if (fromA !== toA) {\n                    ytext.delete(fromA + adj, toA - fromA);\n                }\n                if (insertText.length > 0) {\n                    ytext.insert(fromA + adj, insertText);\n                }\n                adj += insertText.length - (toA - fromA);\n            });\n            // Set the configuration as origin to not loop when synchronizing\n        }, this.conf);\n    }\n    destroy() {\n        this._ytext.unobserve(this._observer);\n    }\n});\n/**\n * Extension for CodeMirror 6 binding the Yjs text (source of truth)\n * and the editor state.\n *\n * @param ytext Yjs text to bind\n * @param undoManager Yjs text undo manager\n * @returns CodeMirror 6 extension\n */\nexport function ybinding({ ytext, undoManager }) {\n    const ySyncConfig = new YSyncConfig(ytext);\n    // We don't need the undo manager extension as in y-codemirror.next\n    // because we deal with undo/redo with our own keyboard shortcut mechanism.\n    return [\n        ySyncFacet.of(ySyncConfig),\n        ySync,\n        // We need to add a new origin to the undo manager to ensure text updates\n        // are tracked.\n        undoManager\n            ? ViewPlugin.define(() => {\n                undoManager.addTrackedOrigin(ySyncConfig);\n                return {\n                    destroy: () => {\n                        undoManager.removeTrackedOrigin(ySyncConfig);\n                    }\n                };\n            })\n            : []\n    ];\n}\n//# sourceMappingURL=ybinding.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { closeBrackets } from '@codemirror/autocomplete';\nimport { defaultKeymap, indentLess } from '@codemirror/commands';\nimport { bracketMatching, foldGutter, indentOnInput, indentUnit } from '@codemirror/language';\nimport { Compartment, EditorState, StateEffect } from '@codemirror/state';\nimport { crosshairCursor, drawSelection, EditorView, highlightActiveLine, highlightTrailingWhitespace, highlightWhitespace, keymap, lineNumbers, rectangularSelection, scrollPastEnd } from '@codemirror/view';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { JSONExt } from '@lumino/coreutils';\nimport { Signal } from '@lumino/signaling';\nimport { StateCommands } from './commands';\nimport { customTheme, rulers } from './extensions';\n/**\n * The class name added to read only editor widgets.\n */\nconst READ_ONLY_CLASS = 'jp-mod-readOnly';\n/**\n * Editor configuration handler\n *\n * It stores the editor configuration and the editor extensions.\n * It also allows to inject new extensions into an editor.\n */\nexport class ExtensionsHandler {\n    constructor({ baseConfiguration, config, defaultExtensions } = {}) {\n        this._configChanged = new Signal(this);\n        this._disposed = new Signal(this);\n        this._isDisposed = false;\n        this._immutables = new Set();\n        this._baseConfig = baseConfiguration !== null && baseConfiguration !== void 0 ? baseConfiguration : {};\n        this._config = config !== null && config !== void 0 ? config : {};\n        this._configurableBuilderMap = new Map(defaultExtensions);\n        const configurables = Object.keys(this._config).concat(Object.keys(this._baseConfig));\n        this._immutables = new Set([...this._configurableBuilderMap.keys()].filter(key => !configurables.includes(key)));\n    }\n    /**\n     * Signal triggered when the editor configuration changes.\n     * It provides the mapping of the new configuration (only those that changed).\n     *\n     * It should result in a call to `IExtensionsHandler.reconfigureExtensions`.\n     */\n    get configChanged() {\n        return this._configChanged;\n    }\n    /**\n     * A signal emitted when the object is disposed.\n     */\n    get disposed() {\n        return this._disposed;\n    }\n    /**\n     * Tests whether the object is disposed.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Dispose of the resources held by the object.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this._disposed.emit();\n        Signal.clearData(this);\n    }\n    /**\n     * Get a config option for the editor.\n     */\n    getOption(option) {\n        var _a;\n        return (_a = this._config[option]) !== null && _a !== void 0 ? _a : this._baseConfig[option];\n    }\n    /**\n     * Whether the option exists or not.\n     */\n    hasOption(option) {\n        return (Object.keys(this._config).includes(option) ||\n            Object.keys(this._baseConfig).includes(option));\n    }\n    /**\n     * Set a config option for the editor.\n     *\n     * You will need to reconfigure the editor extensions by listening\n     * to `IExtensionsHandler.configChanged`.\n     */\n    setOption(option, value) {\n        // Don't bother setting the option if it is already the same.\n        if (this._config[option] !== value) {\n            this._config[option] = value;\n            this._configChanged.emit({ [option]: value });\n        }\n    }\n    /**\n     * Set a base config option for the editor.\n     *\n     * You will need to reconfigure the editor extensions by listening\n     * to `IExtensionsHandler.configChanged`.\n     */\n    setBaseOptions(options) {\n        const changed = this._getChangedOptions(options, this._baseConfig);\n        if (changed.length > 0) {\n            this._baseConfig = options;\n            const customizedKeys = Object.keys(this._config);\n            const notOverridden = changed.filter(k => !customizedKeys.includes(k));\n            if (notOverridden.length > 0) {\n                this._configChanged.emit(notOverridden.reduce((agg, key) => {\n                    agg[key] = this._baseConfig[key];\n                    return agg;\n                }, {}));\n            }\n        }\n    }\n    /**\n     * Set config options for the editor.\n     *\n     * You will need to reconfigure the editor extensions by listening\n     * to `EditorHandler.configChanged`.\n     *\n     * This method is preferred when setting several options. The\n     * options are set within an operation, which only performs\n     * the costly update at the end, and not after every option\n     * is set.\n     */\n    setOptions(options) {\n        const changed = this._getChangedOptions(options, this._config);\n        if (changed.length > 0) {\n            this._config = { ...options };\n            this._configChanged.emit(changed.reduce((agg, key) => {\n                var _a;\n                agg[key] = (_a = this._config[key]) !== null && _a !== void 0 ? _a : this._baseConfig[key];\n                return agg;\n            }, {}));\n        }\n    }\n    /**\n     * Reconfigures the extension mapped with key with the provided value.\n     *\n     * @param view Editor view\n     * @param key Parameter unique key\n     * @param value Parameter value to be applied\n     */\n    reconfigureExtension(view, key, value) {\n        const effect = this.getEffect(view.state, key, value);\n        if (effect) {\n            view.dispatch({\n                effects: [effect]\n            });\n        }\n    }\n    /**\n     * Reconfigures all the extensions mapped with the options from the\n     * provided partial configuration.\n     *\n     * @param view Editor view\n     * @param configuration Editor configuration\n     */\n    reconfigureExtensions(view, configuration) {\n        const effects = Object.keys(configuration)\n            .filter(key => this.has(key))\n            .map(key => this.getEffect(view.state, key, configuration[key]));\n        view.dispatch({\n            effects: effects.filter(effect => effect !== null)\n        });\n    }\n    /**\n     * Appends extensions to the top-level configuration of the\n     * editor.\n     *\n     * Injected extension cannot be removed.\n     *\n     * ### Notes\n     * You should prefer registering a IEditorExtensionFactory instead\n     * of this feature.\n     *\n     * @alpha\n     * @param view Editor view\n     * @param extension Editor extension to inject\n     */\n    injectExtension(view, extension) {\n        view.dispatch({\n            effects: StateEffect.appendConfig.of(extension)\n        });\n    }\n    /**\n     * Returns the list of initial extensions of an editor\n     * based on the configuration.\n     *\n     * @returns The initial editor extensions\n     */\n    getInitialExtensions() {\n        const configuration = { ...this._baseConfig, ...this._config };\n        const extensions = [...this._immutables]\n            .map(key => { var _a; return (_a = this.get(key)) === null || _a === void 0 ? void 0 : _a.instance(undefined); })\n            .filter(ext => ext);\n        for (const k of Object.keys(configuration)) {\n            const builder = this.get(k);\n            if (builder) {\n                const value = configuration[k];\n                extensions.push(builder.instance(value));\n            }\n        }\n        return extensions;\n    }\n    /**\n     * Get a extension builder\n     * @param key Extension unique identifier\n     * @returns The extension builder\n     */\n    get(key) {\n        return this._configurableBuilderMap.get(key);\n    }\n    /**\n     * Whether the editor has an extension for the identifier.\n     *\n     * @param key Extension unique identifier\n     * @returns Extension existence\n     */\n    has(key) {\n        return this._configurableBuilderMap.has(key);\n    }\n    getEffect(state, key, value) {\n        var _a;\n        const builder = this.get(key);\n        return (_a = builder === null || builder === void 0 ? void 0 : builder.reconfigure(value)) !== null && _a !== void 0 ? _a : null;\n    }\n    _getChangedOptions(newConfig, oldConfig) {\n        const changed = new Array();\n        const newKeys = new Array();\n        for (const [key, value] of Object.entries(newConfig)) {\n            newKeys.push(key);\n            if (oldConfig[key] !== value) {\n                changed.push(key);\n            }\n        }\n        // Add removed old keys\n        changed.push(...Object.keys(oldConfig).filter(k => !newKeys.includes(k)));\n        return changed;\n    }\n}\n/**\n * CodeMirror extensions registry\n */\nexport class EditorExtensionRegistry {\n    constructor() {\n        this.configurationBuilder = new Map();\n        this.configurationSchema = {};\n        this.defaultOptions = {};\n        this.handlers = new Set();\n        this.immutableExtensions = new Set();\n        this._baseConfiguration = {};\n    }\n    /**\n     * Base editor configuration\n     *\n     * This is the default configuration optionally modified by the user;\n     * e.g. through user settings.\n     */\n    get baseConfiguration() {\n        return { ...this.defaultOptions, ...this._baseConfiguration };\n    }\n    set baseConfiguration(v) {\n        if (!JSONExt.deepEqual(v, this._baseConfiguration)) {\n            this._baseConfiguration = v;\n            for (const handler of this.handlers) {\n                handler.setBaseOptions(this.baseConfiguration);\n            }\n        }\n    }\n    /**\n     * Default editor configuration\n     *\n     * This is the default configuration as defined when extensions\n     * are registered.\n     */\n    get defaultConfiguration() {\n        // Only options with schema should be JSON serializable\n        // So we cannot use `JSONExt.deepCopy` on the default options.\n        return Object.freeze({ ...this.defaultOptions });\n    }\n    /**\n     * Editor configuration JSON schema\n     */\n    get settingsSchema() {\n        return Object.freeze(JSONExt.deepCopy(this.configurationSchema));\n    }\n    /**\n     * Add a default editor extension\n     *\n     * @template T Extension parameter type\n     * @param factory Extension factory\n     */\n    addExtension(factory) {\n        var _a;\n        if (this.configurationBuilder.has(factory.name)) {\n            throw new Error(`Extension named ${factory.name} is already registered.`);\n        }\n        this.configurationBuilder.set(factory.name, factory);\n        if (typeof factory.default != 'undefined') {\n            this.defaultOptions[factory.name] = factory.default;\n        }\n        if (factory.schema) {\n            this.configurationSchema[factory.name] = {\n                default: (_a = factory.default) !== null && _a !== void 0 ? _a : null,\n                ...factory.schema\n            };\n            this.defaultOptions[factory.name] =\n                this.configurationSchema[factory.name].default;\n        }\n    }\n    /**\n     * Create a new extensions handler for an editor\n     *\n     * @param options Extensions options and initial editor configuration\n     */\n    createNew(options) {\n        const configuration = new Array();\n        for (const [key, builder] of this.configurationBuilder.entries()) {\n            const extension = builder.factory(options);\n            if (extension) {\n                configuration.push([key, extension]);\n            }\n        }\n        const handler = new ExtensionsHandler({\n            baseConfiguration: this.baseConfiguration,\n            config: options.config,\n            defaultExtensions: configuration\n        });\n        this.handlers.add(handler);\n        handler.disposed.connect(() => {\n            this.handlers.delete(handler);\n        });\n        return handler;\n    }\n}\n/**\n * Editor extension registry namespace\n */\n(function (EditorExtensionRegistry) {\n    /**\n     * Dynamically configurable editor extension.\n     */\n    class ConfigurableExtension {\n        /**\n         * Create a dynamic editor extension.\n         *\n         * @param builder Extension builder\n         */\n        constructor(builder) {\n            this._compartment = new Compartment();\n            this._builder = builder;\n        }\n        /**\n         * Create an editor extension for the provided value.\n         *\n         * @param value Editor extension parameter value\n         * @returns The editor extension\n         */\n        instance(value) {\n            return this._compartment.of(this._builder(value));\n        }\n        /**\n         * Reconfigure an editor extension.\n         *\n         * @param value Editor extension value\n         * @returns Editor state effect\n         */\n        reconfigure(value) {\n            return this._compartment.reconfigure(this._builder(value));\n        }\n    }\n    /**\n     * Immutable editor extension class\n     */\n    class ImmutableExtension {\n        /**\n         * Create an immutable editor extension.\n         *\n         * @param extension Extension\n         */\n        constructor(extension) {\n            this._extension = extension;\n        }\n        /**\n         * Create an editor extension.\n         *\n         * @returns The editor extension\n         */\n        instance() {\n            return this._extension;\n        }\n        /**\n         * Reconfigure an editor extension.\n         *\n         * This is a no-op\n         */\n        reconfigure() {\n            // This is a no-op\n            return null;\n        }\n    }\n    /**\n     * Creates a dynamically configurable editor extension.\n     *\n     * @param builder Extension builder\n     * @return The extension\n     */\n    function createConfigurableExtension(builder) {\n        return new ConfigurableExtension(builder);\n    }\n    EditorExtensionRegistry.createConfigurableExtension = createConfigurableExtension;\n    /**\n     * Creates a configurable extension returning\n     * one of two extensions depending on a boolean value.\n     *\n     * @param truthy Extension to apply when the parameter is true\n     * @param falsy Extension to apply when the parameter is false\n     * @return The extension\n     */\n    function createConditionalExtension(truthy, falsy = []) {\n        return new ConfigurableExtension(value => value ? truthy : falsy);\n    }\n    EditorExtensionRegistry.createConditionalExtension = createConditionalExtension;\n    /**\n     * Creates an immutable extension.\n     *\n     * @param extension Immutable extension\n     * @return The extension\n     */\n    function createImmutableExtension(extension) {\n        return new ImmutableExtension(extension);\n    }\n    EditorExtensionRegistry.createImmutableExtension = createImmutableExtension;\n    /**\n     * Get the default editor extensions.\n     *\n     * @returns CodeMirror 6 extension factories\n     */\n    function getDefaultExtensions(options = {}) {\n        const { themes, translator } = options;\n        const trans = (translator !== null && translator !== void 0 ? translator : nullTranslator).load('jupyterlab');\n        const extensions = [\n            Object.freeze({\n                name: 'autoClosingBrackets',\n                default: false,\n                factory: () => createConditionalExtension(closeBrackets()),\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Auto Closing Brackets')\n                }\n            }),\n            Object.freeze({\n                name: 'codeFolding',\n                default: false,\n                factory: () => createConditionalExtension(foldGutter()),\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Code Folding')\n                }\n            }),\n            Object.freeze({\n                name: 'cursorBlinkRate',\n                default: 1200,\n                factory: () => createConfigurableExtension((value) => drawSelection({ cursorBlinkRate: value })),\n                schema: {\n                    type: 'number',\n                    title: trans.__('Cursor blinking rate'),\n                    description: trans.__('Half-period in milliseconds used for cursor blinking. The default blink rate is 1200ms. By setting this to zero, blinking can be disabled.')\n                }\n            }),\n            Object.freeze({\n                name: 'highlightActiveLine',\n                default: false,\n                factory: () => createConditionalExtension(highlightActiveLine()),\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Highlight the active line')\n                }\n            }),\n            Object.freeze({\n                name: 'highlightTrailingWhitespace',\n                default: false,\n                factory: () => createConditionalExtension(highlightTrailingWhitespace()),\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Highlight trailing white spaces')\n                }\n            }),\n            Object.freeze({\n                name: 'highlightWhitespace',\n                default: false,\n                factory: () => createConditionalExtension(highlightWhitespace()),\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Highlight white spaces')\n                }\n            }),\n            Object.freeze({\n                name: 'indentUnit',\n                default: '4',\n                factory: () => createConfigurableExtension((value) => value == 'Tab'\n                    ? indentUnit.of('\\t')\n                    : indentUnit.of(' '.repeat(parseInt(value, 10)))),\n                schema: {\n                    type: 'string',\n                    title: trans.__('Indentation unit'),\n                    description: trans.__('The indentation is a `Tab` or the number of spaces. This defaults to 4 spaces.'),\n                    enum: ['Tab', '1', '2', '4', '8']\n                }\n            }),\n            // Default keyboard shortcuts\n            // TODO at some point we may want to get this configurable\n            Object.freeze({\n                name: 'keymap',\n                default: [\n                    ...defaultKeymap,\n                    {\n                        key: 'Tab',\n                        run: StateCommands.indentMoreOrInsertTab,\n                        shift: indentLess\n                    }\n                ],\n                factory: () => createConfigurableExtension(value => keymap.of(value))\n            }),\n            Object.freeze({\n                name: 'lineNumbers',\n                default: true,\n                factory: () => createConditionalExtension(lineNumbers()),\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Line Numbers')\n                }\n            }),\n            Object.freeze({\n                name: 'lineWrap',\n                factory: () => createConditionalExtension(EditorView.lineWrapping),\n                default: true,\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Line Wrap')\n                }\n            }),\n            Object.freeze({\n                name: 'matchBrackets',\n                default: true,\n                factory: () => createConditionalExtension(bracketMatching()),\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Match Brackets')\n                }\n            }),\n            Object.freeze({\n                name: 'rectangularSelection',\n                default: true,\n                factory: () => createConditionalExtension([\n                    rectangularSelection(),\n                    crosshairCursor()\n                ]),\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Rectangular selection'),\n                    description: trans.__('Rectangular (block) selection can be created by dragging the mouse pointer while holding the left mouse button and the Alt key. When the Alt key is pressed, a crosshair cursor will appear, indicating that the rectangular selection mode is active.')\n                }\n            }),\n            Object.freeze({\n                name: 'readOnly',\n                default: false,\n                factory: () => createConfigurableExtension((value) => [\n                    EditorState.readOnly.of(value),\n                    value\n                        ? EditorView.editorAttributes.of({ class: READ_ONLY_CLASS })\n                        : []\n                ])\n            }),\n            Object.freeze({\n                name: 'rulers',\n                default: [],\n                factory: () => createConfigurableExtension((value) => value.length > 0 ? rulers(value) : []),\n                schema: {\n                    type: 'array',\n                    title: trans.__('Rulers'),\n                    items: {\n                        type: 'number',\n                        minimum: 0\n                    }\n                }\n            }),\n            Object.freeze({\n                name: 'scrollPastEnd',\n                default: false,\n                factory: (options) => options.inline ? null : createConditionalExtension(scrollPastEnd())\n            }),\n            Object.freeze({\n                name: 'smartIndent',\n                default: true,\n                factory: () => createConditionalExtension(indentOnInput()),\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Smart Indentation')\n                }\n            }),\n            Object.freeze({\n                name: 'tabSize',\n                default: 4,\n                factory: () => createConfigurableExtension((value) => EditorState.tabSize.of(value)),\n                schema: {\n                    type: 'number',\n                    title: trans.__('Tab size')\n                }\n            }),\n            Object.freeze({\n                name: 'allowMultipleSelections',\n                default: true,\n                factory: () => createConfigurableExtension((value) => EditorState.allowMultipleSelections.of(value)),\n                schema: {\n                    type: 'boolean',\n                    title: trans.__('Multiple selections')\n                }\n            }),\n            Object.freeze({\n                name: 'customStyles',\n                factory: () => createConfigurableExtension(config => customTheme(config)),\n                default: {\n                    fontFamily: null,\n                    fontSize: null,\n                    lineHeight: null\n                },\n                schema: {\n                    title: trans.__('Custom editor styles'),\n                    type: 'object',\n                    properties: {\n                        fontFamily: {\n                            type: ['string', 'null'],\n                            title: trans.__('Font Family')\n                        },\n                        fontSize: {\n                            type: ['number', 'null'],\n                            minimum: 1,\n                            maximum: 100,\n                            title: trans.__('Font Size')\n                        },\n                        lineHeight: {\n                            type: ['number', 'null'],\n                            title: trans.__('Line Height')\n                        }\n                    },\n                    additionalProperties: false\n                }\n            })\n        ];\n        if (themes) {\n            extensions.push(Object.freeze({\n                name: 'theme',\n                default: 'jupyter',\n                factory: () => createConfigurableExtension(value => themes.getTheme(value)),\n                schema: {\n                    type: 'string',\n                    title: trans.__('Theme'),\n                    description: trans.__('CodeMirror theme')\n                }\n            }));\n        }\n        if (translator) {\n            extensions.push(Object.freeze({\n                name: 'translation',\n                // The list of internal strings is available at https://codemirror.net/examples/translate/\n                default: {\n                    // @codemirror/view\n                    'Control character': trans.__('Control character'),\n                    // @codemirror/commands\n                    'Selection deleted': trans.__('Selection deleted'),\n                    // @codemirror/language\n                    'Folded lines': trans.__('Folded lines'),\n                    'Unfolded lines': trans.__('Unfolded lines'),\n                    to: trans.__('to'),\n                    'folded code': trans.__('folded code'),\n                    unfold: trans.__('unfold'),\n                    'Fold line': trans.__('Fold line'),\n                    'Unfold line': trans.__('Unfold line'),\n                    // @codemirror/search\n                    'Go to line': trans.__('Go to line'),\n                    go: trans.__('go'),\n                    Find: trans.__('Find'),\n                    Replace: trans.__('Replace'),\n                    next: trans.__('next'),\n                    previous: trans.__('previous'),\n                    all: trans.__('all'),\n                    'match case': trans.__('match case'),\n                    replace: trans.__('replace'),\n                    'replace all': trans.__('replace all'),\n                    close: trans.__('close'),\n                    'current match': trans.__('current match'),\n                    'replaced $ matches': trans.__('replaced $ matches'),\n                    'replaced match on line $': trans.__('replaced match on line $'),\n                    'on line': trans.__('on line'),\n                    // @codemirror/autocomplete\n                    Completions: trans.__('Completions'),\n                    // @codemirror/lint\n                    Diagnostics: trans.__('Diagnostics'),\n                    'No diagnostics': trans.__('No diagnostics')\n                },\n                factory: () => createConfigurableExtension(value => EditorState.phrases.of(value))\n            }));\n        }\n        return extensions;\n    }\n    EditorExtensionRegistry.getDefaultExtensions = getDefaultExtensions;\n})(EditorExtensionRegistry || (EditorExtensionRegistry = {}));\n//# sourceMappingURL=extension.js.map","import { NodeProp } from '@lezer/common';\nimport { LRParser, LocalTokenGroup } from '@lezer/lr';\n\nclass Node {\n    constructor(start) {\n        this.start = start;\n    }\n}\nclass GrammarDeclaration extends Node {\n    constructor(start, rules, topRules, tokens, localTokens, context, externalTokens, externalSpecializers, externalPropSources, precedences, mainSkip, scopedSkip, dialects, externalProps, autoDelim) {\n        super(start);\n        this.rules = rules;\n        this.topRules = topRules;\n        this.tokens = tokens;\n        this.localTokens = localTokens;\n        this.context = context;\n        this.externalTokens = externalTokens;\n        this.externalSpecializers = externalSpecializers;\n        this.externalPropSources = externalPropSources;\n        this.precedences = precedences;\n        this.mainSkip = mainSkip;\n        this.scopedSkip = scopedSkip;\n        this.dialects = dialects;\n        this.externalProps = externalProps;\n        this.autoDelim = autoDelim;\n    }\n    toString() { return Object.values(this.rules).join(\"\\n\"); }\n}\nclass RuleDeclaration extends Node {\n    constructor(start, id, props, params, expr) {\n        super(start);\n        this.id = id;\n        this.props = props;\n        this.params = params;\n        this.expr = expr;\n    }\n    toString() {\n        return this.id.name + (this.params.length ? `<${this.params.join()}>` : \"\") + \" -> \" + this.expr;\n    }\n}\nclass PrecDeclaration extends Node {\n    constructor(start, items) {\n        super(start);\n        this.items = items;\n    }\n}\nclass TokenPrecDeclaration extends Node {\n    constructor(start, items) {\n        super(start);\n        this.items = items;\n    }\n}\nclass TokenConflictDeclaration extends Node {\n    constructor(start, a, b) {\n        super(start);\n        this.a = a;\n        this.b = b;\n    }\n}\nclass TokenDeclaration extends Node {\n    constructor(start, precedences, conflicts, rules, literals) {\n        super(start);\n        this.precedences = precedences;\n        this.conflicts = conflicts;\n        this.rules = rules;\n        this.literals = literals;\n    }\n}\nclass LocalTokenDeclaration extends Node {\n    constructor(start, precedences, rules, fallback) {\n        super(start);\n        this.precedences = precedences;\n        this.rules = rules;\n        this.fallback = fallback;\n    }\n}\nclass LiteralDeclaration extends Node {\n    constructor(start, literal, props) {\n        super(start);\n        this.literal = literal;\n        this.props = props;\n    }\n}\nclass ContextDeclaration extends Node {\n    constructor(start, id, source) {\n        super(start);\n        this.id = id;\n        this.source = source;\n    }\n}\nclass ExternalTokenDeclaration extends Node {\n    constructor(start, id, source, tokens) {\n        super(start);\n        this.id = id;\n        this.source = source;\n        this.tokens = tokens;\n    }\n}\nclass ExternalSpecializeDeclaration extends Node {\n    constructor(start, type, token, id, source, tokens) {\n        super(start);\n        this.type = type;\n        this.token = token;\n        this.id = id;\n        this.source = source;\n        this.tokens = tokens;\n    }\n}\nclass ExternalPropSourceDeclaration extends Node {\n    constructor(start, id, source) {\n        super(start);\n        this.id = id;\n        this.source = source;\n    }\n}\nclass ExternalPropDeclaration extends Node {\n    constructor(start, id, externalID, source) {\n        super(start);\n        this.id = id;\n        this.externalID = externalID;\n        this.source = source;\n    }\n}\nclass Identifier extends Node {\n    constructor(start, name) {\n        super(start);\n        this.name = name;\n    }\n    toString() { return this.name; }\n}\nclass Expression extends Node {\n    walk(f) { return f(this); }\n    eq(_other) { return false; }\n}\nExpression.prototype.prec = 10;\nclass NameExpression extends Expression {\n    constructor(start, id, args) {\n        super(start);\n        this.id = id;\n        this.args = args;\n    }\n    toString() { return this.id.name + (this.args.length ? `<${this.args.join()}>` : \"\"); }\n    eq(other) {\n        return this.id.name == other.id.name && exprsEq(this.args, other.args);\n    }\n    walk(f) {\n        let args = walkExprs(this.args, f);\n        return f(args == this.args ? this : new NameExpression(this.start, this.id, args));\n    }\n}\nclass SpecializeExpression extends Expression {\n    constructor(start, type, props, token, content) {\n        super(start);\n        this.type = type;\n        this.props = props;\n        this.token = token;\n        this.content = content;\n    }\n    toString() { return `@${this.type}[${this.props.join(\",\")}]<${this.token}, ${this.content}>`; }\n    eq(other) {\n        return this.type == other.type && Prop.eqProps(this.props, other.props) && exprEq(this.token, other.token) &&\n            exprEq(this.content, other.content);\n    }\n    walk(f) {\n        let token = this.token.walk(f), content = this.content.walk(f);\n        return f(token == this.token && content == this.content ? this : new SpecializeExpression(this.start, this.type, this.props, token, content));\n    }\n}\nclass InlineRuleExpression extends Expression {\n    constructor(start, rule) {\n        super(start);\n        this.rule = rule;\n    }\n    toString() {\n        let rule = this.rule;\n        return `${rule.id}${rule.props.length ? `[${rule.props.join(\",\")}]` : \"\"} { ${rule.expr} }`;\n    }\n    eq(other) {\n        let rule = this.rule, oRule = other.rule;\n        return exprEq(rule.expr, oRule.expr) && rule.id.name == oRule.id.name && Prop.eqProps(rule.props, oRule.props);\n    }\n    walk(f) {\n        let rule = this.rule, expr = rule.expr.walk(f);\n        return f(expr == rule.expr ? this :\n            new InlineRuleExpression(this.start, new RuleDeclaration(rule.start, rule.id, rule.props, [], expr)));\n    }\n}\nclass ChoiceExpression extends Expression {\n    constructor(start, exprs) {\n        super(start);\n        this.exprs = exprs;\n    }\n    toString() { return this.exprs.map(e => maybeParens(e, this)).join(\" | \"); }\n    eq(other) {\n        return exprsEq(this.exprs, other.exprs);\n    }\n    walk(f) {\n        let exprs = walkExprs(this.exprs, f);\n        return f(exprs == this.exprs ? this : new ChoiceExpression(this.start, exprs));\n    }\n}\nChoiceExpression.prototype.prec = 1;\nclass SequenceExpression extends Expression {\n    constructor(start, exprs, markers, empty = false) {\n        super(start);\n        this.exprs = exprs;\n        this.markers = markers;\n        this.empty = empty;\n    }\n    toString() { return this.empty ? \"()\" : this.exprs.map(e => maybeParens(e, this)).join(\" \"); }\n    eq(other) {\n        return exprsEq(this.exprs, other.exprs) && this.markers.every((m, i) => {\n            let om = other.markers[i];\n            return m.length == om.length && m.every((x, i) => x.eq(om[i]));\n        });\n    }\n    walk(f) {\n        let exprs = walkExprs(this.exprs, f);\n        return f(exprs == this.exprs ? this : new SequenceExpression(this.start, exprs, this.markers, this.empty && !exprs.length));\n    }\n}\nSequenceExpression.prototype.prec = 2;\nclass ConflictMarker extends Node {\n    constructor(start, id, type) {\n        super(start);\n        this.id = id;\n        this.type = type;\n    }\n    toString() { return (this.type == \"ambig\" ? \"~\" : \"!\") + this.id.name; }\n    eq(other) { return this.id.name == other.id.name && this.type == other.type; }\n}\nclass RepeatExpression extends Expression {\n    constructor(start, expr, kind) {\n        super(start);\n        this.expr = expr;\n        this.kind = kind;\n    }\n    toString() { return maybeParens(this.expr, this) + this.kind; }\n    eq(other) {\n        return exprEq(this.expr, other.expr) && this.kind == other.kind;\n    }\n    walk(f) {\n        let expr = this.expr.walk(f);\n        return f(expr == this.expr ? this : new RepeatExpression(this.start, expr, this.kind));\n    }\n}\nRepeatExpression.prototype.prec = 3;\nclass LiteralExpression extends Expression {\n    // value.length is always > 0\n    constructor(start, value) {\n        super(start);\n        this.value = value;\n    }\n    toString() { return JSON.stringify(this.value); }\n    eq(other) { return this.value == other.value; }\n}\nclass SetExpression extends Expression {\n    constructor(start, ranges, inverted) {\n        super(start);\n        this.ranges = ranges;\n        this.inverted = inverted;\n    }\n    toString() {\n        return `[${this.inverted ? \"^\" : \"\"}${this.ranges.map(([a, b]) => {\n            return String.fromCodePoint(a) + (b == a + 1 ? \"\" : \"-\" + String.fromCodePoint(b));\n        })}]`;\n    }\n    eq(other) {\n        return this.inverted == other.inverted && this.ranges.length == other.ranges.length &&\n            this.ranges.every(([a, b], i) => { let [x, y] = other.ranges[i]; return a == x && b == y; });\n    }\n}\nclass AnyExpression extends Expression {\n    constructor(start) {\n        super(start);\n    }\n    toString() { return \"_\"; }\n    eq() { return true; }\n}\nfunction walkExprs(exprs, f) {\n    let result = null;\n    for (let i = 0; i < exprs.length; i++) {\n        let expr = exprs[i].walk(f);\n        if (expr != exprs[i] && !result)\n            result = exprs.slice(0, i);\n        if (result)\n            result.push(expr);\n    }\n    return result || exprs;\n}\nconst CharClasses = {\n    asciiLetter: [[65, 91], [97, 123]],\n    asciiLowercase: [[97, 123]],\n    asciiUppercase: [[65, 91]],\n    digit: [[48, 58]],\n    whitespace: [[9, 14], [32, 33], [133, 134], [160, 161], [5760, 5761], [8192, 8203],\n        [8232, 8234], [8239, 8240], [8287, 8288], [12288, 12289]],\n    eof: [[0xffff, 0xffff]]\n};\nclass CharClass extends Expression {\n    constructor(start, type) {\n        super(start);\n        this.type = type;\n    }\n    toString() { return \"@\" + this.type; }\n    eq(expr) { return this.type == expr.type; }\n}\nfunction exprEq(a, b) {\n    return a.constructor == b.constructor && a.eq(b);\n}\nfunction exprsEq(a, b) {\n    return a.length == b.length && a.every((e, i) => exprEq(e, b[i]));\n}\nclass Prop extends Node {\n    constructor(start, at, name, value) {\n        super(start);\n        this.at = at;\n        this.name = name;\n        this.value = value;\n    }\n    eq(other) {\n        return this.name == other.name && this.value.length == other.value.length &&\n            this.value.every((v, i) => v.value == other.value[i].value && v.name == other.value[i].name);\n    }\n    toString() {\n        let result = (this.at ? \"@\" : \"\") + this.name;\n        if (this.value.length) {\n            result += \"=\";\n            for (let { name, value } of this.value)\n                result += name ? `{${name}}` : /[^\\w-]/.test(value) ? JSON.stringify(value) : value;\n        }\n        return result;\n    }\n    static eqProps(a, b) {\n        return a.length == b.length && a.every((p, i) => p.eq(b[i]));\n    }\n}\nclass PropPart extends Node {\n    constructor(start, value, name) {\n        super(start);\n        this.value = value;\n        this.name = name;\n    }\n}\nfunction maybeParens(node, parent) {\n    return node.prec < parent.prec ? \"(\" + node.toString() + \")\" : node.toString();\n}\n\n/// The type of error raised when the parser generator finds an issue.\nclass GenError extends Error {\n}\n\nfunction hasProps(props) {\n    for (let _p in props)\n        return true;\n    return false;\n}\nlet termHash = 0;\nclass Term {\n    constructor(name, flags, nodeName, props = {}) {\n        this.name = name;\n        this.flags = flags;\n        this.nodeName = nodeName;\n        this.props = props;\n        this.hash = ++termHash; // Used for sorting and hashing during parser generation\n        this.id = -1; // Assigned in a later stage, used in actual output\n        // Filled in only after the rules are simplified, used in automaton.ts\n        this.rules = [];\n    }\n    toString() { return this.name; }\n    get nodeType() { return this.top || this.nodeName != null || hasProps(this.props) || this.repeated; }\n    get terminal() { return (this.flags & 1 /* TermFlag.Terminal */) > 0; }\n    get eof() { return (this.flags & 4 /* TermFlag.Eof */) > 0; }\n    get error() { return \"error\" in this.props; }\n    get top() { return (this.flags & 2 /* TermFlag.Top */) > 0; }\n    get interesting() { return this.flags > 0 || this.nodeName != null; }\n    get repeated() { return (this.flags & 16 /* TermFlag.Repeated */) > 0; }\n    set preserve(value) { this.flags = value ? this.flags | 8 /* TermFlag.Preserve */ : this.flags & ~8 /* TermFlag.Preserve */; }\n    get preserve() { return (this.flags & 8 /* TermFlag.Preserve */) > 0; }\n    set inline(value) { this.flags = value ? this.flags | 32 /* TermFlag.Inline */ : this.flags & ~32 /* TermFlag.Inline */; }\n    get inline() { return (this.flags & 32 /* TermFlag.Inline */) > 0; }\n    cmp(other) { return this.hash - other.hash; }\n}\nclass TermSet {\n    constructor() {\n        this.terms = [];\n        // Map from term names to Term instances\n        this.names = Object.create(null);\n        this.tops = [];\n        this.eof = this.term(\"␄\", null, 1 /* TermFlag.Terminal */ | 4 /* TermFlag.Eof */);\n        this.error = this.term(\"⚠\", \"⚠\", 8 /* TermFlag.Preserve */);\n    }\n    term(name, nodeName, flags = 0, props = {}) {\n        let term = new Term(name, flags, nodeName, props);\n        this.terms.push(term);\n        this.names[name] = term;\n        return term;\n    }\n    makeTop(nodeName, props) {\n        const term = this.term(\"@top\", nodeName, 2 /* TermFlag.Top */, props);\n        this.tops.push(term);\n        return term;\n    }\n    makeTerminal(name, nodeName, props = {}) {\n        return this.term(name, nodeName, 1 /* TermFlag.Terminal */, props);\n    }\n    makeNonTerminal(name, nodeName, props = {}) {\n        return this.term(name, nodeName, 0, props);\n    }\n    makeRepeat(name) {\n        return this.term(name, null, 16 /* TermFlag.Repeated */);\n    }\n    uniqueName(name) {\n        for (let i = 0;; i++) {\n            let cur = i ? `${name}-${i}` : name;\n            if (!this.names[cur])\n                return cur;\n        }\n    }\n    finish(rules) {\n        for (let rule of rules)\n            rule.name.rules.push(rule);\n        this.terms = this.terms.filter(t => t.terminal || t.preserve || rules.some(r => r.name == t || r.parts.includes(t)));\n        let names = {};\n        let nodeTypes = [this.error];\n        this.error.id = 0 /* T.Err */;\n        let nextID = 0 /* T.Err */ + 1;\n        // Assign ids to terms that represent node types\n        for (let term of this.terms)\n            if (term.id < 0 && term.nodeType && !term.repeated) {\n                term.id = nextID++;\n                nodeTypes.push(term);\n            }\n        // Put all repeated terms after the regular node types\n        let minRepeatTerm = nextID;\n        for (let term of this.terms)\n            if (term.repeated) {\n                term.id = nextID++;\n                nodeTypes.push(term);\n            }\n        // Then comes the EOF term\n        this.eof.id = nextID++;\n        // And then the remaining (non-node, non-repeat) terms.\n        for (let term of this.terms) {\n            if (term.id < 0)\n                term.id = nextID++;\n            if (term.name)\n                names[term.id] = term.name;\n        }\n        if (nextID >= 0xfffe)\n            throw new GenError(\"Too many terms\");\n        return { nodeTypes, names, minRepeatTerm, maxTerm: nextID - 1 };\n    }\n}\nfunction cmpSet(a, b, cmp) {\n    if (a.length != b.length)\n        return a.length - b.length;\n    for (let i = 0; i < a.length; i++) {\n        let diff = cmp(a[i], b[i]);\n        if (diff)\n            return diff;\n    }\n    return 0;\n}\nconst none$3 = [];\nclass Conflicts {\n    constructor(precedence, ambigGroups = none$3, cut = 0) {\n        this.precedence = precedence;\n        this.ambigGroups = ambigGroups;\n        this.cut = cut;\n    }\n    join(other) {\n        if (this == Conflicts.none || this == other)\n            return other;\n        if (other == Conflicts.none)\n            return this;\n        return new Conflicts(Math.max(this.precedence, other.precedence), union(this.ambigGroups, other.ambigGroups), Math.max(this.cut, other.cut));\n    }\n    cmp(other) {\n        return this.precedence - other.precedence || cmpSet(this.ambigGroups, other.ambigGroups, (a, b) => a < b ? -1 : a > b ? 1 : 0) ||\n            this.cut - other.cut;\n    }\n}\nConflicts.none = new Conflicts(0);\nfunction union(a, b) {\n    if (a.length == 0 || a == b)\n        return b;\n    if (b.length == 0)\n        return a;\n    let result = a.slice();\n    for (let value of b)\n        if (!a.includes(value))\n            result.push(value);\n    return result.sort();\n}\nlet ruleID = 0;\nclass Rule {\n    constructor(name, parts, conflicts, skip) {\n        this.name = name;\n        this.parts = parts;\n        this.conflicts = conflicts;\n        this.skip = skip;\n        this.id = ruleID++;\n    }\n    cmp(rule) {\n        return this.id - rule.id;\n    }\n    cmpNoName(rule) {\n        return this.parts.length - rule.parts.length ||\n            this.skip.hash - rule.skip.hash ||\n            this.parts.reduce((r, s, i) => r || s.cmp(rule.parts[i]), 0) ||\n            cmpSet(this.conflicts, rule.conflicts, (a, b) => a.cmp(b));\n    }\n    toString() {\n        return this.name + \" -> \" + this.parts.join(\" \");\n    }\n    get isRepeatWrap() {\n        return this.name.repeated && this.parts.length == 2 && this.parts[0] == this.name;\n    }\n    sameReduce(other) {\n        return this.name == other.name && this.parts.length == other.parts.length && this.isRepeatWrap == other.isRepeatWrap;\n    }\n}\n\nconst MAX_CHAR = 0xffff;\nclass Edge {\n    constructor(from, to, target) {\n        this.from = from;\n        this.to = to;\n        this.target = target;\n    }\n    toString() {\n        return `-> ${this.target.id}[label=${JSON.stringify(this.from < 0 ? \"ε\" : charFor(this.from) +\n            (this.to > this.from + 1 ? \"-\" + charFor(this.to - 1) : \"\"))}]`;\n    }\n}\nfunction charFor(n) {\n    return n > MAX_CHAR ? \"∞\"\n        : n == 10 ? \"\\\\n\"\n            : n == 13 ? \"\\\\r\"\n                : n < 32 || n >= 0xd800 && n < 0xdfff ? \"\\\\u{\" + n.toString(16) + \"}\"\n                    : String.fromCharCode(n);\n}\nfunction minimize(states, start) {\n    let partition = Object.create(null);\n    let byAccepting = Object.create(null);\n    for (let state of states) {\n        let id = ids(state.accepting);\n        let group = byAccepting[id] || (byAccepting[id] = []);\n        group.push(state);\n        partition[state.id] = group;\n    }\n    for (;;) {\n        let split = false, newPartition = Object.create(null);\n        for (let state of states) {\n            if (newPartition[state.id])\n                continue;\n            let group = partition[state.id];\n            if (group.length == 1) {\n                newPartition[group[0].id] = group;\n                continue;\n            }\n            let parts = [];\n            groups: for (let state of group) {\n                for (let p of parts) {\n                    if (isEquivalent(state, p[0], partition)) {\n                        p.push(state);\n                        continue groups;\n                    }\n                }\n                parts.push([state]);\n            }\n            if (parts.length > 1)\n                split = true;\n            for (let p of parts)\n                for (let s of p)\n                    newPartition[s.id] = p;\n        }\n        if (!split)\n            return applyMinimization(states, start, partition);\n        partition = newPartition;\n    }\n}\nfunction isEquivalent(a, b, partition) {\n    if (a.edges.length != b.edges.length)\n        return false;\n    for (let i = 0; i < a.edges.length; i++) {\n        let eA = a.edges[i], eB = b.edges[i];\n        if (eA.from != eB.from || eA.to != eB.to || partition[eA.target.id] != partition[eB.target.id])\n            return false;\n    }\n    return true;\n}\nfunction applyMinimization(states, start, partition) {\n    for (let state of states) {\n        for (let i = 0; i < state.edges.length; i++) {\n            let edge = state.edges[i], target = partition[edge.target.id][0];\n            if (target != edge.target)\n                state.edges[i] = new Edge(edge.from, edge.to, target);\n        }\n    }\n    return partition[start.id][0];\n}\nlet stateID = 1;\nclass State$1 {\n    constructor(accepting = [], id = stateID++) {\n        this.accepting = accepting;\n        this.id = id;\n        this.edges = [];\n    }\n    edge(from, to, target) {\n        this.edges.push(new Edge(from, to, target));\n    }\n    nullEdge(target) { this.edge(-1, -1, target); }\n    compile() {\n        let labeled = Object.create(null), localID = 0;\n        let startState = explore(this.closure().sort((a, b) => a.id - b.id));\n        return minimize(Object.values(labeled), startState);\n        function explore(states) {\n            let newState = labeled[ids(states)] =\n                new State$1(states.reduce((a, s) => union(a, s.accepting), []), localID++);\n            let out = [];\n            for (let state of states)\n                for (let edge of state.edges) {\n                    if (edge.from >= 0)\n                        out.push(edge);\n                }\n            let transitions = mergeEdges(out);\n            for (let merged of transitions) {\n                let targets = merged.targets.sort((a, b) => a.id - b.id);\n                newState.edge(merged.from, merged.to, labeled[ids(targets)] || explore(targets));\n            }\n            return newState;\n        }\n    }\n    closure() {\n        let result = [], seen = Object.create(null);\n        function explore(state) {\n            if (seen[state.id])\n                return;\n            seen[state.id] = true;\n            // States with only epsilon edges and no accepting term that\n            // isn't also in the next states are left out to help reduce the\n            // number of unique state combinations\n            if (state.edges.some(e => e.from >= 0) ||\n                (state.accepting.length > 0 && !state.edges.some(e => sameSet$1(state.accepting, e.target.accepting))))\n                result.push(state);\n            for (let edge of state.edges)\n                if (edge.from < 0)\n                    explore(edge.target);\n        }\n        explore(this);\n        return result;\n    }\n    findConflicts(occurTogether) {\n        let conflicts = [], cycleTerms = this.cycleTerms();\n        function add(a, b, soft, aEdges, bEdges) {\n            if (a.id < b.id) {\n                [a, b] = [b, a];\n                soft = -soft;\n            }\n            let found = conflicts.find(c => c.a == a && c.b == b);\n            if (!found)\n                conflicts.push(new Conflict$1(a, b, soft, exampleFromEdges(aEdges), bEdges && exampleFromEdges(bEdges)));\n            else if (found.soft != soft)\n                found.soft = 0;\n        }\n        this.reachable((state, edges) => {\n            if (state.accepting.length == 0)\n                return;\n            for (let i = 0; i < state.accepting.length; i++)\n                for (let j = i + 1; j < state.accepting.length; j++)\n                    add(state.accepting[i], state.accepting[j], 0, edges);\n            state.reachable((s, es) => {\n                if (s != state)\n                    for (let term of s.accepting) {\n                        let hasCycle = cycleTerms.includes(term);\n                        for (let orig of state.accepting)\n                            if (term != orig)\n                                add(term, orig, hasCycle || cycleTerms.includes(orig) || !occurTogether(term, orig) ? 0 : 1, edges, edges.concat(es));\n                    }\n            });\n        });\n        return conflicts;\n    }\n    cycleTerms() {\n        let work = [];\n        this.reachable(state => {\n            for (let { target } of state.edges)\n                work.push(state, target);\n        });\n        let table = new Map;\n        let haveCycle = [];\n        for (let i = 0; i < work.length;) {\n            let from = work[i++], to = work[i++];\n            let entry = table.get(from);\n            if (!entry)\n                table.set(from, entry = []);\n            if (entry.includes(to))\n                continue;\n            if (from == to) {\n                if (!haveCycle.includes(from))\n                    haveCycle.push(from);\n            }\n            else {\n                for (let next of entry)\n                    work.push(from, next);\n                entry.push(to);\n            }\n        }\n        let result = [];\n        for (let state of haveCycle) {\n            for (let term of state.accepting) {\n                if (!result.includes(term))\n                    result.push(term);\n            }\n        }\n        return result;\n    }\n    reachable(f) {\n        let seen = [], edges = [];\n        (function explore(s) {\n            f(s, edges);\n            seen.push(s);\n            for (let edge of s.edges)\n                if (!seen.includes(edge.target)) {\n                    edges.push(edge);\n                    explore(edge.target);\n                    edges.pop();\n                }\n        })(this);\n    }\n    toString() {\n        let out = \"digraph {\\n\";\n        this.reachable(state => {\n            if (state.accepting.length)\n                out += `  ${state.id} [label=${JSON.stringify(state.accepting.join())}];\\n`;\n            for (let edge of state.edges)\n                out += `  ${state.id} ${edge};\\n`;\n        });\n        return out + \"}\";\n    }\n    // Tokenizer data is represented as a single flat array. This\n    // contains regions for each tokenizer state. Region offsets are\n    // used to identify states.\n    //\n    // Each state is laid out as:\n    //  - Token group mask\n    //  - Offset of the end of the accepting data\n    //  - Number of outgoing edges in the state\n    //  - Pairs of token masks and term ids that indicate the accepting\n    //    states, sorted by precedence\n    //  - Triples for the edges: each with a low and high bound and the\n    //    offset of the next state.\n    toArray(groupMasks, precedence) {\n        let offsets = []; // Used to 'link' the states after building the arrays\n        let data = [];\n        this.reachable(state => {\n            let start = data.length;\n            let acceptEnd = start + 3 + state.accepting.length * 2;\n            offsets[state.id] = start;\n            data.push(state.stateMask(groupMasks), acceptEnd, state.edges.length);\n            state.accepting.sort((a, b) => precedence.indexOf(a.id) - precedence.indexOf(b.id));\n            for (let term of state.accepting)\n                data.push(term.id, groupMasks[term.id] || 0xffff);\n            for (let edge of state.edges)\n                data.push(edge.from, edge.to, -edge.target.id - 1);\n        });\n        // Replace negative numbers with resolved state offsets\n        for (let i = 0; i < data.length; i++)\n            if (data[i] < 0)\n                data[i] = offsets[-data[i] - 1];\n        if (data.length > 2 ** 16)\n            throw new GenError(\"Tokenizer tables too big to represent with 16-bit offsets.\");\n        return Uint16Array.from(data);\n    }\n    stateMask(groupMasks) {\n        let mask = 0;\n        this.reachable(state => {\n            for (let term of state.accepting)\n                mask |= (groupMasks[term.id] || 0xffff);\n        });\n        return mask;\n    }\n}\nclass Conflict$1 {\n    constructor(a, b, \n    // Conflicts between two non-cyclic tokens are marked as\n    // 'soft', with a negative number if a is shorter than\n    // b, and a positive if b is shorter than a.\n    soft, exampleA, exampleB) {\n        this.a = a;\n        this.b = b;\n        this.soft = soft;\n        this.exampleA = exampleA;\n        this.exampleB = exampleB;\n    }\n}\nfunction exampleFromEdges(edges) {\n    let str = \"\";\n    for (let i = 0; i < edges.length; i++)\n        str += String.fromCharCode(edges[i].from);\n    return str;\n}\nfunction ids(elts) {\n    let result = \"\";\n    for (let elt of elts) {\n        if (result.length)\n            result += \"-\";\n        result += elt.id;\n    }\n    return result;\n}\nfunction sameSet$1(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (a[i] != b[i])\n            return false;\n    return true;\n}\nclass MergedEdge {\n    constructor(from, to, targets) {\n        this.from = from;\n        this.to = to;\n        this.targets = targets;\n    }\n}\n// Merge multiple edges (tagged by character ranges) into a set of\n// mutually exclusive ranges pointing at all target states for that\n// range\nfunction mergeEdges(edges) {\n    let separate = [], result = [];\n    for (let edge of edges) {\n        if (!separate.includes(edge.from))\n            separate.push(edge.from);\n        if (!separate.includes(edge.to))\n            separate.push(edge.to);\n    }\n    separate.sort((a, b) => a - b);\n    for (let i = 1; i < separate.length; i++) {\n        let from = separate[i - 1], to = separate[i];\n        let found = [];\n        for (let edge of edges)\n            if (edge.to > from && edge.from < to) {\n                for (let target of edge.target.closure())\n                    if (!found.includes(target))\n                        found.push(target);\n            }\n        if (found.length)\n            result.push(new MergedEdge(from, to, found));\n    }\n    let eof = edges.filter(e => e.from == 65535 /* Seq.End */ && e.to == 65535 /* Seq.End */);\n    if (eof.length) {\n        let found = [];\n        for (let edge of eof)\n            for (let target of edge.target.closure())\n                if (!found.includes(target))\n                    found.push(target);\n        if (found.length)\n            result.push(new MergedEdge(65535 /* Seq.End */, 65535 /* Seq.End */, found));\n    }\n    return result;\n}\n\n// Note that this is the parser for grammar files, not the generated parser\nlet word = /[\\w_-]+/gy;\n// Some engines (specifically SpiderMonkey) have still not implemented \\p\ntry {\n    word = /[\\p{Alphabetic}\\d_-]+/ugy;\n}\ncatch (_) { }\nconst none$2 = [];\nclass Input {\n    constructor(string, fileName = null) {\n        this.string = string;\n        this.fileName = fileName;\n        this.type = \"sof\";\n        this.value = null;\n        this.start = 0;\n        this.end = 0;\n        this.next();\n    }\n    lineInfo(pos) {\n        for (let line = 1, cur = 0;;) {\n            let next = this.string.indexOf(\"\\n\", cur);\n            if (next > -1 && next < pos) {\n                ++line;\n                cur = next + 1;\n            }\n            else {\n                return { line, ch: pos - cur };\n            }\n        }\n    }\n    message(msg, pos = -1) {\n        let posInfo = this.fileName || \"\";\n        if (pos > -1) {\n            let info = this.lineInfo(pos);\n            posInfo += (posInfo ? \" \" : \"\") + info.line + \":\" + info.ch;\n        }\n        return posInfo ? msg + ` (${posInfo})` : msg;\n    }\n    raise(msg, pos = -1) {\n        throw new GenError(this.message(msg, pos));\n    }\n    match(pos, re) {\n        let match = re.exec(this.string.slice(pos));\n        return match ? pos + match[0].length : -1;\n    }\n    next() {\n        let start = this.match(this.end, /^(\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/);\n        if (start == this.string.length)\n            return this.set(\"eof\", null, start, start);\n        let next = this.string[start];\n        if (next == '\"') {\n            let end = this.match(start + 1, /^(\\\\.|[^\"\\\\])*\"/);\n            if (end == -1)\n                this.raise(\"Unterminated string literal\", start);\n            return this.set(\"string\", readString(this.string.slice(start + 1, end - 1)), start, end);\n        }\n        else if (next == \"'\") {\n            let end = this.match(start + 1, /^(\\\\.|[^'\\\\])*'/);\n            if (end == -1)\n                this.raise(\"Unterminated string literal\", start);\n            return this.set(\"string\", readString(this.string.slice(start + 1, end - 1)), start, end);\n        }\n        else if (next == \"@\") {\n            word.lastIndex = start + 1;\n            let m = word.exec(this.string);\n            if (!m)\n                return this.raise(\"@ without a name\", start);\n            return this.set(\"at\", m[0], start, start + 1 + m[0].length);\n        }\n        else if ((next == \"$\" || next == \"!\") && this.string[start + 1] == \"[\") {\n            let end = this.match(start + 2, /^(?:\\\\.|[^\\]\\\\])*\\]/);\n            if (end == -1)\n                this.raise(\"Unterminated character set\", start);\n            return this.set(\"set\", this.string.slice(start + 2, end - 1), start, end);\n        }\n        else if (/[\\[\\]()!~+*?{}<>\\.,|:$=]/.test(next)) {\n            return this.set(next, null, start, start + 1);\n        }\n        else {\n            word.lastIndex = start;\n            let m = word.exec(this.string);\n            if (!m)\n                return this.raise(\"Unexpected character \" + JSON.stringify(next), start);\n            return this.set(\"id\", m[0], start, start + m[0].length);\n        }\n    }\n    set(type, value, start, end) {\n        this.type = type;\n        this.value = value;\n        this.start = start;\n        this.end = end;\n    }\n    eat(type, value = null) {\n        if (this.type == type && (value == null || this.value === value)) {\n            this.next();\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    unexpected() {\n        return this.raise(`Unexpected token '${this.string.slice(this.start, this.end)}'`, this.start);\n    }\n    expect(type, value = null) {\n        let val = this.value;\n        if (this.type != type || !(value == null || val === value))\n            this.unexpected();\n        this.next();\n        return val;\n    }\n    parse() {\n        return parseGrammar(this);\n    }\n}\nfunction parseGrammar(input) {\n    let start = input.start;\n    let rules = [];\n    let prec = null;\n    let tokens = null;\n    let localTokens = [];\n    let mainSkip = null;\n    let scopedSkip = [];\n    let dialects = [];\n    let context = null;\n    let external = [];\n    let specialized = [];\n    let props = [];\n    let propSources = [];\n    let tops = [];\n    let sawTop = false;\n    let autoDelim = false;\n    while (input.type != \"eof\") {\n        let start = input.start;\n        if (input.eat(\"at\", \"top\")) {\n            if (input.type != \"id\")\n                input.raise(`Top rules must have a name`, input.start);\n            tops.push(parseRule(input, parseIdent(input)));\n            sawTop = true;\n        }\n        else if (input.type == \"at\" && input.value == \"tokens\") {\n            if (tokens)\n                input.raise(`Multiple @tokens declaractions`, input.start);\n            else\n                tokens = parseTokens(input);\n        }\n        else if (input.eat(\"at\", \"local\")) {\n            input.expect(\"id\", \"tokens\");\n            localTokens.push(parseLocalTokens(input, start));\n        }\n        else if (input.eat(\"at\", \"context\")) {\n            if (context)\n                input.raise(`Multiple @context declarations`, start);\n            let id = parseIdent(input);\n            input.expect(\"id\", \"from\");\n            let source = input.expect(\"string\");\n            context = new ContextDeclaration(start, id, source);\n        }\n        else if (input.eat(\"at\", \"external\")) {\n            if (input.eat(\"id\", \"tokens\"))\n                external.push(parseExternalTokens(input, start));\n            else if (input.eat(\"id\", \"prop\"))\n                props.push(parseExternalProp(input, start));\n            else if (input.eat(\"id\", \"extend\"))\n                specialized.push(parseExternalSpecialize(input, \"extend\", start));\n            else if (input.eat(\"id\", \"specialize\"))\n                specialized.push(parseExternalSpecialize(input, \"specialize\", start));\n            else if (input.eat(\"id\", \"propSource\"))\n                propSources.push(parseExternalPropSource(input, start));\n            else\n                input.unexpected();\n        }\n        else if (input.eat(\"at\", \"dialects\")) {\n            input.expect(\"{\");\n            for (let first = true; !input.eat(\"}\"); first = false) {\n                if (!first)\n                    input.eat(\",\");\n                dialects.push(parseIdent(input));\n            }\n        }\n        else if (input.type == \"at\" && input.value == \"precedence\") {\n            if (prec)\n                input.raise(`Multiple precedence declarations`, input.start);\n            prec = parsePrecedence(input);\n        }\n        else if (input.eat(\"at\", \"detectDelim\")) {\n            autoDelim = true;\n        }\n        else if (input.eat(\"at\", \"skip\")) {\n            let skip = parseBracedExpr(input);\n            if (input.type == \"{\") {\n                input.next();\n                let rules = [], topRules = [];\n                while (!input.eat(\"}\")) {\n                    if (input.eat(\"at\", \"top\")) {\n                        topRules.push(parseRule(input, parseIdent(input)));\n                        sawTop = true;\n                    }\n                    else {\n                        rules.push(parseRule(input));\n                    }\n                }\n                scopedSkip.push({ expr: skip, topRules, rules });\n            }\n            else {\n                if (mainSkip)\n                    input.raise(`Multiple top-level skip declarations`, input.start);\n                mainSkip = skip;\n            }\n        }\n        else {\n            rules.push(parseRule(input));\n        }\n    }\n    if (!sawTop)\n        return input.raise(`Missing @top declaration`);\n    return new GrammarDeclaration(start, rules, tops, tokens, localTokens, context, external, specialized, propSources, prec, mainSkip, scopedSkip, dialects, props, autoDelim);\n}\nfunction parseRule(input, named) {\n    let start = named ? named.start : input.start;\n    let id = named || parseIdent(input);\n    let props = parseProps(input);\n    let params = [];\n    if (input.eat(\"<\"))\n        while (!input.eat(\">\")) {\n            if (params.length)\n                input.expect(\",\");\n            params.push(parseIdent(input));\n        }\n    let expr = parseBracedExpr(input);\n    return new RuleDeclaration(start, id, props, params, expr);\n}\nfunction parseProps(input) {\n    if (input.type != \"[\")\n        return none$2;\n    let props = [];\n    input.expect(\"[\");\n    while (!input.eat(\"]\")) {\n        if (props.length)\n            input.expect(\",\");\n        props.push(parseProp(input));\n    }\n    return props;\n}\nfunction parseProp(input) {\n    let start = input.start, value = [], name = input.value, at = input.type == \"at\";\n    if (!input.eat(\"at\") && !input.eat(\"id\"))\n        input.unexpected();\n    if (input.eat(\"=\"))\n        for (;;) {\n            if (input.type == \"string\" || input.type == \"id\") {\n                value.push(new PropPart(input.start, input.value, null));\n                input.next();\n            }\n            else if (input.eat(\".\")) {\n                value.push(new PropPart(input.start, \".\", null));\n            }\n            else if (input.eat(\"{\")) {\n                value.push(new PropPart(input.start, null, input.expect(\"id\")));\n                input.expect(\"}\");\n            }\n            else {\n                break;\n            }\n        }\n    return new Prop(start, at, name, value);\n}\nfunction parseBracedExpr(input) {\n    input.expect(\"{\");\n    let expr = parseExprChoice(input);\n    input.expect(\"}\");\n    return expr;\n}\nconst SET_MARKER = \"\\ufdda\"; // (Invalid unicode character)\nfunction parseExprInner(input) {\n    let start = input.start;\n    if (input.eat(\"(\")) {\n        if (input.eat(\")\"))\n            return new SequenceExpression(start, none$2, [none$2, none$2]);\n        let expr = parseExprChoice(input);\n        input.expect(\")\");\n        return expr;\n    }\n    else if (input.type == \"string\") {\n        let value = input.value;\n        input.next();\n        if (value.length == 0)\n            return new SequenceExpression(start, none$2, [none$2, none$2]);\n        return new LiteralExpression(start, value);\n    }\n    else if (input.eat(\"id\", \"_\")) {\n        return new AnyExpression(start);\n    }\n    else if (input.type == \"set\") {\n        let content = input.value, invert = input.string[input.start] == \"!\";\n        let unescaped = readString(content.replace(/\\\\.|-|\"/g, (m) => {\n            return m == \"-\" ? SET_MARKER : m == '\"' ? '\\\\\"' : m;\n        }));\n        let ranges = [];\n        for (let pos = 0; pos < unescaped.length;) {\n            let code = unescaped.codePointAt(pos);\n            pos += code > 0xffff ? 2 : 1;\n            if (pos < unescaped.length - 1 && unescaped[pos] == SET_MARKER) {\n                let end = unescaped.codePointAt(pos + 1);\n                pos += end > 0xffff ? 3 : 2;\n                if (end < code)\n                    input.raise(\"Invalid character range\", input.start);\n                addRange(input, ranges, code, end + 1);\n            }\n            else {\n                if (code == SET_MARKER.charCodeAt(0))\n                    code = 45;\n                addRange(input, ranges, code, code + 1);\n            }\n        }\n        input.next();\n        return new SetExpression(start, ranges.sort((a, b) => a[0] - b[0]), invert);\n    }\n    else if (input.type == \"at\" && (input.value == \"specialize\" || input.value == \"extend\")) {\n        let { start, value } = input;\n        input.next();\n        let props = parseProps(input);\n        input.expect(\"<\");\n        let token = parseExprChoice(input), content;\n        if (input.eat(\",\")) {\n            content = parseExprChoice(input);\n        }\n        else if (token instanceof LiteralExpression) {\n            content = token;\n        }\n        else {\n            input.raise(`@${value} requires two arguments when its first argument isn't a literal string`);\n        }\n        input.expect(\">\");\n        return new SpecializeExpression(start, value, props, token, content);\n    }\n    else if (input.type == \"at\" && CharClasses.hasOwnProperty(input.value)) {\n        let cls = new CharClass(input.start, input.value);\n        input.next();\n        return cls;\n    }\n    else if (input.type == \"[\") {\n        let rule = parseRule(input, new Identifier(start, \"_anon\"));\n        if (rule.params.length)\n            input.raise(`Inline rules can't have parameters`, rule.start);\n        return new InlineRuleExpression(start, rule);\n    }\n    else {\n        let id = parseIdent(input);\n        if (input.type == \"[\" || input.type == \"{\") {\n            let rule = parseRule(input, id);\n            if (rule.params.length)\n                input.raise(`Inline rules can't have parameters`, rule.start);\n            return new InlineRuleExpression(start, rule);\n        }\n        else {\n            if (input.eat(\".\") && id.name == \"std\" && CharClasses.hasOwnProperty(input.value)) {\n                let cls = new CharClass(start, input.value);\n                input.next();\n                return cls;\n            }\n            return new NameExpression(start, id, parseArgs(input));\n        }\n    }\n}\nfunction parseArgs(input) {\n    let args = [];\n    if (input.eat(\"<\"))\n        while (!input.eat(\">\")) {\n            if (args.length)\n                input.expect(\",\");\n            args.push(parseExprChoice(input));\n        }\n    return args;\n}\nfunction addRange(input, ranges, from, to) {\n    if (!ranges.every(([a, b]) => b <= from || a >= to))\n        input.raise(\"Overlapping character range\", input.start);\n    ranges.push([from, to]);\n}\nfunction parseExprSuffix(input) {\n    let start = input.start;\n    let expr = parseExprInner(input);\n    for (;;) {\n        let kind = input.type;\n        if (input.eat(\"*\") || input.eat(\"?\") || input.eat(\"+\"))\n            expr = new RepeatExpression(start, expr, kind);\n        else\n            return expr;\n    }\n}\nfunction endOfSequence(input) {\n    return input.type == \"}\" || input.type == \")\" || input.type == \"|\" || input.type == \"/\" ||\n        input.type == \"/\\\\\" || input.type == \"{\" || input.type == \",\" || input.type == \">\";\n}\nfunction parseExprSequence(input) {\n    let start = input.start, exprs = [], markers = [none$2];\n    do {\n        // Add markers at this position\n        for (;;) {\n            let localStart = input.start, markerType;\n            if (input.eat(\"~\"))\n                markerType = \"ambig\";\n            else if (input.eat(\"!\"))\n                markerType = \"prec\";\n            else\n                break;\n            markers[markers.length - 1] =\n                markers[markers.length - 1].concat(new ConflictMarker(localStart, parseIdent(input), markerType));\n        }\n        if (endOfSequence(input))\n            break;\n        exprs.push(parseExprSuffix(input));\n        markers.push(none$2);\n    } while (!endOfSequence(input));\n    if (exprs.length == 1 && markers.every(ms => ms.length == 0))\n        return exprs[0];\n    return new SequenceExpression(start, exprs, markers, !exprs.length);\n}\nfunction parseExprChoice(input) {\n    let start = input.start, left = parseExprSequence(input);\n    if (!input.eat(\"|\"))\n        return left;\n    let exprs = [left];\n    do {\n        exprs.push(parseExprSequence(input));\n    } while (input.eat(\"|\"));\n    let empty = exprs.find(s => s instanceof SequenceExpression && s.empty);\n    if (empty)\n        input.raise(\"Empty expression in choice operator. If this is intentional, use () to make it explicit.\", empty.start);\n    return new ChoiceExpression(start, exprs);\n}\nfunction parseIdent(input) {\n    if (input.type != \"id\")\n        input.unexpected();\n    let start = input.start, name = input.value;\n    input.next();\n    return new Identifier(start, name);\n}\nfunction parsePrecedence(input) {\n    let start = input.start;\n    input.next();\n    input.expect(\"{\");\n    let items = [];\n    while (!input.eat(\"}\")) {\n        if (items.length)\n            input.eat(\",\");\n        items.push({\n            id: parseIdent(input),\n            type: input.eat(\"at\", \"left\") ? \"left\" : input.eat(\"at\", \"right\") ? \"right\" : input.eat(\"at\", \"cut\") ? \"cut\" : null\n        });\n    }\n    return new PrecDeclaration(start, items);\n}\nfunction parseTokens(input) {\n    let start = input.start;\n    input.next();\n    input.expect(\"{\");\n    let tokenRules = [];\n    let literals = [];\n    let precedences = [];\n    let conflicts = [];\n    while (!input.eat(\"}\")) {\n        if (input.type == \"at\" && input.value == \"precedence\") {\n            precedences.push(parseTokenPrecedence(input));\n        }\n        else if (input.type == \"at\" && input.value == \"conflict\") {\n            conflicts.push(parseTokenConflict(input));\n        }\n        else if (input.type == \"string\") {\n            literals.push(new LiteralDeclaration(input.start, input.expect(\"string\"), parseProps(input)));\n        }\n        else {\n            tokenRules.push(parseRule(input));\n        }\n    }\n    return new TokenDeclaration(start, precedences, conflicts, tokenRules, literals);\n}\nfunction parseLocalTokens(input, start) {\n    input.expect(\"{\");\n    let tokenRules = [];\n    let precedences = [];\n    let fallback = null;\n    while (!input.eat(\"}\")) {\n        if (input.type == \"at\" && input.value == \"precedence\") {\n            precedences.push(parseTokenPrecedence(input));\n        }\n        else if (input.eat(\"at\", \"else\") && !fallback) {\n            fallback = { id: parseIdent(input), props: parseProps(input) };\n        }\n        else {\n            tokenRules.push(parseRule(input));\n        }\n    }\n    return new LocalTokenDeclaration(start, precedences, tokenRules, fallback);\n}\nfunction parseTokenPrecedence(input) {\n    let start = input.start;\n    input.next();\n    input.expect(\"{\");\n    let tokens = [];\n    while (!input.eat(\"}\")) {\n        if (tokens.length)\n            input.eat(\",\");\n        let expr = parseExprInner(input);\n        if (expr instanceof LiteralExpression || expr instanceof NameExpression)\n            tokens.push(expr);\n        else\n            input.raise(`Invalid expression in token precedences`, expr.start);\n    }\n    return new TokenPrecDeclaration(start, tokens);\n}\nfunction parseTokenConflict(input) {\n    let start = input.start;\n    input.next();\n    input.expect(\"{\");\n    let a = parseExprInner(input);\n    if (!(a instanceof LiteralExpression || a instanceof NameExpression))\n        input.raise(`Invalid expression in token conflict`, a.start);\n    input.eat(\",\");\n    let b = parseExprInner(input);\n    if (!(b instanceof LiteralExpression || b instanceof NameExpression))\n        input.raise(`Invalid expression in token conflict`, b.start);\n    input.expect(\"}\");\n    return new TokenConflictDeclaration(start, a, b);\n}\nfunction parseExternalTokenSet(input) {\n    let tokens = [];\n    input.expect(\"{\");\n    while (!input.eat(\"}\")) {\n        if (tokens.length)\n            input.eat(\",\");\n        let id = parseIdent(input);\n        let props = parseProps(input);\n        tokens.push({ id, props });\n    }\n    return tokens;\n}\nfunction parseExternalTokens(input, start) {\n    let id = parseIdent(input);\n    input.expect(\"id\", \"from\");\n    let from = input.expect(\"string\");\n    return new ExternalTokenDeclaration(start, id, from, parseExternalTokenSet(input));\n}\nfunction parseExternalSpecialize(input, type, start) {\n    let token = parseBracedExpr(input);\n    let id = parseIdent(input);\n    input.expect(\"id\", \"from\");\n    let from = input.expect(\"string\");\n    return new ExternalSpecializeDeclaration(start, type, token, id, from, parseExternalTokenSet(input));\n}\nfunction parseExternalPropSource(input, start) {\n    let id = parseIdent(input);\n    input.expect(\"id\", \"from\");\n    return new ExternalPropSourceDeclaration(start, id, input.expect(\"string\"));\n}\nfunction parseExternalProp(input, start) {\n    let externalID = parseIdent(input);\n    let id = input.eat(\"id\", \"as\") ? parseIdent(input) : externalID;\n    input.expect(\"id\", \"from\");\n    let from = input.expect(\"string\");\n    return new ExternalPropDeclaration(start, id, externalID, from);\n}\nfunction readString(string) {\n    let point = /\\\\(?:u\\{([\\da-f]+)\\}|u([\\da-f]{4})|x([\\da-f]{2})|([ntbrf0])|(.))|[^]/yig;\n    let out = \"\", m;\n    while (m = point.exec(string)) {\n        let [all, u1, u2, u3, single, unknown] = m;\n        if (u1 || u2 || u3)\n            out += String.fromCodePoint(parseInt(u1 || u2 || u3, 16));\n        else if (single)\n            out += single == \"n\" ? \"\\n\" : single == \"t\" ? \"\\t\" : single == \"0\" ? \"\\0\" : single == \"r\" ? \"\\r\" : single == \"f\" ? \"\\f\" : \"\\b\";\n        else if (unknown)\n            out += unknown;\n        else\n            out += all;\n    }\n    return out;\n}\n\nfunction hash(a, b) { return (a << 5) + a + b; }\nfunction hashString(h, s) {\n    for (let i = 0; i < s.length; i++)\n        h = hash(h, s.charCodeAt(i));\n    return h;\n}\n\nconst verbose = (typeof process != \"undefined\" && process.env.LOG) || \"\";\nconst timing = /\\btime\\b/.test(verbose);\nconst time = timing ? (label, f) => {\n    let t0 = Date.now();\n    let result = f();\n    console.log(`${label} (${((Date.now() - t0) / 1000).toFixed(2)}s)`);\n    return result;\n} : (_label, f) => f();\n\nclass Pos {\n    constructor(rule, pos, \n    // NOTE `ahead` and `ambigAhead` aren't mutated anymore after `finish()` has been called\n    ahead, ambigAhead, skipAhead, via) {\n        this.rule = rule;\n        this.pos = pos;\n        this.ahead = ahead;\n        this.ambigAhead = ambigAhead;\n        this.skipAhead = skipAhead;\n        this.via = via;\n        this.hash = 0;\n    }\n    finish() {\n        let h = hash(hash(this.rule.id, this.pos), this.skipAhead.hash);\n        for (let a of this.ahead)\n            h = hash(h, a.hash);\n        for (let group of this.ambigAhead)\n            h = hashString(h, group);\n        this.hash = h;\n        return this;\n    }\n    get next() {\n        return this.pos < this.rule.parts.length ? this.rule.parts[this.pos] : null;\n    }\n    advance() {\n        return new Pos(this.rule, this.pos + 1, this.ahead, this.ambigAhead, this.skipAhead, this.via).finish();\n    }\n    get skip() {\n        return this.pos == this.rule.parts.length ? this.skipAhead : this.rule.skip;\n    }\n    cmp(pos) {\n        return this.rule.cmp(pos.rule) || this.pos - pos.pos || this.skipAhead.hash - pos.skipAhead.hash ||\n            cmpSet(this.ahead, pos.ahead, (a, b) => a.cmp(b)) || cmpSet(this.ambigAhead, pos.ambigAhead, cmpStr);\n    }\n    eqSimple(pos) {\n        return pos.rule == this.rule && pos.pos == this.pos;\n    }\n    toString() {\n        let parts = this.rule.parts.map(t => t.name);\n        parts.splice(this.pos, 0, \"·\");\n        return `${this.rule.name} -> ${parts.join(\" \")}`;\n    }\n    eq(other) {\n        return this == other ||\n            this.hash == other.hash && this.rule == other.rule && this.pos == other.pos && this.skipAhead == other.skipAhead &&\n                sameSet(this.ahead, other.ahead) &&\n                sameSet(this.ambigAhead, other.ambigAhead);\n    }\n    trail(maxLen = 60) {\n        let result = [];\n        for (let pos = this; pos; pos = pos.via) {\n            for (let i = pos.pos - 1; i >= 0; i--)\n                result.push(pos.rule.parts[i]);\n        }\n        let value = result.reverse().join(\" \");\n        if (value.length > maxLen)\n            value = value.slice(value.length - maxLen).replace(/.*? /, \"… \");\n        return value;\n    }\n    conflicts(pos = this.pos) {\n        let result = this.rule.conflicts[pos];\n        if (pos == this.rule.parts.length && this.ambigAhead.length)\n            result = result.join(new Conflicts(0, this.ambigAhead));\n        return result;\n    }\n    static addOrigins(group, context) {\n        let result = group.slice();\n        for (let i = 0; i < result.length; i++) {\n            let next = result[i];\n            if (next.pos == 0)\n                for (let pos of context) {\n                    if (pos.next == next.rule.name && !result.includes(pos))\n                        result.push(pos);\n                }\n        }\n        return result;\n    }\n}\nfunction conflictsAt(group) {\n    let result = Conflicts.none;\n    for (let pos of group)\n        result = result.join(pos.conflicts());\n    return result;\n}\n// Applies automatic action precedence based on repeat productions.\n// These are left-associative, so reducing the `R -> R R` rule has\n// higher precedence.\nfunction compareRepeatPrec(a, b) {\n    for (let pos of a)\n        if (pos.rule.name.repeated) {\n            for (let posB of b)\n                if (posB.rule.name == pos.rule.name) {\n                    if (pos.rule.isRepeatWrap && pos.pos == 2)\n                        return 1;\n                    if (posB.rule.isRepeatWrap && posB.pos == 2)\n                        return -1;\n                }\n        }\n    return 0;\n}\nfunction cmpStr(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction termsAhead(rule, pos, after, first) {\n    let found = [];\n    for (let i = pos + 1; i < rule.parts.length; i++) {\n        let next = rule.parts[i], cont = false;\n        if (next.terminal) {\n            addTo(next, found);\n        }\n        else\n            for (let term of first[next.name]) {\n                if (term == null)\n                    cont = true;\n                else\n                    addTo(term, found);\n            }\n        if (!cont)\n            return found;\n    }\n    for (let a of after)\n        addTo(a, found);\n    return found;\n}\nfunction eqSet(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].eq(b[i]))\n            return false;\n    return true;\n}\nfunction sameSet(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (a[i] != b[i])\n            return false;\n    return true;\n}\nclass Shift {\n    constructor(term, target) {\n        this.term = term;\n        this.target = target;\n    }\n    eq(other) { return other instanceof Shift && this.term == other.term && other.target.id == this.target.id; }\n    cmp(other) { return other instanceof Reduce ? -1 : this.term.id - other.term.id || this.target.id - other.target.id; }\n    toString() { return \"s\" + this.target.id; }\n    map(mapping, states) {\n        let mapped = states[mapping[this.target.id]];\n        return mapped == this.target ? this : new Shift(this.term, mapped);\n    }\n}\nclass Reduce {\n    constructor(term, rule) {\n        this.term = term;\n        this.rule = rule;\n    }\n    eq(other) {\n        return other instanceof Reduce && this.term == other.term && other.rule.sameReduce(this.rule);\n    }\n    cmp(other) {\n        return other instanceof Shift ? 1 : this.term.id - other.term.id || this.rule.name.id - other.rule.name.id ||\n            this.rule.parts.length - other.rule.parts.length;\n    }\n    toString() { return `${this.rule.name.name}(${this.rule.parts.length})`; }\n    map() { return this; }\n}\nfunction hashPositions(set) {\n    let h = 5381;\n    for (let pos of set)\n        h = hash(h, pos.hash);\n    return h;\n}\nclass State {\n    constructor(id, set, flags = 0, skip, hash = hashPositions(set), startRule = null) {\n        this.id = id;\n        this.set = set;\n        this.flags = flags;\n        this.skip = skip;\n        this.hash = hash;\n        this.startRule = startRule;\n        this.actions = [];\n        this.actionPositions = [];\n        this.goto = [];\n        this.tokenGroup = -1;\n        this.defaultReduce = null;\n    }\n    toString() {\n        let actions = this.actions.map(t => t.term + \"=\" + t).join(\",\") +\n            (this.goto.length ? \" | \" + this.goto.map(g => g.term + \"=\" + g).join(\",\") : \"\");\n        return this.id + \": \" + this.set.filter(p => p.pos > 0).join() +\n            (this.defaultReduce ? `\\n  always ${this.defaultReduce.name}(${this.defaultReduce.parts.length})`\n                : actions.length ? \"\\n  \" + actions : \"\");\n    }\n    addActionInner(value, positions) {\n        check: for (let i = 0; i < this.actions.length; i++) {\n            let action = this.actions[i];\n            if (action.term == value.term) {\n                if (action.eq(value))\n                    return null;\n                let fullPos = Pos.addOrigins(positions, this.set), actionFullPos = Pos.addOrigins(this.actionPositions[i], this.set);\n                let conflicts = conflictsAt(fullPos), actionConflicts = conflictsAt(actionFullPos);\n                let diff = compareRepeatPrec(fullPos, actionFullPos) || conflicts.precedence - actionConflicts.precedence;\n                if (diff > 0) { // Drop the existing action\n                    this.actions.splice(i, 1);\n                    this.actionPositions.splice(i, 1);\n                    i--;\n                    continue check;\n                }\n                else if (diff < 0) { // Drop this one\n                    return null;\n                }\n                else if (conflicts.ambigGroups.some(g => actionConflicts.ambigGroups.includes(g))) { // Explicitly allowed ambiguity\n                    continue check;\n                }\n                else { // Not resolved\n                    return action;\n                }\n            }\n        }\n        this.actions.push(value);\n        this.actionPositions.push(positions);\n        return null;\n    }\n    addAction(value, positions, conflicts) {\n        let conflict = this.addActionInner(value, positions);\n        if (conflict) {\n            let conflictPos = this.actionPositions[this.actions.indexOf(conflict)][0];\n            let rules = [positions[0].rule.name, conflictPos.rule.name];\n            if (conflicts.some(c => c.rules.some(r => rules.includes(r))))\n                return;\n            let error;\n            if (conflict instanceof Shift)\n                error = `shift/reduce conflict between\\n  ${conflictPos}\\nand\\n  ${positions[0].rule}`;\n            else\n                error = `reduce/reduce conflict between\\n  ${conflictPos.rule}\\nand\\n  ${positions[0].rule}`;\n            error += `\\nWith input:\\n  ${positions[0].trail(70)} · ${value.term} …`;\n            error += findConflictOrigin(conflictPos, positions[0]);\n            conflicts.push(new Conflict(error, rules));\n        }\n    }\n    getGoto(term) {\n        return this.goto.find(a => a.term == term);\n    }\n    hasSet(set) {\n        return eqSet(this.set, set);\n    }\n    finish() {\n        if (this.actions.length) {\n            let first = this.actions[0];\n            if (first instanceof Reduce) {\n                let { rule } = first;\n                if (this.actions.every(a => a instanceof Reduce && a.rule.sameReduce(rule)))\n                    this.defaultReduce = rule;\n            }\n        }\n        this.actions.sort((a, b) => a.cmp(b));\n        this.goto.sort((a, b) => a.cmp(b));\n    }\n    eq(other) {\n        let dThis = this.defaultReduce, dOther = other.defaultReduce;\n        if (dThis || dOther)\n            return dThis && dOther ? dThis.sameReduce(dOther) : false;\n        return this.skip == other.skip &&\n            this.tokenGroup == other.tokenGroup &&\n            eqSet(this.actions, other.actions) &&\n            eqSet(this.goto, other.goto);\n    }\n}\nfunction closure(set, first) {\n    let added = [], redo = [];\n    function addFor(name, ahead, ambigAhead, skipAhead, via) {\n        for (let rule of name.rules) {\n            let add = added.find(a => a.rule == rule);\n            if (!add) {\n                let existing = set.find(p => p.pos == 0 && p.rule == rule);\n                add = existing ? new Pos(rule, 0, existing.ahead.slice(), existing.ambigAhead, existing.skipAhead, existing.via)\n                    : new Pos(rule, 0, [], none$1, skipAhead, via);\n                added.push(add);\n            }\n            if (add.skipAhead != skipAhead)\n                throw new GenError(\"Inconsistent skip sets after \" + via.trail());\n            add.ambigAhead = union(add.ambigAhead, ambigAhead);\n            for (let term of ahead)\n                if (!add.ahead.includes(term)) {\n                    add.ahead.push(term);\n                    if (add.rule.parts.length && !add.rule.parts[0].terminal)\n                        addTo(add, redo);\n                }\n        }\n    }\n    for (let pos of set) {\n        let next = pos.next;\n        if (next && !next.terminal)\n            addFor(next, termsAhead(pos.rule, pos.pos, pos.ahead, first), pos.conflicts(pos.pos + 1).ambigGroups, pos.pos == pos.rule.parts.length - 1 ? pos.skipAhead : pos.rule.skip, pos);\n    }\n    while (redo.length) {\n        let add = redo.pop();\n        addFor(add.rule.parts[0], termsAhead(add.rule, 0, add.ahead, first), union(add.rule.conflicts[1].ambigGroups, add.rule.parts.length == 1 ? add.ambigAhead : none$1), add.rule.parts.length == 1 ? add.skipAhead : add.rule.skip, add);\n    }\n    let result = set.slice();\n    for (let add of added) {\n        add.ahead.sort((a, b) => a.hash - b.hash);\n        add.finish();\n        let origIndex = set.findIndex(p => p.pos == 0 && p.rule == add.rule);\n        if (origIndex > -1)\n            result[origIndex] = add;\n        else\n            result.push(add);\n    }\n    return result.sort((a, b) => a.cmp(b));\n}\nfunction addTo(value, array) {\n    if (!array.includes(value))\n        array.push(value);\n}\nfunction computeFirstSets(terms) {\n    let table = Object.create(null);\n    for (let t of terms.terms)\n        if (!t.terminal)\n            table[t.name] = [];\n    for (;;) {\n        let change = false;\n        for (let nt of terms.terms)\n            if (!nt.terminal)\n                for (let rule of nt.rules) {\n                    let set = table[nt.name];\n                    let found = false, startLen = set.length;\n                    for (let part of rule.parts) {\n                        found = true;\n                        if (part.terminal) {\n                            addTo(part, set);\n                        }\n                        else {\n                            for (let t of table[part.name]) {\n                                if (t == null)\n                                    found = false;\n                                else\n                                    addTo(t, set);\n                            }\n                        }\n                        if (found)\n                            break;\n                    }\n                    if (!found)\n                        addTo(null, set);\n                    if (set.length > startLen)\n                        change = true;\n                }\n        if (!change)\n            return table;\n    }\n}\nclass Core {\n    constructor(set, state) {\n        this.set = set;\n        this.state = state;\n    }\n}\nclass Conflict {\n    constructor(error, rules) {\n        this.error = error;\n        this.rules = rules;\n    }\n}\nfunction findConflictOrigin(a, b) {\n    if (a.eqSimple(b))\n        return \"\";\n    function via(root, start) {\n        let hist = [];\n        for (let p = start.via; !p.eqSimple(root); p = p.via)\n            hist.push(p);\n        if (!hist.length)\n            return \"\";\n        hist.unshift(start);\n        return hist.reverse().map((p, i) => \"\\n\" + \"  \".repeat(i + 1) + (p == start ? \"\" : \"via \") + p).join(\"\");\n    }\n    for (let p = a; p; p = p.via)\n        for (let p2 = b; p2; p2 = p2.via) {\n            if (p.eqSimple(p2))\n                return \"\\nShared origin: \" + p + via(p, a) + via(p, b);\n        }\n    return \"\";\n}\n// Builds a full LR(1) automaton\nfunction buildFullAutomaton(terms, startTerms, first) {\n    let states = [];\n    let cores = {};\n    let t0 = Date.now();\n    function getState(core, top) {\n        if (core.length == 0)\n            return null;\n        let coreHash = hashPositions(core), byHash = cores[coreHash];\n        let skip;\n        for (let pos of core) {\n            if (!skip)\n                skip = pos.skip;\n            else if (skip != pos.skip)\n                throw new GenError(\"Inconsistent skip sets after \" + pos.trail());\n        }\n        if (byHash)\n            for (let known of byHash)\n                if (eqSet(core, known.set)) {\n                    if (known.state.skip != skip)\n                        throw new GenError(\"Inconsistent skip sets after \" + known.set[0].trail());\n                    return known.state;\n                }\n        let set = closure(core, first);\n        let hash = hashPositions(set), found;\n        if (!top)\n            for (let state of states)\n                if (state.hash == hash && state.hasSet(set))\n                    found = state;\n        if (!found) {\n            found = new State(states.length, set, 0, skip, hash, top);\n            states.push(found);\n            if (timing && states.length % 500 == 0)\n                console.log(`${states.length} states after ${((Date.now() - t0) / 1000).toFixed(2)}s`);\n        }\n        (cores[coreHash] || (cores[coreHash] = [])).push(new Core(core, found));\n        return found;\n    }\n    for (const startTerm of startTerms) {\n        const startSkip = startTerm.rules.length ? startTerm.rules[0].skip : terms.names[\"%noskip\"];\n        getState(startTerm.rules.map(rule => new Pos(rule, 0, [terms.eof], none$1, startSkip, null).finish()), startTerm);\n    }\n    let conflicts = [];\n    for (let filled = 0; filled < states.length; filled++) {\n        let state = states[filled];\n        let byTerm = [], byTermPos = [], atEnd = [];\n        for (let pos of state.set) {\n            if (pos.pos == pos.rule.parts.length) {\n                if (!pos.rule.name.top)\n                    atEnd.push(pos);\n            }\n            else {\n                let next = pos.rule.parts[pos.pos];\n                let index = byTerm.indexOf(next);\n                if (index < 0) {\n                    byTerm.push(next);\n                    byTermPos.push([pos]);\n                }\n                else {\n                    byTermPos[index].push(pos);\n                }\n            }\n        }\n        for (let i = 0; i < byTerm.length; i++) {\n            let term = byTerm[i], positions = byTermPos[i].map(p => p.advance());\n            if (term.terminal) {\n                let set = applyCut(positions);\n                let next = getState(set);\n                if (next)\n                    state.addAction(new Shift(term, next), byTermPos[i], conflicts);\n            }\n            else {\n                let goto = getState(positions);\n                if (goto)\n                    state.goto.push(new Shift(term, goto));\n            }\n        }\n        let replaced = false;\n        for (let pos of atEnd)\n            for (let ahead of pos.ahead) {\n                let count = state.actions.length;\n                state.addAction(new Reduce(ahead, pos.rule), [pos], conflicts);\n                if (state.actions.length == count)\n                    replaced = true;\n            }\n        // If some actions were replaced by others, double-check whether\n        // goto entries are now superfluous (for example, in an operator\n        // precedence-related state that has a shift for `*` but only a\n        // reduce for `+`, we don't need a goto entry for rules that start\n        // with `+`)\n        if (replaced)\n            for (let i = 0; i < state.goto.length; i++) {\n                let start = first[state.goto[i].term.name];\n                if (!start.some(term => state.actions.some(a => a.term == term && (a instanceof Shift))))\n                    state.goto.splice(i--, 1);\n            }\n    }\n    if (conflicts.length)\n        throw new GenError(conflicts.map(c => c.error).join(\"\\n\\n\"));\n    // Resolve alwaysReduce and sort actions\n    for (let state of states)\n        state.finish();\n    if (timing)\n        console.log(`${states.length} states total.`);\n    return states;\n}\nfunction applyCut(set) {\n    let found = null, cut = 1;\n    for (let pos of set) {\n        let value = pos.rule.conflicts[pos.pos - 1].cut;\n        if (value < cut)\n            continue;\n        if (!found || value > cut) {\n            cut = value;\n            found = [];\n        }\n        found.push(pos);\n    }\n    return found || set;\n}\nfunction canMergeInner(a, b, mapping) {\n    for (let goto of a.goto)\n        for (let other of b.goto) {\n            if (goto.term == other.term && mapping[goto.target.id] != mapping[other.target.id])\n                return false;\n        }\n    actions: for (let action of a.actions) {\n        let conflict = false;\n        for (let other of b.actions)\n            if (other.term == action.term) {\n                if (action instanceof Shift\n                    ? other instanceof Shift && mapping[action.target.id] == mapping[other.target.id]\n                    : other.eq(action))\n                    continue actions;\n                conflict = true;\n            }\n        if (conflict)\n            return false;\n    }\n    return true;\n}\nfunction canMerge(a, b, mapping) {\n    return canMergeInner(a, b, mapping) && canMergeInner(b, a, mapping);\n}\nfunction mergeStates(states, mapping) {\n    let newStates = [];\n    for (let state of states) {\n        let newID = mapping[state.id];\n        if (!newStates[newID]) {\n            newStates[newID] = new State(newID, state.set, 0, state.skip, state.hash, state.startRule);\n            newStates[newID].tokenGroup = state.tokenGroup;\n            newStates[newID].defaultReduce = state.defaultReduce;\n        }\n    }\n    for (let state of states) {\n        let newID = mapping[state.id], target = newStates[newID];\n        target.flags |= state.flags;\n        for (let i = 0; i < state.actions.length; i++) {\n            let action = state.actions[i].map(mapping, newStates);\n            if (!target.actions.some(a => a.eq(action))) {\n                target.actions.push(action);\n                target.actionPositions.push(state.actionPositions[i]);\n            }\n        }\n        for (let goto of state.goto) {\n            let mapped = goto.map(mapping, newStates);\n            if (!target.goto.some(g => g.eq(mapped)))\n                target.goto.push(mapped);\n        }\n    }\n    return newStates;\n}\nclass Group {\n    constructor(origin, member) {\n        this.origin = origin;\n        this.members = [member];\n    }\n}\nfunction samePosSet(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].eqSimple(b[i]))\n            return false;\n    return true;\n}\n// Collapse an LR(1) automaton to an LALR-like automaton\nfunction collapseAutomaton(states) {\n    let mapping = [], groups = [];\n    assignGroups: for (let i = 0; i < states.length; i++) {\n        let state = states[i];\n        if (!state.startRule)\n            for (let j = 0; j < groups.length; j++) {\n                let group = groups[j], other = states[group.members[0]];\n                if (state.tokenGroup == other.tokenGroup &&\n                    state.skip == other.skip &&\n                    !other.startRule &&\n                    samePosSet(state.set, other.set)) {\n                    group.members.push(i);\n                    mapping.push(j);\n                    continue assignGroups;\n                }\n            }\n        mapping.push(groups.length);\n        groups.push(new Group(groups.length, i));\n    }\n    function spill(groupIndex, index) {\n        let group = groups[groupIndex], state = states[group.members[index]];\n        let pop = group.members.pop();\n        if (index != group.members.length)\n            group.members[index] = pop;\n        for (let i = groupIndex + 1; i < groups.length; i++) {\n            mapping[state.id] = i;\n            if (groups[i].origin == group.origin &&\n                groups[i].members.every(id => canMerge(state, states[id], mapping))) {\n                groups[i].members.push(state.id);\n                return;\n            }\n        }\n        mapping[state.id] = groups.length;\n        groups.push(new Group(group.origin, state.id));\n    }\n    for (let pass = 1;; pass++) {\n        let conflicts = false, t0 = Date.now();\n        for (let g = 0, startLen = groups.length; g < startLen; g++) {\n            let group = groups[g];\n            for (let i = 0; i < group.members.length - 1; i++) {\n                for (let j = i + 1; j < group.members.length; j++) {\n                    let idA = group.members[i], idB = group.members[j];\n                    if (!canMerge(states[idA], states[idB], mapping)) {\n                        conflicts = true;\n                        spill(g, j--);\n                    }\n                }\n            }\n        }\n        if (timing)\n            console.log(`Collapse pass ${pass}${conflicts ? `` : `, done`} (${((Date.now() - t0) / 1000).toFixed(2)}s)`);\n        if (!conflicts)\n            return mergeStates(states, mapping);\n    }\n}\nfunction mergeIdentical(states) {\n    for (let pass = 1;; pass++) {\n        let mapping = [], didMerge = false, t0 = Date.now();\n        let newStates = [];\n        // Find states that either have the same alwaysReduce or the same\n        // actions, and merge them.\n        for (let i = 0; i < states.length; i++) {\n            let state = states[i];\n            let match = newStates.findIndex(s => state.eq(s));\n            if (match < 0) {\n                mapping[i] = newStates.length;\n                newStates.push(state);\n            }\n            else {\n                mapping[i] = match;\n                didMerge = true;\n                let other = newStates[match], add = null;\n                for (let pos of state.set)\n                    if (!other.set.some(p => p.eqSimple(pos)))\n                        (add || (add = [])).push(pos);\n                if (add)\n                    other.set = add.concat(other.set).sort((a, b) => a.cmp(b));\n            }\n        }\n        if (timing)\n            console.log(`Merge identical pass ${pass}${didMerge ? \"\" : \", done\"} (${((Date.now() - t0) / 1000).toFixed(2)}s)`);\n        if (!didMerge)\n            return states;\n        // Make sure actions point at merged state objects\n        for (let state of newStates)\n            if (!state.defaultReduce) {\n                state.actions = state.actions.map(a => a.map(mapping, newStates));\n                state.goto = state.goto.map(a => a.map(mapping, newStates));\n            }\n        // Renumber ids\n        for (let i = 0; i < newStates.length; i++)\n            newStates[i].id = i;\n        states = newStates;\n    }\n}\nconst none$1 = [];\nfunction finishAutomaton(full) {\n    return mergeIdentical(collapseAutomaton(full));\n}\n\n// Encode numbers as groups of printable ascii characters\n//\n// - 0xffff, which is often used as placeholder, is encoded as \"~\"\n//\n// - The characters from \" \" (32) to \"}\" (125), excluding '\"' and\n//   \"\\\\\", indicate values from 0 to 92\n//\n// - The first bit in a 'digit' is used to indicate whether this is\n//   the end of a number.\n//\n// - That leaves 46 other values, which are actually significant.\n//\n// - The digits in a number are ordered from high to low significance.\nfunction digitToChar(digit) {\n    let ch = digit + 32 /* Encode.Start */;\n    if (ch >= 34 /* Encode.Gap1 */)\n        ch++;\n    if (ch >= 92 /* Encode.Gap2 */)\n        ch++;\n    return String.fromCharCode(ch);\n}\nfunction encode(value, max = 0xffff) {\n    if (value > max)\n        throw new Error(\"Trying to encode a number that's too big: \" + value);\n    if (value == 65535 /* Encode.BigVal */)\n        return String.fromCharCode(126 /* Encode.BigValCode */);\n    let result = \"\";\n    for (let first = 46 /* Encode.Base */;; first = 0) {\n        let low = value % 46 /* Encode.Base */, rest = value - low;\n        result = digitToChar(low + first) + result;\n        if (rest == 0)\n            break;\n        value = rest / 46 /* Encode.Base */;\n    }\n    return result;\n}\nfunction encodeArray(values, max = 0xffff) {\n    let result = '\"' + encode(values.length, 0xffffffff);\n    for (let i = 0; i < values.length; i++)\n        result += encode(values[i], max);\n    result += '\"';\n    return result;\n}\n\nconst none = [];\nclass Parts {\n    constructor(terms, conflicts) {\n        this.terms = terms;\n        this.conflicts = conflicts;\n    }\n    concat(other) {\n        if (this == Parts.none)\n            return other;\n        if (other == Parts.none)\n            return this;\n        let conflicts = null;\n        if (this.conflicts || other.conflicts) {\n            conflicts = this.conflicts ? this.conflicts.slice() : this.ensureConflicts();\n            let otherConflicts = other.ensureConflicts();\n            conflicts[conflicts.length - 1] = conflicts[conflicts.length - 1].join(otherConflicts[0]);\n            for (let i = 1; i < otherConflicts.length; i++)\n                conflicts.push(otherConflicts[i]);\n        }\n        return new Parts(this.terms.concat(other.terms), conflicts);\n    }\n    withConflicts(pos, conflicts) {\n        if (conflicts == Conflicts.none)\n            return this;\n        let array = this.conflicts ? this.conflicts.slice() : this.ensureConflicts();\n        array[pos] = array[pos].join(conflicts);\n        return new Parts(this.terms, array);\n    }\n    ensureConflicts() {\n        if (this.conflicts)\n            return this.conflicts;\n        let empty = [];\n        for (let i = 0; i <= this.terms.length; i++)\n            empty.push(Conflicts.none);\n        return empty;\n    }\n}\nParts.none = new Parts(none, null);\nfunction p(...terms) { return new Parts(terms, null); }\nclass BuiltRule {\n    constructor(id, args, term) {\n        this.id = id;\n        this.args = args;\n        this.term = term;\n    }\n    matches(expr) {\n        return this.id == expr.id.name && exprsEq(expr.args, this.args);\n    }\n    matchesRepeat(expr) {\n        return this.id == \"+\" && exprEq(expr.expr, this.args[0]);\n    }\n}\nclass Builder {\n    constructor(text, options) {\n        this.options = options;\n        this.terms = new TermSet;\n        this.specialized = Object.create(null);\n        this.tokenOrigins = Object.create(null);\n        this.rules = [];\n        this.built = [];\n        this.ruleNames = Object.create(null);\n        this.namespaces = Object.create(null);\n        this.namedTerms = Object.create(null);\n        this.termTable = Object.create(null);\n        this.knownProps = Object.create(null);\n        this.dynamicRulePrecedences = [];\n        this.definedGroups = [];\n        this.astRules = [];\n        this.currentSkip = [];\n        time(\"Parse\", () => {\n            this.input = new Input(text, options.fileName);\n            this.ast = this.input.parse();\n        });\n        let NP = NodeProp;\n        for (let prop in NP) {\n            if (NP[prop] instanceof NodeProp && !NP[prop].perNode)\n                this.knownProps[prop] = { prop: NP[prop], source: { name: prop, from: null } };\n        }\n        for (let prop of this.ast.externalProps) {\n            this.knownProps[prop.id.name] = {\n                prop: this.options.externalProp ? this.options.externalProp(prop.id.name) : new NodeProp(),\n                source: { name: prop.externalID.name, from: prop.source }\n            };\n        }\n        this.dialects = this.ast.dialects.map(d => d.name);\n        this.tokens = new MainTokenSet(this, this.ast.tokens);\n        this.localTokens = this.ast.localTokens.map(g => new LocalTokenSet(this, g));\n        this.externalTokens = this.ast.externalTokens.map(ext => new ExternalTokenSet(this, ext));\n        this.externalSpecializers = this.ast.externalSpecializers.map(decl => new ExternalSpecializer(this, decl));\n        time(\"Build rules\", () => {\n            let noSkip = this.newName(\"%noskip\", true);\n            this.defineRule(noSkip, []);\n            let mainSkip = this.ast.mainSkip ? this.newName(\"%mainskip\", true) : noSkip;\n            let scopedSkip = [], topRules = [];\n            for (let rule of this.ast.rules)\n                this.astRules.push({ skip: mainSkip, rule });\n            for (let rule of this.ast.topRules)\n                topRules.push({ skip: mainSkip, rule });\n            for (let scoped of this.ast.scopedSkip) {\n                let skip = noSkip, found = this.ast.scopedSkip.findIndex((sc, i) => i < scopedSkip.length && exprEq(sc.expr, scoped.expr));\n                if (found > -1)\n                    skip = scopedSkip[found];\n                else if (this.ast.mainSkip && exprEq(scoped.expr, this.ast.mainSkip))\n                    skip = mainSkip;\n                else if (!isEmpty(scoped.expr))\n                    skip = this.newName(\"%skip\", true);\n                scopedSkip.push(skip);\n                for (let rule of scoped.rules)\n                    this.astRules.push({ skip, rule });\n                for (let rule of scoped.topRules)\n                    topRules.push({ skip, rule });\n            }\n            for (let { rule } of this.astRules) {\n                this.unique(rule.id);\n            }\n            this.currentSkip.push(noSkip);\n            this.skipRules = mainSkip == noSkip ? [mainSkip] : [noSkip, mainSkip];\n            if (mainSkip != noSkip)\n                this.defineRule(mainSkip, this.normalizeExpr(this.ast.mainSkip));\n            for (let i = 0; i < this.ast.scopedSkip.length; i++) {\n                let skip = scopedSkip[i];\n                if (!this.skipRules.includes(skip)) {\n                    this.skipRules.push(skip);\n                    if (skip != noSkip)\n                        this.defineRule(skip, this.normalizeExpr(this.ast.scopedSkip[i].expr));\n                }\n            }\n            this.currentSkip.pop();\n            for (let { rule, skip } of topRules.sort((a, b) => a.rule.start - b.rule.start)) {\n                this.unique(rule.id);\n                this.used(rule.id.name);\n                this.currentSkip.push(skip);\n                let { name, props } = this.nodeInfo(rule.props, \"a\", rule.id.name, none, none, rule.expr);\n                let term = this.terms.makeTop(name, props);\n                this.namedTerms[name] = term;\n                this.defineRule(term, this.normalizeExpr(rule.expr));\n                this.currentSkip.pop();\n            }\n            for (let ext of this.externalSpecializers)\n                ext.finish();\n            for (let { skip, rule } of this.astRules) {\n                if (this.ruleNames[rule.id.name] && isExported(rule) && !rule.params.length) {\n                    this.buildRule(rule, [], skip, false);\n                    if (rule.expr instanceof SequenceExpression && rule.expr.exprs.length == 0)\n                        this.used(rule.id.name);\n                }\n            }\n        });\n        for (let name in this.ruleNames) {\n            let value = this.ruleNames[name];\n            if (value)\n                this.warn(`Unused rule '${value.name}'`, value.start);\n        }\n        this.tokens.takePrecedences();\n        this.tokens.takeConflicts();\n        for (let lt of this.localTokens)\n            lt.takePrecedences();\n        for (let { name, group, rule } of this.definedGroups)\n            this.defineGroup(name, group, rule);\n        this.checkGroups();\n    }\n    unique(id) {\n        if (id.name in this.ruleNames)\n            this.raise(`Duplicate definition of rule '${id.name}'`, id.start);\n        this.ruleNames[id.name] = id;\n    }\n    used(name) {\n        this.ruleNames[name] = null;\n    }\n    newName(base, nodeName = null, props = {}) {\n        for (let i = nodeName ? 0 : 1;; i++) {\n            let name = i ? `${base}-${i}` : base;\n            if (!this.terms.names[name])\n                return this.terms.makeNonTerminal(name, nodeName === true ? null : nodeName, props);\n        }\n    }\n    prepareParser() {\n        let rules = time(\"Simplify rules\", () => simplifyRules(this.rules, [\n            ...this.skipRules,\n            ...this.terms.tops\n        ]));\n        let { nodeTypes, names: termNames, minRepeatTerm, maxTerm } = this.terms.finish(rules);\n        for (let prop in this.namedTerms)\n            this.termTable[prop] = this.namedTerms[prop].id;\n        if (/\\bgrammar\\b/.test(verbose))\n            console.log(rules.join(\"\\n\"));\n        let startTerms = this.terms.tops.slice();\n        let first = computeFirstSets(this.terms);\n        let skipInfo = this.skipRules.map((name, id) => {\n            let skip = [], startTokens = [], rules = [];\n            for (let rule of name.rules) {\n                if (!rule.parts.length)\n                    continue;\n                let start = rule.parts[0];\n                for (let t of start.terminal ? [start] : first[start.name] || [])\n                    if (!startTokens.includes(t))\n                        startTokens.push(t);\n                if (start.terminal && rule.parts.length == 1 && !rules.some(r => r != rule && r.parts[0] == start))\n                    skip.push(start);\n                else\n                    rules.push(rule);\n            }\n            name.rules = rules;\n            if (rules.length)\n                startTerms.push(name);\n            return { skip, rule: rules.length ? name : null, startTokens, id };\n        });\n        let fullTable = time(\"Build full automaton\", () => buildFullAutomaton(this.terms, startTerms, first));\n        let localTokens = this.localTokens\n            .map((grp, i) => grp.buildLocalGroup(fullTable, skipInfo, i));\n        let { tokenGroups, tokenPrec, tokenData } = time(\"Build token groups\", () => this.tokens.buildTokenGroups(fullTable, skipInfo, localTokens.length));\n        let table = time(\"Finish automaton\", () => finishAutomaton(fullTable));\n        let skipState = findSkipStates(table, this.terms.tops);\n        if (/\\blr\\b/.test(verbose))\n            console.log(table.join(\"\\n\"));\n        let specialized = [];\n        for (let ext of this.externalSpecializers)\n            specialized.push(ext);\n        for (let name in this.specialized)\n            specialized.push({ token: this.terms.names[name], table: buildSpecializeTable(this.specialized[name]) });\n        let tokStart = (tokenizer) => {\n            if (tokenizer instanceof ExternalTokenSet)\n                return tokenizer.ast.start;\n            return this.tokens.ast ? this.tokens.ast.start : -1;\n        };\n        let tokenizers = tokenGroups\n            .concat(this.externalTokens)\n            .sort((a, b) => tokStart(a) - tokStart(b))\n            .concat(localTokens);\n        let data = new DataBuilder;\n        let skipData = skipInfo.map(info => {\n            let actions = [];\n            for (let term of info.skip)\n                actions.push(term.id, 0, 262144 /* Action.StayFlag */ >> 16);\n            if (info.rule) {\n                let state = table.find(s => s.startRule == info.rule);\n                for (let action of state.actions)\n                    actions.push(action.term.id, state.id, 131072 /* Action.GotoFlag */ >> 16);\n            }\n            actions.push(65535 /* Seq.End */, 0 /* Seq.Done */);\n            return data.storeArray(actions);\n        });\n        let states = time(\"Finish states\", () => {\n            let states = new Uint32Array(table.length * 6 /* ParseState.Size */);\n            let forceReductions = this.computeForceReductions(table, skipInfo);\n            let finishCx = new FinishStateContext(tokenizers, data, states, skipData, skipInfo, table, this);\n            for (let s of table)\n                finishCx.finish(s, skipState(s.id), forceReductions[s.id]);\n            return states;\n        });\n        let dialects = Object.create(null);\n        for (let i = 0; i < this.dialects.length; i++)\n            dialects[this.dialects[i]] = data.storeArray((this.tokens.byDialect[i] || none).map(t => t.id).concat(65535 /* Seq.End */));\n        let dynamicPrecedences = null;\n        if (this.dynamicRulePrecedences.length) {\n            dynamicPrecedences = Object.create(null);\n            for (let { rule, prec } of this.dynamicRulePrecedences)\n                dynamicPrecedences[rule.id] = prec;\n        }\n        let topRules = Object.create(null);\n        for (let term of this.terms.tops)\n            topRules[term.nodeName] = [table.find(state => state.startRule == term).id, term.id];\n        let precTable = data.storeArray(tokenPrec.concat(65535 /* Seq.End */));\n        let { nodeProps, skippedTypes } = this.gatherNodeProps(nodeTypes);\n        return {\n            states,\n            stateData: data.finish(),\n            goto: computeGotoTable(table),\n            nodeNames: nodeTypes.filter(t => t.id < minRepeatTerm).map(t => t.nodeName).join(\" \"),\n            nodeProps,\n            skippedTypes,\n            maxTerm,\n            repeatNodeCount: nodeTypes.length - minRepeatTerm,\n            tokenizers,\n            tokenData,\n            topRules,\n            dialects,\n            dynamicPrecedences,\n            specialized,\n            tokenPrec: precTable,\n            termNames\n        };\n    }\n    getParser() {\n        let { states, stateData, goto, nodeNames, nodeProps: rawNodeProps, skippedTypes, maxTerm, repeatNodeCount, tokenizers, tokenData, topRules, dialects, dynamicPrecedences, specialized: rawSpecialized, tokenPrec, termNames } = this.prepareParser();\n        let specialized = rawSpecialized.map(v => {\n            if (v instanceof ExternalSpecializer) {\n                let ext = this.options.externalSpecializer(v.ast.id.name, this.termTable);\n                return {\n                    term: v.term.id,\n                    get: (value, stack) => (ext(value, stack) << 1) |\n                        (v.ast.type == \"extend\" ? 1 /* Specialize.Extend */ : 0 /* Specialize.Specialize */),\n                    external: ext,\n                    extend: v.ast.type == \"extend\"\n                };\n            }\n            else {\n                return { term: v.token.id, get: (value) => v.table[value] || -1 };\n            }\n        });\n        return LRParser.deserialize({\n            version: 14 /* File.Version */,\n            states,\n            stateData,\n            goto,\n            nodeNames,\n            maxTerm,\n            repeatNodeCount,\n            nodeProps: rawNodeProps.map(({ prop, terms }) => [this.knownProps[prop].prop, ...terms]),\n            propSources: !this.options.externalPropSource ? undefined\n                : this.ast.externalPropSources.map(s => this.options.externalPropSource(s.id.name)),\n            skippedNodes: skippedTypes,\n            tokenData,\n            tokenizers: tokenizers.map(tok => tok.create()),\n            context: this.ast.context ? this.options.contextTracker : undefined,\n            topRules,\n            dialects,\n            dynamicPrecedences,\n            specialized,\n            tokenPrec,\n            termNames\n        });\n    }\n    getParserFile() {\n        let { states, stateData, goto, nodeNames, nodeProps: rawNodeProps, skippedTypes, maxTerm, repeatNodeCount, tokenizers: rawTokenizers, tokenData, topRules, dialects: rawDialects, dynamicPrecedences, specialized: rawSpecialized, tokenPrec, termNames } = this.prepareParser();\n        let mod = this.options.moduleStyle || \"es\";\n        let gen = \"// This file was generated by lezer-generator. You probably shouldn't edit it.\\n\", head = gen;\n        let imports = {}, imported = Object.create(null);\n        let defined = Object.create(null);\n        for (let word of KEYWORDS)\n            defined[word] = true;\n        let exportName = this.options.exportName || \"parser\";\n        defined[exportName] = true;\n        let getName = (prefix) => {\n            for (let i = 0;; i++) {\n                let id = prefix + (i ? \"_\" + i : \"\");\n                if (!defined[id])\n                    return id;\n            }\n        };\n        let importName = (name, source, prefix = name) => {\n            let spec = name + \" from \" + source;\n            if (imported[spec])\n                return imported[spec];\n            let src = JSON.stringify(source), varName = name;\n            if (name in defined) {\n                varName = getName(prefix);\n                name += `${mod == \"cjs\" ? \":\" : \" as\"} ${varName}`;\n            }\n            defined[varName] = true;\n            (imports[src] || (imports[src] = [])).push(name);\n            return imported[spec] = varName;\n        };\n        let lrParser = importName(\"LRParser\", \"@lezer/lr\");\n        let tokenizers = rawTokenizers.map(tok => tok.createSource(importName));\n        let context = this.ast.context ? importName(this.ast.context.id.name, this.ast.context.source) : null;\n        let nodeProps = rawNodeProps.map(({ prop, terms }) => {\n            let { source } = this.knownProps[prop];\n            let propID = source.from ? importName(source.name, source.from) : JSON.stringify(source.name);\n            return `[${propID}, ${terms.map(serializePropValue).join(\",\")}]`;\n        });\n        function specializationTableString(table) {\n            return \"{__proto__:null,\" + Object.keys(table).map(key => `${/\\W/.test(key) ? JSON.stringify(key) : key}:${table[key]}`)\n                .join(\", \") + \"}\";\n        }\n        let specHead = \"\";\n        let specialized = rawSpecialized.map(v => {\n            if (v instanceof ExternalSpecializer) {\n                let name = importName(v.ast.id.name, v.ast.source);\n                return `{term: ${v.term.id}, get: (value, stack) => (${name}(value, stack) << 1)${v.ast.type == \"extend\" ? ` | ${1 /* Specialize.Extend */}` : ''}, external: ${name}${v.ast.type == \"extend\" ? ', extend: true' : ''}}`;\n            }\n            else {\n                let tableName = getName(\"spec_\" + v.token.name.replace(/\\W/g, \"\"));\n                defined[tableName] = true;\n                specHead += `const ${tableName} = ${specializationTableString(v.table)}\\n`;\n                return `{term: ${v.token.id}, get: value => ${tableName}[value] || -1}`;\n            }\n        });\n        let propSources = this.ast.externalPropSources.map(s => importName(s.id.name, s.source));\n        for (let source in imports) {\n            if (mod == \"cjs\")\n                head += `const {${imports[source].join(\", \")}} = require(${source})\\n`;\n            else\n                head += `import {${imports[source].join(\", \")}} from ${source}\\n`;\n        }\n        head += specHead;\n        function serializePropValue(value) {\n            return typeof value != \"string\" || /^(true|false|\\d+(\\.\\d+)?|\\.\\d+)$/.test(value) ? value : JSON.stringify(value);\n        }\n        let dialects = Object.keys(rawDialects).map(d => `${d}: ${rawDialects[d]}`);\n        let parserStr = `${lrParser}.deserialize({\n  version: ${14 /* File.Version */},\n  states: ${encodeArray(states, 0xffffffff)},\n  stateData: ${encodeArray(stateData)},\n  goto: ${encodeArray(goto)},\n  nodeNames: ${JSON.stringify(nodeNames)},\n  maxTerm: ${maxTerm}${context ? `,\n  context: ${context}` : \"\"}${nodeProps.length ? `,\n  nodeProps: [\n    ${nodeProps.join(\",\\n    \")}\n  ]` : \"\"}${propSources.length ? `,\n  propSources: [${propSources.join()}]` : \"\"}${skippedTypes.length ? `,\n  skippedNodes: ${JSON.stringify(skippedTypes)}` : \"\"},\n  repeatNodeCount: ${repeatNodeCount},\n  tokenData: ${encodeArray(tokenData)},\n  tokenizers: [${tokenizers.join(\", \")}],\n  topRules: ${JSON.stringify(topRules)}${dialects.length ? `,\n  dialects: {${dialects.join(\", \")}}` : \"\"}${dynamicPrecedences ? `,\n  dynamicPrecedences: ${JSON.stringify(dynamicPrecedences)}` : \"\"}${specialized.length ? `,\n  specialized: [${specialized.join(\",\")}]` : \"\"},\n  tokenPrec: ${tokenPrec}${this.options.includeNames ? `,\n  termNames: ${JSON.stringify(termNames)}` : ''}\n})`;\n        let terms = [];\n        for (let name in this.termTable) {\n            let id = name;\n            if (KEYWORDS.includes(id))\n                for (let i = 1;; i++) {\n                    id = \"_\".repeat(i) + name;\n                    if (!(id in this.termTable))\n                        break;\n                }\n            terms.push(`${id}${mod == \"cjs\" ? \":\" : \" =\"} ${this.termTable[name]}`);\n        }\n        for (let id = 0; id < this.dialects.length; id++)\n            terms.push(`Dialect_${this.dialects[id]}${mod == \"cjs\" ? \":\" : \" =\"} ${id}`);\n        return {\n            parser: head + (mod == \"cjs\" ? `exports.${exportName} = ${parserStr}\\n` : `export const ${exportName} = ${parserStr}\\n`),\n            terms: mod == \"cjs\" ? `${gen}module.exports = {\\n  ${terms.join(\",\\n  \")}\\n}`\n                : `${gen}export const\\n  ${terms.join(\",\\n  \")}\\n`\n        };\n    }\n    gatherNonSkippedNodes() {\n        let seen = Object.create(null);\n        let work = [];\n        let add = (term) => {\n            if (!seen[term.id]) {\n                seen[term.id] = true;\n                work.push(term);\n            }\n        };\n        this.terms.tops.forEach(add);\n        for (let i = 0; i < work.length; i++) {\n            for (let rule of work[i].rules)\n                for (let part of rule.parts)\n                    add(part);\n        }\n        return seen;\n    }\n    gatherNodeProps(nodeTypes) {\n        let notSkipped = this.gatherNonSkippedNodes(), skippedTypes = [];\n        let nodeProps = [];\n        for (let type of nodeTypes) {\n            if (!notSkipped[type.id] && !type.error)\n                skippedTypes.push(type.id);\n            for (let prop in type.props) {\n                let known = this.knownProps[prop];\n                if (!known)\n                    throw new GenError(\"No known prop type for \" + prop);\n                if (known.source.from == null && (known.source.name == \"repeated\" || known.source.name == \"error\"))\n                    continue;\n                let rec = nodeProps.find(r => r.prop == prop);\n                if (!rec)\n                    nodeProps.push(rec = { prop, values: {} });\n                (rec.values[type.props[prop]] || (rec.values[type.props[prop]] = [])).push(type.id);\n            }\n        }\n        return {\n            nodeProps: nodeProps.map(({ prop, values }) => {\n                let terms = [];\n                for (let val in values) {\n                    let ids = values[val];\n                    if (ids.length == 1) {\n                        terms.push(ids[0], val);\n                    }\n                    else {\n                        terms.push(-ids.length);\n                        for (let id of ids)\n                            terms.push(id);\n                        terms.push(val);\n                    }\n                }\n                return { prop, terms };\n            }),\n            skippedTypes\n        };\n    }\n    makeTerminal(name, tag, props) {\n        return this.terms.makeTerminal(this.terms.uniqueName(name), tag, props);\n    }\n    computeForceReductions(states, skipInfo) {\n        // This finds a forced reduction for every state, trying to guard\n        // against cyclic forced reductions, where a given parse stack can\n        // endlessly continue running forced reductions without making any\n        // progress.\n        //\n        // This occurs with length-1 reductions. We never generate\n        // length-0 reductions, and length-2+ reductions always shrink the\n        // stack, so they are guaranteed to make progress.\n        //\n        // If there are states S1 and S2 whose forced reductions reduce\n        // terms T1 and T2 respectively, both with a length of 1, _and_\n        // there is a state S3, which has goto entries T1 -> S2, T2 -> S1,\n        // you can get cyclic reductions. Of course, the cycle may also\n        // contain more than two steps.\n        let reductions = [];\n        let candidates = [];\n        // A map from terms to states that they are mapped to in goto\n        // entries.\n        let gotoEdges = Object.create(null);\n        for (let state of states) {\n            reductions.push(0);\n            for (let edge of state.goto) {\n                let array = gotoEdges[edge.term.id] || (gotoEdges[edge.term.id] = []);\n                let found = array.find(o => o.target == edge.target.id);\n                if (found)\n                    found.parents.push(state.id);\n                else\n                    array.push({ parents: [state.id], target: edge.target.id });\n            }\n            candidates[state.id] = state.set.filter(pos => pos.pos > 0 && !pos.rule.name.top)\n                .sort((a, b) => b.pos - a.pos || a.rule.parts.length - b.rule.parts.length);\n        }\n        // Mapping from state ids to terms that that state has a length-1\n        // forced reduction for.\n        let length1Reductions = Object.create(null);\n        function createsCycle(term, startState, parents = null) {\n            let edges = gotoEdges[term];\n            if (!edges)\n                return false;\n            return edges.some(val => {\n                let parentIntersection = parents ? parents.filter(id => val.parents.includes(id)) : val.parents;\n                if (parentIntersection.length == 0)\n                    return false;\n                if (val.target == startState)\n                    return true;\n                let found = length1Reductions[val.target];\n                return found != null && createsCycle(found, startState, parentIntersection);\n            });\n        }\n        for (let state of states) {\n            if (state.defaultReduce && state.defaultReduce.parts.length > 0) {\n                reductions[state.id] = reduceAction(state.defaultReduce, skipInfo);\n                if (state.defaultReduce.parts.length == 1)\n                    length1Reductions[state.id] = state.defaultReduce.name.id;\n            }\n        }\n        // To avoid painting states that only have one potential forced\n        // reduction into a corner, reduction assignment is done by\n        // candidate size, starting with the states with fewer candidates.\n        for (let setSize = 1;; setSize++) {\n            let done = true;\n            for (let state of states) {\n                if (state.defaultReduce)\n                    continue;\n                let set = candidates[state.id];\n                if (set.length != setSize) {\n                    if (set.length > setSize)\n                        done = false;\n                    continue;\n                }\n                for (let pos of set) {\n                    if (pos.pos != 1 || !createsCycle(pos.rule.name.id, state.id)) {\n                        reductions[state.id] = reduceAction(pos.rule, skipInfo, pos.pos);\n                        if (pos.pos == 1)\n                            length1Reductions[state.id] = pos.rule.name.id;\n                        break;\n                    }\n                }\n            }\n            if (done)\n                break;\n        }\n        return reductions;\n    }\n    substituteArgs(expr, args, params) {\n        if (args.length == 0)\n            return expr;\n        return expr.walk(expr => {\n            let found;\n            if (expr instanceof NameExpression &&\n                (found = params.findIndex(p => p.name == expr.id.name)) > -1) {\n                let arg = args[found];\n                if (expr.args.length) {\n                    if (arg instanceof NameExpression && !arg.args.length)\n                        return new NameExpression(expr.start, arg.id, expr.args);\n                    this.raise(`Passing arguments to a parameter that already has arguments`, expr.start);\n                }\n                return arg;\n            }\n            else if (expr instanceof InlineRuleExpression) {\n                let r = expr.rule, props = this.substituteArgsInProps(r.props, args, params);\n                return props == r.props ? expr :\n                    new InlineRuleExpression(expr.start, new RuleDeclaration(r.start, r.id, props, r.params, r.expr));\n            }\n            else if (expr instanceof SpecializeExpression) {\n                let props = this.substituteArgsInProps(expr.props, args, params);\n                return props == expr.props ? expr :\n                    new SpecializeExpression(expr.start, expr.type, props, expr.token, expr.content);\n            }\n            return expr;\n        });\n    }\n    substituteArgsInProps(props, args, params) {\n        let substituteInValue = (value) => {\n            let result = value;\n            for (let i = 0; i < value.length; i++) {\n                let part = value[i];\n                if (!part.name)\n                    continue;\n                let found = params.findIndex(p => p.name == part.name);\n                if (found < 0)\n                    continue;\n                if (result == value)\n                    result = value.slice();\n                let expr = args[found];\n                if (expr instanceof NameExpression && !expr.args.length)\n                    result[i] = new PropPart(part.start, expr.id.name, null);\n                else if (expr instanceof LiteralExpression)\n                    result[i] = new PropPart(part.start, expr.value, null);\n                else\n                    this.raise(`Trying to interpolate expression '${expr}' into a prop`, part.start);\n            }\n            return result;\n        };\n        let result = props;\n        for (let i = 0; i < props.length; i++) {\n            let prop = props[i], value = substituteInValue(prop.value);\n            if (value != prop.value) {\n                if (result == props)\n                    result = props.slice();\n                result[i] = new Prop(prop.start, prop.at, prop.name, value);\n            }\n        }\n        return result;\n    }\n    conflictsFor(markers) {\n        let here = Conflicts.none, atEnd = Conflicts.none;\n        for (let marker of markers) {\n            if (marker.type == \"ambig\") {\n                here = here.join(new Conflicts(0, [marker.id.name]));\n            }\n            else {\n                let precs = this.ast.precedences;\n                let index = precs ? precs.items.findIndex(item => item.id.name == marker.id.name) : -1;\n                if (index < 0)\n                    this.raise(`Reference to unknown precedence: '${marker.id.name}'`, marker.id.start);\n                let prec = precs.items[index], value = precs.items.length - index;\n                if (prec.type == \"cut\") {\n                    here = here.join(new Conflicts(0, none, value));\n                }\n                else {\n                    here = here.join(new Conflicts(value << 2));\n                    atEnd = atEnd.join(new Conflicts((value << 2) + (prec.type == \"left\" ? 1 : prec.type == \"right\" ? -1 : 0)));\n                }\n            }\n        }\n        return { here, atEnd };\n    }\n    raise(message, pos = 1) {\n        return this.input.raise(message, pos);\n    }\n    warn(message, pos = -1) {\n        let msg = this.input.message(message, pos);\n        if (this.options.warn)\n            this.options.warn(msg);\n        else\n            console.warn(msg);\n    }\n    defineRule(name, choices) {\n        let skip = this.currentSkip[this.currentSkip.length - 1];\n        for (let choice of choices)\n            this.rules.push(new Rule(name, choice.terms, choice.ensureConflicts(), skip));\n    }\n    resolve(expr) {\n        for (let built of this.built)\n            if (built.matches(expr))\n                return [p(built.term)];\n        let found = this.tokens.getToken(expr);\n        if (found)\n            return [p(found)];\n        for (let grp of this.localTokens) {\n            let found = grp.getToken(expr);\n            if (found)\n                return [p(found)];\n        }\n        for (let ext of this.externalTokens) {\n            let found = ext.getToken(expr);\n            if (found)\n                return [p(found)];\n        }\n        for (let ext of this.externalSpecializers) {\n            let found = ext.getToken(expr);\n            if (found)\n                return [p(found)];\n        }\n        let known = this.astRules.find(r => r.rule.id.name == expr.id.name);\n        if (!known)\n            return this.raise(`Reference to undefined rule '${expr.id.name}'`, expr.start);\n        if (known.rule.params.length != expr.args.length)\n            this.raise(`Wrong number or arguments for '${expr.id.name}'`, expr.start);\n        this.used(known.rule.id.name);\n        return [p(this.buildRule(known.rule, expr.args, known.skip))];\n    }\n    // For tree-balancing reasons, repeat expressions X+ have to be\n    // normalized to something like\n    //\n    //     R -> X | R R\n    //\n    // Returns the `R` term.\n    normalizeRepeat(expr) {\n        let known = this.built.find(b => b.matchesRepeat(expr));\n        if (known)\n            return p(known.term);\n        let name = expr.expr.prec < expr.prec ? `(${expr.expr})+` : `${expr.expr}+`;\n        let term = this.terms.makeRepeat(this.terms.uniqueName(name));\n        this.built.push(new BuiltRule(\"+\", [expr.expr], term));\n        this.defineRule(term, this.normalizeExpr(expr.expr).concat(p(term, term)));\n        return p(term);\n    }\n    normalizeSequence(expr) {\n        let result = expr.exprs.map(e => this.normalizeExpr(e));\n        let builder = this;\n        function complete(start, from, endConflicts) {\n            let { here, atEnd } = builder.conflictsFor(expr.markers[from]);\n            if (from == result.length)\n                return [start.withConflicts(start.terms.length, here.join(endConflicts))];\n            let choices = [];\n            for (let choice of result[from]) {\n                for (let full of complete(start.concat(choice).withConflicts(start.terms.length, here), from + 1, endConflicts.join(atEnd)))\n                    choices.push(full);\n            }\n            return choices;\n        }\n        return complete(Parts.none, 0, Conflicts.none);\n    }\n    normalizeExpr(expr) {\n        if (expr instanceof RepeatExpression && expr.kind == \"?\") {\n            return [Parts.none, ...this.normalizeExpr(expr.expr)];\n        }\n        else if (expr instanceof RepeatExpression) {\n            let repeated = this.normalizeRepeat(expr);\n            return expr.kind == \"+\" ? [repeated] : [Parts.none, repeated];\n        }\n        else if (expr instanceof ChoiceExpression) {\n            return expr.exprs.reduce((o, e) => o.concat(this.normalizeExpr(e)), []);\n        }\n        else if (expr instanceof SequenceExpression) {\n            return this.normalizeSequence(expr);\n        }\n        else if (expr instanceof LiteralExpression) {\n            return [p(this.tokens.getLiteral(expr))];\n        }\n        else if (expr instanceof NameExpression) {\n            return this.resolve(expr);\n        }\n        else if (expr instanceof SpecializeExpression) {\n            return [p(this.resolveSpecialization(expr))];\n        }\n        else if (expr instanceof InlineRuleExpression) {\n            return [p(this.buildRule(expr.rule, none, this.currentSkip[this.currentSkip.length - 1], true))];\n        }\n        else {\n            return this.raise(`This type of expression ('${expr}') may not occur in non-token rules`, expr.start);\n        }\n    }\n    buildRule(rule, args, skip, inline = false) {\n        let expr = this.substituteArgs(rule.expr, args, rule.params);\n        let { name: nodeName, props, dynamicPrec, inline: explicitInline, group, exported } = this.nodeInfo(rule.props || none, inline ? \"pg\" : \"pgi\", rule.id.name, args, rule.params, rule.expr);\n        if (exported && rule.params.length)\n            this.warn(`Can't export parameterized rules`, rule.start);\n        if (exported && inline)\n            this.warn(`Can't export inline rule`, rule.start);\n        let name = this.newName(rule.id.name + (args.length ? \"<\" + args.join(\",\") + \">\" : \"\"), nodeName || true, props);\n        if (explicitInline)\n            name.inline = true;\n        if (dynamicPrec)\n            this.registerDynamicPrec(name, dynamicPrec);\n        if ((name.nodeType || exported) && rule.params.length == 0) {\n            if (!nodeName)\n                name.preserve = true;\n            if (!inline)\n                this.namedTerms[exported || rule.id.name] = name;\n        }\n        if (!inline)\n            this.built.push(new BuiltRule(rule.id.name, args, name));\n        this.currentSkip.push(skip);\n        this.defineRule(name, this.normalizeExpr(expr));\n        this.currentSkip.pop();\n        if (group)\n            this.definedGroups.push({ name, group, rule });\n        return name;\n    }\n    nodeInfo(props, \n    // p for dynamic precedence, d for dialect, i for inline, g for group, a for disabling the ignore test for default name\n    allow, defaultName = null, args = none, params = none, expr, defaultProps) {\n        let result = {};\n        let name = defaultName && (allow.indexOf(\"a\") > -1 || !ignored(defaultName)) && !/ /.test(defaultName) ? defaultName : null;\n        let dialect = null, dynamicPrec = 0, inline = false, group = null, exported = null;\n        for (let prop of props) {\n            if (!prop.at) {\n                if (!this.knownProps[prop.name]) {\n                    let builtin = [\"name\", \"dialect\", \"dynamicPrecedence\", \"export\", \"isGroup\"].includes(prop.name)\n                        ? ` (did you mean '@${prop.name}'?)` : \"\";\n                    this.raise(`Unknown prop name '${prop.name}'${builtin}`, prop.start);\n                }\n                result[prop.name] = this.finishProp(prop, args, params);\n            }\n            else if (prop.name == \"name\") {\n                name = this.finishProp(prop, args, params);\n                if (/ /.test(name))\n                    this.raise(`Node names cannot have spaces ('${name}')`, prop.start);\n            }\n            else if (prop.name == \"dialect\") {\n                if (allow.indexOf(\"d\") < 0)\n                    this.raise(\"Can't specify a dialect on non-token rules\", props[0].start);\n                if (prop.value.length != 1 && !prop.value[0].value)\n                    this.raise(\"The '@dialect' rule prop must hold a plain string value\");\n                let dialectID = this.dialects.indexOf(prop.value[0].value);\n                if (dialectID < 0)\n                    this.raise(`Unknown dialect '${prop.value[0].value}'`, prop.value[0].start);\n                dialect = dialectID;\n            }\n            else if (prop.name == \"dynamicPrecedence\") {\n                if (allow.indexOf(\"p\") < 0)\n                    this.raise(\"Dynamic precedence can only be specified on nonterminals\");\n                if (prop.value.length != 1 || !/^-?(?:10|\\d)$/.test(prop.value[0].value))\n                    this.raise(\"The '@dynamicPrecedence' rule prop must hold an integer between -10 and 10\");\n                dynamicPrec = +prop.value[0].value;\n            }\n            else if (prop.name == \"inline\") {\n                if (prop.value.length)\n                    this.raise(\"'@inline' doesn't take a value\", prop.value[0].start);\n                if (allow.indexOf(\"i\") < 0)\n                    this.raise(\"Inline can only be specified on nonterminals\");\n                inline = true;\n            }\n            else if (prop.name == \"isGroup\") {\n                if (allow.indexOf(\"g\") < 0)\n                    this.raise(\"'@isGroup' can only be specified on nonterminals\");\n                group = prop.value.length ? this.finishProp(prop, args, params) : defaultName;\n            }\n            else if (prop.name == \"export\") {\n                if (prop.value.length)\n                    exported = this.finishProp(prop, args, params);\n                else\n                    exported = defaultName;\n            }\n            else {\n                this.raise(`Unknown built-in prop name '@${prop.name}'`, prop.start);\n            }\n        }\n        if (expr && this.ast.autoDelim && (name || hasProps(result))) {\n            let delim = this.findDelimiters(expr);\n            if (delim) {\n                addToProp(delim[0], \"closedBy\", delim[1].nodeName);\n                addToProp(delim[1], \"openedBy\", delim[0].nodeName);\n            }\n        }\n        if (defaultProps && hasProps(defaultProps)) {\n            for (let prop in defaultProps)\n                if (!(prop in result))\n                    result[prop] = defaultProps[prop];\n        }\n        if (hasProps(result) && !name)\n            this.raise(`Node has properties but no name`, props.length ? props[0].start : expr.start);\n        if (inline && (hasProps(result) || dialect || dynamicPrec))\n            this.raise(`Inline nodes can't have props, dynamic precedence, or a dialect`, props[0].start);\n        if (inline && name)\n            name = null;\n        return { name, props: result, dialect, dynamicPrec, inline, group, exported };\n    }\n    finishProp(prop, args, params) {\n        return prop.value.map(part => {\n            if (part.value)\n                return part.value;\n            let pos = params.findIndex(param => param.name == part.name);\n            if (pos < 0)\n                this.raise(`Property refers to '${part.name}', but no parameter by that name is in scope`, part.start);\n            let expr = args[pos];\n            if (expr instanceof NameExpression && !expr.args.length)\n                return expr.id.name;\n            if (expr instanceof LiteralExpression)\n                return expr.value;\n            return this.raise(`Expression '${expr}' can not be used as part of a property value`, part.start);\n        }).join(\"\");\n    }\n    resolveSpecialization(expr) {\n        let type = expr.type;\n        let { name, props, dialect } = this.nodeInfo(expr.props, \"d\");\n        let terminal = this.normalizeExpr(expr.token);\n        if (terminal.length != 1 || terminal[0].terms.length != 1 || !terminal[0].terms[0].terminal)\n            this.raise(`The first argument to '${type}' must resolve to a token`, expr.token.start);\n        let values;\n        if (expr.content instanceof LiteralExpression)\n            values = [expr.content.value];\n        else if ((expr.content instanceof ChoiceExpression) && expr.content.exprs.every(e => e instanceof LiteralExpression))\n            values = expr.content.exprs.map(expr => expr.value);\n        else\n            return this.raise(`The second argument to '${expr.type}' must be a literal or choice of literals`, expr.content.start);\n        let term = terminal[0].terms[0], token = null;\n        let table = this.specialized[term.name] || (this.specialized[term.name] = []);\n        for (let value of values) {\n            let known = table.find(sp => sp.value == value);\n            if (known == null) {\n                if (!token) {\n                    token = this.makeTerminal(term.name + \"/\" + JSON.stringify(value), name, props);\n                    if (dialect != null)\n                        (this.tokens.byDialect[dialect] || (this.tokens.byDialect[dialect] = [])).push(token);\n                }\n                table.push({ value, term: token, type, dialect, name });\n                this.tokenOrigins[token.name] = { spec: term };\n            }\n            else {\n                if (known.type != type)\n                    this.raise(`Conflicting specialization types for ${JSON.stringify(value)} of ${term.name} (${type} vs ${known.type})`, expr.start);\n                if (known.dialect != dialect)\n                    this.raise(`Conflicting dialects for specialization ${JSON.stringify(value)} of ${term.name}`, expr.start);\n                if (known.name != name)\n                    this.raise(`Conflicting names for specialization ${JSON.stringify(value)} of ${term.name}`, expr.start);\n                if (token && known.term != token)\n                    this.raise(`Conflicting specialization tokens for ${JSON.stringify(value)} of ${term.name}`, expr.start);\n                token = known.term;\n            }\n        }\n        return token;\n    }\n    findDelimiters(expr) {\n        if (!(expr instanceof SequenceExpression) || expr.exprs.length < 2)\n            return null;\n        let findToken = (expr) => {\n            if (expr instanceof LiteralExpression)\n                return { term: this.tokens.getLiteral(expr), str: expr.value };\n            if (expr instanceof NameExpression && expr.args.length == 0) {\n                let rule = this.ast.rules.find(r => r.id.name == expr.id.name);\n                if (rule)\n                    return findToken(rule.expr);\n                let token = this.tokens.rules.find(r => r.id.name == expr.id.name);\n                if (token && token.expr instanceof LiteralExpression)\n                    return { term: this.tokens.getToken(expr), str: token.expr.value };\n            }\n            return null;\n        };\n        let lastToken = findToken(expr.exprs[expr.exprs.length - 1]);\n        if (!lastToken || !lastToken.term.nodeName)\n            return null;\n        const brackets = [\"()\", \"[]\", \"{}\", \"<>\"];\n        let bracket = brackets.find(b => lastToken.str.indexOf(b[1]) > -1 && lastToken.str.indexOf(b[0]) < 0);\n        if (!bracket)\n            return null;\n        let firstToken = findToken(expr.exprs[0]);\n        if (!firstToken || !firstToken.term.nodeName ||\n            firstToken.str.indexOf(bracket[0]) < 0 || firstToken.str.indexOf(bracket[1]) > -1)\n            return null;\n        return [firstToken.term, lastToken.term];\n    }\n    registerDynamicPrec(term, prec) {\n        this.dynamicRulePrecedences.push({ rule: term, prec });\n        term.preserve = true;\n    }\n    defineGroup(rule, group, ast) {\n        var _a;\n        let recur = [];\n        let getNamed = (rule) => {\n            if (rule.nodeName)\n                return [rule];\n            if (recur.includes(rule))\n                this.raise(`Rule '${ast.id.name}' cannot define a group because it contains a non-named recursive rule ('${rule.name}')`, ast.start);\n            let result = [];\n            recur.push(rule);\n            for (let r of this.rules)\n                if (r.name == rule) {\n                    let names = r.parts.map(getNamed).filter(x => x.length);\n                    if (names.length > 1)\n                        this.raise(`Rule '${ast.id.name}' cannot define a group because some choices produce multiple named nodes`, ast.start);\n                    if (names.length == 1)\n                        for (let n of names[0])\n                            result.push(n);\n                }\n            recur.pop();\n            return result;\n        };\n        for (let name of getNamed(rule))\n            name.props[\"group\"] = (((_a = name.props[\"group\"]) === null || _a === void 0 ? void 0 : _a.split(\" \")) || []).concat(group).sort().join(\" \");\n    }\n    checkGroups() {\n        let groups = Object.create(null), nodeNames = Object.create(null);\n        for (let term of this.terms.terms)\n            if (term.nodeName) {\n                nodeNames[term.nodeName] = true;\n                if (term.props[\"group\"])\n                    for (let group of term.props[\"group\"].split(\" \")) {\n                        (groups[group] || (groups[group] = [])).push(term);\n                    }\n            }\n        let names = Object.keys(groups);\n        for (let i = 0; i < names.length; i++) {\n            let name = names[i], terms = groups[name];\n            if (nodeNames[name])\n                this.warn(`Group name '${name}' conflicts with a node of the same name`);\n            for (let j = i + 1; j < names.length; j++) {\n                let other = groups[names[j]];\n                if (terms.some(t => other.includes(t)) &&\n                    (terms.length > other.length ? other.some(t => !terms.includes(t)) : terms.some(t => !other.includes(t))))\n                    this.warn(`Groups '${name}' and '${names[j]}' overlap without one being a superset of the other`);\n            }\n        }\n    }\n}\nconst MinSharedActions = 5;\nclass FinishStateContext {\n    constructor(tokenizers, data, stateArray, skipData, skipInfo, states, builder) {\n        this.tokenizers = tokenizers;\n        this.data = data;\n        this.stateArray = stateArray;\n        this.skipData = skipData;\n        this.skipInfo = skipInfo;\n        this.states = states;\n        this.builder = builder;\n        this.sharedActions = [];\n    }\n    findSharedActions(state) {\n        if (state.actions.length < MinSharedActions)\n            return null;\n        let found = null;\n        for (let shared of this.sharedActions) {\n            if ((!found || shared.actions.length > found.actions.length) &&\n                shared.actions.every(a => state.actions.some(b => b.eq(a))))\n                found = shared;\n        }\n        if (found)\n            return found;\n        let max = null, scratch = [];\n        for (let i = state.id + 1; i < this.states.length; i++) {\n            let other = this.states[i], fill = 0;\n            if (other.defaultReduce || other.actions.length < MinSharedActions)\n                continue;\n            for (let a of state.actions)\n                for (let b of other.actions)\n                    if (a.eq(b))\n                        scratch[fill++] = a;\n            if (fill >= MinSharedActions && (!max || max.length < fill)) {\n                max = scratch;\n                scratch = [];\n            }\n        }\n        if (!max)\n            return null;\n        let result = { actions: max, addr: this.storeActions(max, -1, null) };\n        this.sharedActions.push(result);\n        return result;\n    }\n    storeActions(actions, skipReduce, shared) {\n        if (skipReduce < 0 && shared && shared.actions.length == actions.length)\n            return shared.addr;\n        let data = [];\n        for (let action of actions) {\n            if (shared && shared.actions.some(a => a.eq(action)))\n                continue;\n            if (action instanceof Shift) {\n                data.push(action.term.id, action.target.id, 0);\n            }\n            else {\n                let code = reduceAction(action.rule, this.skipInfo);\n                if (code != skipReduce)\n                    data.push(action.term.id, code & 65535 /* Action.ValueMask */, code >> 16);\n            }\n        }\n        data.push(65535 /* Seq.End */);\n        if (skipReduce > -1)\n            data.push(2 /* Seq.Other */, skipReduce & 65535 /* Action.ValueMask */, skipReduce >> 16);\n        else if (shared)\n            data.push(1 /* Seq.Next */, shared.addr & 0xffff, shared.addr >> 16);\n        else\n            data.push(0 /* Seq.Done */);\n        return this.data.storeArray(data);\n    }\n    finish(state, isSkip, forcedReduce) {\n        let b = this.builder;\n        let skipID = b.skipRules.indexOf(state.skip);\n        let skipTable = this.skipData[skipID], skipTerms = this.skipInfo[skipID].startTokens;\n        let defaultReduce = state.defaultReduce ? reduceAction(state.defaultReduce, this.skipInfo) : 0;\n        let flags = isSkip ? 1 /* StateFlag.Skipped */ : 0;\n        let skipReduce = -1, shared = null;\n        if (defaultReduce == 0) {\n            if (isSkip)\n                for (const action of state.actions)\n                    if (action instanceof Reduce && action.term.eof)\n                        skipReduce = reduceAction(action.rule, this.skipInfo);\n            if (skipReduce < 0)\n                shared = this.findSharedActions(state);\n        }\n        if (state.set.some(p => p.rule.name.top && p.pos == p.rule.parts.length))\n            flags |= 2 /* StateFlag.Accepting */;\n        let external = [];\n        for (let i = 0; i < state.actions.length + skipTerms.length; i++) {\n            let term = i < state.actions.length ? state.actions[i].term : skipTerms[i - state.actions.length];\n            for (;;) {\n                let orig = b.tokenOrigins[term.name];\n                if (orig && orig.spec) {\n                    term = orig.spec;\n                    continue;\n                }\n                if (orig && (orig.external instanceof ExternalTokenSet))\n                    addToSet(external, orig.external);\n                break;\n            }\n        }\n        let tokenizerMask = 0;\n        for (let i = 0; i < this.tokenizers.length; i++) {\n            let tok = this.tokenizers[i];\n            if (external.includes(tok) || tok.groupID == state.tokenGroup)\n                tokenizerMask |= (1 << i);\n        }\n        let base = state.id * 6 /* ParseState.Size */;\n        this.stateArray[base + 0 /* ParseState.Flags */] = flags;\n        this.stateArray[base + 1 /* ParseState.Actions */] = this.storeActions(defaultReduce ? none : state.actions, skipReduce, shared);\n        this.stateArray[base + 2 /* ParseState.Skip */] = skipTable;\n        this.stateArray[base + 3 /* ParseState.TokenizerMask */] = tokenizerMask;\n        this.stateArray[base + 4 /* ParseState.DefaultReduce */] = defaultReduce;\n        this.stateArray[base + 5 /* ParseState.ForcedReduce */] = forcedReduce;\n    }\n}\nfunction addToProp(term, prop, value) {\n    let cur = term.props[prop];\n    if (!cur || cur.split(\" \").indexOf(value) < 0)\n        term.props[prop] = cur ? cur + \" \" + value : value;\n}\nfunction buildSpecializeTable(spec) {\n    let table = Object.create(null);\n    for (let { value, term, type } of spec) {\n        let code = type == \"specialize\" ? 0 /* Specialize.Specialize */ : 1 /* Specialize.Extend */;\n        table[value] = (term.id << 1) | code;\n    }\n    return table;\n}\nfunction reduceAction(rule, skipInfo, depth = rule.parts.length) {\n    return rule.name.id | 65536 /* Action.ReduceFlag */ |\n        (rule.isRepeatWrap && depth == rule.parts.length ? 131072 /* Action.RepeatFlag */ : 0) |\n        (skipInfo.some(i => i.rule == rule.name) ? 262144 /* Action.StayFlag */ : 0) |\n        (depth << 19 /* Action.ReduceDepthShift */);\n}\nfunction findArray(data, value) {\n    search: for (let i = 0;;) {\n        let next = data.indexOf(value[0], i);\n        if (next == -1 || next + value.length > data.length)\n            break;\n        for (let j = 1; j < value.length; j++) {\n            if (value[j] != data[next + j]) {\n                i = next + 1;\n                continue search;\n            }\n        }\n        return next;\n    }\n    return -1;\n}\nfunction findSkipStates(table, startRules) {\n    let nonSkip = Object.create(null);\n    let work = [];\n    let add = (state) => {\n        if (!nonSkip[state.id]) {\n            nonSkip[state.id] = true;\n            work.push(state);\n        }\n    };\n    for (let state of table)\n        if (state.startRule && startRules.includes(state.startRule))\n            add(state);\n    for (let i = 0; i < work.length; i++) {\n        for (let a of work[i].actions)\n            if (a instanceof Shift)\n                add(a.target);\n        for (let a of work[i].goto)\n            add(a.target);\n    }\n    return (id) => !nonSkip[id];\n}\nclass DataBuilder {\n    constructor() {\n        this.data = [];\n    }\n    storeArray(data) {\n        let found = findArray(this.data, data);\n        if (found > -1)\n            return found;\n        let pos = this.data.length;\n        for (let num of data)\n            this.data.push(num);\n        return pos;\n    }\n    finish() {\n        return Uint16Array.from(this.data);\n    }\n}\n// The goto table maps a start state + a term to a new state, and is\n// used to determine the new state when reducing. Because this allows\n// more more efficient representation and access, unlike the action\n// tables, the goto table is organized by term, with groups of start\n// states that map to a given end state enumerated for each term.\n// Since many terms only have a single valid goto target, this makes\n// it cheaper to look those up.\n//\n// (Unfortunately, though the standard LR parsing mechanism never\n// looks up invalid goto states, the incremental parsing mechanism\n// needs accurate goto information for a state/term pair, so we do\n// need to store state ids even for terms that have only one target.)\n//\n// - First comes the amount of terms in the table\n//\n// - Then, for each term, the offset of the term's data\n//\n// - At these offsets, there's a record for each target state\n//\n//   - Such a record starts with the amount of start states that go to\n//     this target state, shifted one to the left, with the first bit\n//     only set if this is the last record for this term.\n//\n//   - Then follows the target state id\n//\n//   - And then the start state ids\nfunction computeGotoTable(states) {\n    let goto = {};\n    let maxTerm = 0;\n    for (let state of states) {\n        for (let entry of state.goto) {\n            maxTerm = Math.max(entry.term.id, maxTerm);\n            let set = goto[entry.term.id] || (goto[entry.term.id] = {});\n            (set[entry.target.id] || (set[entry.target.id] = [])).push(state.id);\n        }\n    }\n    let data = new DataBuilder;\n    let index = [];\n    let offset = maxTerm + 2; // Offset of the data, taking index size into account\n    for (let term = 0; term <= maxTerm; term++) {\n        let entries = goto[term];\n        if (!entries) {\n            index.push(1);\n            continue;\n        }\n        let termTable = [];\n        let keys = Object.keys(entries);\n        for (let target of keys) {\n            let list = entries[target];\n            termTable.push((target == keys[keys.length - 1] ? 1 : 0) + (list.length << 1));\n            termTable.push(+target);\n            for (let source of list)\n                termTable.push(source);\n        }\n        index.push(data.storeArray(termTable) + offset);\n    }\n    if (index.some(n => n > 0xffff))\n        throw new GenError(\"Goto table too large\");\n    return Uint16Array.from([maxTerm + 1, ...index, ...data.data]);\n}\nclass TokenGroup {\n    constructor(tokens, groupID) {\n        this.tokens = tokens;\n        this.groupID = groupID;\n    }\n    create() { return this.groupID; }\n    createSource() { return String(this.groupID); }\n}\nfunction addToSet(set, value) {\n    if (!set.includes(value))\n        set.push(value);\n}\nfunction buildTokenMasks(groups) {\n    let masks = Object.create(null);\n    for (let group of groups) {\n        let groupMask = 1 << group.groupID;\n        for (let term of group.tokens) {\n            masks[term.id] = (masks[term.id] || 0) | groupMask;\n        }\n    }\n    return masks;\n}\nclass TokenArg {\n    constructor(name, expr, scope) {\n        this.name = name;\n        this.expr = expr;\n        this.scope = scope;\n    }\n}\nclass BuildingRule {\n    constructor(name, start, to, args) {\n        this.name = name;\n        this.start = start;\n        this.to = to;\n        this.args = args;\n    }\n}\nclass TokenSet {\n    constructor(b, ast) {\n        this.b = b;\n        this.ast = ast;\n        this.startState = new State$1;\n        this.built = [];\n        this.building = []; // Used for recursion check\n        this.byDialect = Object.create(null);\n        this.precedenceRelations = [];\n        this.rules = ast ? ast.rules : none;\n        for (let rule of this.rules)\n            b.unique(rule.id);\n    }\n    getToken(expr) {\n        for (let built of this.built)\n            if (built.matches(expr))\n                return built.term;\n        let name = expr.id.name;\n        let rule = this.rules.find(r => r.id.name == name);\n        if (!rule)\n            return null;\n        let { name: nodeName, props, dialect, exported } = this.b.nodeInfo(rule.props, \"d\", name, expr.args, rule.params.length != expr.args.length ? none : rule.params);\n        let term = this.b.makeTerminal(expr.toString(), nodeName, props);\n        if (dialect != null)\n            (this.byDialect[dialect] || (this.byDialect[dialect] = [])).push(term);\n        if ((term.nodeType || exported) && rule.params.length == 0) {\n            if (!term.nodeType)\n                term.preserve = true;\n            this.b.namedTerms[exported || name] = term;\n        }\n        this.buildRule(rule, expr, this.startState, new State$1([term]));\n        this.built.push(new BuiltRule(name, expr.args, term));\n        return term;\n    }\n    buildRule(rule, expr, from, to, args = none) {\n        let name = expr.id.name;\n        if (rule.params.length != expr.args.length)\n            this.b.raise(`Incorrect number of arguments for token '${name}'`, expr.start);\n        let building = this.building.find(b => b.name == name && exprsEq(expr.args, b.args));\n        if (building) {\n            if (building.to == to) {\n                from.nullEdge(building.start);\n                return;\n            }\n            let lastIndex = this.building.length - 1;\n            while (this.building[lastIndex].name != name)\n                lastIndex--;\n            this.b.raise(`Invalid (non-tail) recursion in token rules: ${this.building.slice(lastIndex).map(b => b.name).join(\" -> \")}`, expr.start);\n        }\n        this.b.used(rule.id.name);\n        let start = new State$1;\n        from.nullEdge(start);\n        this.building.push(new BuildingRule(name, start, to, expr.args));\n        this.build(this.b.substituteArgs(rule.expr, expr.args, rule.params), start, to, expr.args.map((e, i) => new TokenArg(rule.params[i].name, e, args)));\n        this.building.pop();\n    }\n    build(expr, from, to, args) {\n        if (expr instanceof NameExpression) {\n            let name = expr.id.name, arg = args.find(a => a.name == name);\n            if (arg)\n                return this.build(arg.expr, from, to, arg.scope);\n            let rule;\n            for (let i = 0, lt = this.b.localTokens; i <= lt.length; i++) {\n                let set = i == lt.length ? this.b.tokens : lt[i];\n                rule = set.rules.find(r => r.id.name == name);\n            }\n            if (!rule)\n                return this.b.raise(`Reference to token rule '${expr.id.name}', which isn't found`, expr.start);\n            this.buildRule(rule, expr, from, to, args);\n        }\n        else if (expr instanceof CharClass) {\n            for (let [a, b] of CharClasses[expr.type])\n                from.edge(a, b, to);\n        }\n        else if (expr instanceof ChoiceExpression) {\n            for (let choice of expr.exprs)\n                this.build(choice, from, to, args);\n        }\n        else if (isEmpty(expr)) {\n            from.nullEdge(to);\n        }\n        else if (expr instanceof SequenceExpression) {\n            let conflict = expr.markers.find(c => c.length > 0);\n            if (conflict)\n                this.b.raise(\"Conflict marker in token expression\", conflict[0].start);\n            for (let i = 0; i < expr.exprs.length; i++) {\n                let next = i == expr.exprs.length - 1 ? to : new State$1;\n                this.build(expr.exprs[i], from, next, args);\n                from = next;\n            }\n        }\n        else if (expr instanceof RepeatExpression) {\n            if (expr.kind == \"*\") {\n                let loop = new State$1;\n                from.nullEdge(loop);\n                this.build(expr.expr, loop, loop, args);\n                loop.nullEdge(to);\n            }\n            else if (expr.kind == \"+\") {\n                let loop = new State$1;\n                this.build(expr.expr, from, loop, args);\n                this.build(expr.expr, loop, loop, args);\n                loop.nullEdge(to);\n            }\n            else { // expr.kind == \"?\"\n                from.nullEdge(to);\n                this.build(expr.expr, from, to, args);\n            }\n        }\n        else if (expr instanceof SetExpression) {\n            for (let [a, b] of expr.inverted ? invertRanges(expr.ranges) : expr.ranges)\n                rangeEdges(from, to, a, b);\n        }\n        else if (expr instanceof LiteralExpression) {\n            for (let i = 0; i < expr.value.length; i++) {\n                let ch = expr.value.charCodeAt(i);\n                let next = i == expr.value.length - 1 ? to : new State$1;\n                from.edge(ch, ch + 1, next);\n                from = next;\n            }\n        }\n        else if (expr instanceof AnyExpression) {\n            let mid = new State$1;\n            from.edge(0, 0xDC00, to);\n            from.edge(0xDC00, MAX_CHAR + 1, to);\n            from.edge(0xD800, 0xDC00, mid);\n            mid.edge(0xDC00, 0xE000, to);\n        }\n        else {\n            return this.b.raise(`Unrecognized expression type in token`, expr.start);\n        }\n    }\n    takePrecedences() {\n        let rel = this.precedenceRelations = [];\n        if (this.ast)\n            for (let group of this.ast.precedences) {\n                let prev = [];\n                for (let item of group.items) {\n                    let level = [];\n                    if (item instanceof NameExpression) {\n                        for (let built of this.built)\n                            if (item.args.length ? built.matches(item) : built.id == item.id.name)\n                                level.push(built.term);\n                    }\n                    else {\n                        let id = JSON.stringify(item.value), found = this.built.find(b => b.id == id);\n                        if (found)\n                            level.push(found.term);\n                    }\n                    if (!level.length)\n                        this.b.warn(`Precedence specified for unknown token ${item}`, item.start);\n                    for (let term of level)\n                        addRel(rel, term, prev);\n                    prev = prev.concat(level);\n                }\n            }\n    }\n    precededBy(a, b) {\n        let found = this.precedenceRelations.find(r => r.term == a);\n        return found && found.after.includes(b);\n    }\n    buildPrecTable(softConflicts) {\n        let precTable = [], rel = this.precedenceRelations.slice();\n        // Add entries for soft-conflicting tokens that are in the\n        // precedence table, to make sure they'll appear in the right\n        // order and don't mess up the longer-wins default rule.\n        for (let { a, b, soft } of softConflicts)\n            if (soft) {\n                if (!rel.some(r => r.term == a) || !rel.some(r => r.term == b))\n                    continue;\n                if (soft < 0)\n                    [a, b] = [b, a]; // Now a is longer than b (and should thus take precedence)\n                addRel(rel, b, [a]);\n                addRel(rel, a, []);\n            }\n        add: while (rel.length) {\n            for (let i = 0; i < rel.length; i++) {\n                let record = rel[i];\n                if (record.after.every(t => precTable.includes(t.id))) {\n                    precTable.push(record.term.id);\n                    if (rel.length == 1)\n                        break add;\n                    rel[i] = rel.pop();\n                    continue add;\n                }\n            }\n            this.b.raise(`Cyclic token precedence relation between ${rel.map(r => r.term).join(\", \")}`);\n        }\n        return precTable;\n    }\n}\nclass MainTokenSet extends TokenSet {\n    constructor() {\n        super(...arguments);\n        this.explicitConflicts = [];\n    }\n    getLiteral(expr) {\n        let id = JSON.stringify(expr.value);\n        for (let built of this.built)\n            if (built.id == id)\n                return built.term;\n        let name = null, props = {}, dialect = null, exported = null;\n        let decl = this.ast ? this.ast.literals.find(l => l.literal == expr.value) : null;\n        if (decl)\n            ({ name, props, dialect, exported } = this.b.nodeInfo(decl.props, \"da\", expr.value));\n        let term = this.b.makeTerminal(id, name, props);\n        if (dialect != null)\n            (this.byDialect[dialect] || (this.byDialect[dialect] = [])).push(term);\n        if (exported)\n            this.b.namedTerms[exported] = term;\n        this.build(expr, this.startState, new State$1([term]), none);\n        this.built.push(new BuiltRule(id, none, term));\n        return term;\n    }\n    takeConflicts() {\n        var _a;\n        let resolve = (expr) => {\n            if (expr instanceof NameExpression) {\n                for (let built of this.built)\n                    if (built.matches(expr))\n                        return built.term;\n            }\n            else {\n                let id = JSON.stringify(expr.value), found = this.built.find(b => b.id == id);\n                if (found)\n                    return found.term;\n            }\n            this.b.warn(`Precedence specified for unknown token ${expr}`, expr.start);\n            return null;\n        };\n        for (let c of ((_a = this.ast) === null || _a === void 0 ? void 0 : _a.conflicts) || []) {\n            let a = resolve(c.a), b = resolve(c.b);\n            if (a && b) {\n                if (a.id < b.id)\n                    [a, b] = [b, a];\n                this.explicitConflicts.push({ a, b });\n            }\n        }\n    }\n    // Token groups are a mechanism for allowing conflicting (matching\n    // overlapping input, without an explicit precedence being given)\n    // tokens to exist in a grammar _if_ they don't occur in the same\n    // place (aren't used in the same states).\n    //\n    // States that use tokens that conflict will raise an error when any\n    // of the conflicting pairs of tokens both occur in that state.\n    // Otherwise, they are assigned a token group, which includes all\n    // the potentially-conflicting tokens they use. If there's already a\n    // group that doesn't have any conflicts with those tokens, that is\n    // reused, otherwise a new group is created.\n    //\n    // So each state has zero or one token groups, and each conflicting\n    // token may belong to one or more groups. Tokens get assigned a\n    // 16-bit bitmask with the groups they belong to set to 1 (all-1s\n    // for non-conflicting tokens). When tokenizing, that mask is\n    // compared to the current state's group (again using all-1s for\n    // group-less states) to determine whether a token is applicable for\n    // this state.\n    //\n    // Extended/specialized tokens are treated as their parent token for\n    // this purpose.\n    buildTokenGroups(states, skipInfo, startID) {\n        let tokens = this.startState.compile();\n        if (tokens.accepting.length)\n            this.b.raise(`Grammar contains zero-length tokens (in '${tokens.accepting[0].name}')`, this.rules.find(r => r.id.name == tokens.accepting[0].name).start);\n        if (/\\btokens\\b/.test(verbose))\n            console.log(tokens.toString());\n        // If there is a precedence specified for the pair, the conflict is resolved\n        let allConflicts = tokens.findConflicts(checkTogether(states, this.b, skipInfo))\n            .filter(({ a, b }) => !this.precededBy(a, b) && !this.precededBy(b, a));\n        for (let { a, b } of this.explicitConflicts) {\n            if (!allConflicts.some(c => c.a == a && c.b == b))\n                allConflicts.push(new Conflict$1(a, b, 0, \"\", \"\"));\n        }\n        let softConflicts = allConflicts.filter(c => c.soft), conflicts = allConflicts.filter(c => !c.soft);\n        let errors = [];\n        let groups = [];\n        for (let state of states) {\n            if (state.defaultReduce || state.tokenGroup > -1)\n                continue;\n            // Find potentially-conflicting terms (in terms) and the things\n            // they conflict with (in conflicts), and raise an error if\n            // there's a token conflict directly in this state.\n            let terms = [], incompatible = [];\n            let skip = skipInfo[this.b.skipRules.indexOf(state.skip)].startTokens;\n            for (let term of skip)\n                if (state.actions.some(a => a.term == term))\n                    this.b.raise(`Use of token ${term.name} conflicts with skip rule`);\n            let stateTerms = [];\n            for (let i = 0; i < state.actions.length + (skip ? skip.length : 0); i++) {\n                let term = i < state.actions.length ? state.actions[i].term : skip[i - state.actions.length];\n                let orig = this.b.tokenOrigins[term.name];\n                if (orig && orig.spec)\n                    term = orig.spec;\n                else if (orig && orig.external)\n                    continue;\n                addToSet(stateTerms, term);\n            }\n            if (stateTerms.length == 0)\n                continue;\n            for (let term of stateTerms) {\n                for (let conflict of conflicts) {\n                    let conflicting = conflict.a == term ? conflict.b : conflict.b == term ? conflict.a : null;\n                    if (!conflicting)\n                        continue;\n                    if (stateTerms.includes(conflicting) && !errors.some(e => e.conflict == conflict)) {\n                        let example = conflict.exampleA ? ` (example: ${JSON.stringify(conflict.exampleA)}${conflict.exampleB ? ` vs ${JSON.stringify(conflict.exampleB)}` : \"\"})` : \"\";\n                        errors.push({\n                            error: `Overlapping tokens ${term.name} and ${conflicting.name} used in same context${example}\\n` +\n                                `After: ${state.set[0].trail()}`,\n                            conflict\n                        });\n                    }\n                    addToSet(terms, term);\n                    addToSet(incompatible, conflicting);\n                }\n            }\n            let tokenGroup = null;\n            for (let group of groups) {\n                if (incompatible.some(term => group.tokens.includes(term)))\n                    continue;\n                for (let term of terms)\n                    addToSet(group.tokens, term);\n                tokenGroup = group;\n                break;\n            }\n            if (!tokenGroup) {\n                tokenGroup = new TokenGroup(terms, groups.length + startID);\n                groups.push(tokenGroup);\n            }\n            state.tokenGroup = tokenGroup.groupID;\n        }\n        if (errors.length)\n            this.b.raise(errors.map(e => e.error).join(\"\\n\\n\"));\n        if (groups.length + startID > 16)\n            this.b.raise(`Too many different token groups (${groups.length}) to represent them as a 16-bit bitfield`);\n        let precTable = this.buildPrecTable(softConflicts);\n        return {\n            tokenGroups: groups,\n            tokenPrec: precTable,\n            tokenData: tokens.toArray(buildTokenMasks(groups), precTable)\n        };\n    }\n}\nclass LocalTokenSet extends TokenSet {\n    constructor(b, ast) {\n        super(b, ast);\n        this.fallback = null;\n        if (ast.fallback)\n            b.unique(ast.fallback.id);\n    }\n    getToken(expr) {\n        let term = null;\n        if (this.ast.fallback && this.ast.fallback.id.name == expr.id.name) {\n            if (expr.args.length)\n                this.b.raise(`Incorrect number of arguments for ${expr.id.name}`, expr.start);\n            if (!this.fallback) {\n                let { name: nodeName, props, exported } = this.b.nodeInfo(this.ast.fallback.props, \"\", expr.id.name, none, none);\n                let term = this.fallback = this.b.makeTerminal(expr.id.name, nodeName, props);\n                if (term.nodeType || exported) {\n                    if (!term.nodeType)\n                        term.preserve = true;\n                    this.b.namedTerms[exported || expr.id.name] = term;\n                }\n                this.b.used(expr.id.name);\n            }\n            term = this.fallback;\n        }\n        else {\n            term = super.getToken(expr);\n        }\n        if (term && !this.b.tokenOrigins[term.name])\n            this.b.tokenOrigins[term.name] = { group: this };\n        return term;\n    }\n    buildLocalGroup(states, skipInfo, id) {\n        let tokens = this.startState.compile();\n        if (tokens.accepting.length)\n            this.b.raise(`Grammar contains zero-length tokens (in '${tokens.accepting[0].name}')`, this.rules.find(r => r.id.name == tokens.accepting[0].name).start);\n        for (let { a, b, exampleA } of tokens.findConflicts(() => true)) {\n            if (!this.precededBy(a, b) && !this.precededBy(b, a))\n                this.b.raise(`Overlapping tokens ${a.name} and ${b.name} in local token group${exampleA ? ` (example: ${JSON.stringify(exampleA)})` : ''}`);\n        }\n        for (let state of states) {\n            if (state.defaultReduce)\n                continue;\n            // See if this state uses any of the tokens in this group, and\n            // if so, make sure it *only* uses tokens from this group.\n            let usesThis = null;\n            let usesOther = skipInfo[this.b.skipRules.indexOf(state.skip)].startTokens[0];\n            for (let { term } of state.actions) {\n                let orig = this.b.tokenOrigins[term.name];\n                if ((orig === null || orig === void 0 ? void 0 : orig.group) == this)\n                    usesThis = term;\n                else\n                    usesOther = term;\n            }\n            if (usesThis) {\n                if (usesOther)\n                    this.b.raise(`Tokens from a local token group used together with other tokens (${usesThis.name} with ${usesOther.name})`);\n                state.tokenGroup = id;\n            }\n        }\n        let precTable = this.buildPrecTable(none);\n        let tokenData = tokens.toArray({ [id]: 65535 /* Seq.End */ }, precTable);\n        let precOffset = tokenData.length;\n        let fullData = new Uint16Array(tokenData.length + precTable.length + 1);\n        fullData.set(tokenData, 0);\n        fullData.set(precTable, precOffset);\n        fullData[fullData.length - 1] = 65535 /* Seq.End */;\n        return {\n            groupID: id,\n            create: () => new LocalTokenGroup(fullData, precOffset, this.fallback ? this.fallback.id : undefined),\n            createSource: importName => `new ${importName(\"LocalTokenGroup\", \"@lezer/lr\")}(${encodeArray(fullData)}, ${precOffset}${this.fallback ? `, ${this.fallback.id}` : ''})`\n        };\n    }\n}\nfunction checkTogether(states, b, skipInfo) {\n    let cache = Object.create(null);\n    function hasTerm(state, term) {\n        return state.actions.some(a => a.term == term) ||\n            skipInfo[b.skipRules.indexOf(state.skip)].startTokens.includes(term);\n    }\n    return (a, b) => {\n        if (a.id < b.id)\n            [a, b] = [b, a];\n        let key = a.id | (b.id << 16), cached = cache[key];\n        if (cached != null)\n            return cached;\n        return cache[key] = states.some(state => hasTerm(state, a) && hasTerm(state, b));\n    };\n}\nfunction invertRanges(ranges) {\n    let pos = 0, result = [];\n    for (let [a, b] of ranges) {\n        if (a > pos)\n            result.push([pos, a]);\n        pos = b;\n    }\n    if (pos <= MAX_CODE)\n        result.push([pos, MAX_CODE + 1]);\n    return result;\n}\nconst ASTRAL = 0x10000, GAP_START = 0xd800, GAP_END = 0xe000, MAX_CODE = 0x10ffff;\nconst LOW_SURR_B = 0xdc00, HIGH_SURR_B = 0xdfff;\n// Create intermediate states for astral characters in a range, if\n// necessary, since the tokenizer acts on UTF16 characters\nfunction rangeEdges(from, to, low, hi) {\n    if (low < ASTRAL) {\n        if (low < GAP_START)\n            from.edge(low, Math.min(hi, GAP_START), to);\n        if (hi > GAP_END)\n            from.edge(Math.max(low, GAP_END), Math.min(hi, MAX_CHAR + 1), to);\n        low = ASTRAL;\n    }\n    if (hi <= ASTRAL)\n        return;\n    let lowStr = String.fromCodePoint(low), hiStr = String.fromCodePoint(hi - 1);\n    let lowA = lowStr.charCodeAt(0), lowB = lowStr.charCodeAt(1);\n    let hiA = hiStr.charCodeAt(0), hiB = hiStr.charCodeAt(1);\n    if (lowA == hiA) { // Share the first char code\n        let hop = new State$1;\n        from.edge(lowA, lowA + 1, hop);\n        hop.edge(lowB, hiB + 1, to);\n    }\n    else {\n        let midStart = lowA, midEnd = hiA;\n        if (lowB > LOW_SURR_B) {\n            midStart++;\n            let hop = new State$1;\n            from.edge(lowA, lowA + 1, hop);\n            hop.edge(lowB, HIGH_SURR_B + 1, to);\n        }\n        if (hiB < HIGH_SURR_B) {\n            midEnd--;\n            let hop = new State$1;\n            from.edge(hiA, hiA + 1, hop);\n            hop.edge(LOW_SURR_B, hiB + 1, to);\n        }\n        if (midStart <= midEnd) {\n            let hop = new State$1;\n            from.edge(midStart, midEnd + 1, hop);\n            hop.edge(LOW_SURR_B, HIGH_SURR_B + 1, to);\n        }\n    }\n}\nfunction isEmpty(expr) {\n    return expr instanceof SequenceExpression && expr.exprs.length == 0;\n}\nfunction gatherExtTokens(b, tokens) {\n    let result = Object.create(null);\n    for (let token of tokens) {\n        b.unique(token.id);\n        let { name, props, dialect } = b.nodeInfo(token.props, \"d\", token.id.name);\n        let term = b.makeTerminal(token.id.name, name, props);\n        if (dialect != null)\n            (b.tokens.byDialect[dialect] || (b.tokens.byDialect[dialect] = [])).push(term);\n        b.namedTerms[token.id.name] = result[token.id.name] = term;\n    }\n    return result;\n}\nfunction findExtToken(b, tokens, expr) {\n    let found = tokens[expr.id.name];\n    if (!found)\n        return null;\n    if (expr.args.length)\n        b.raise(\"External tokens cannot take arguments\", expr.args[0].start);\n    b.used(expr.id.name);\n    return found;\n}\nfunction addRel(rel, term, after) {\n    let found = rel.findIndex(r => r.term == term);\n    if (found < 0)\n        rel.push({ term, after });\n    else\n        rel[found] = { term, after: rel[found].after.concat(after) };\n}\nclass ExternalTokenSet {\n    constructor(b, ast) {\n        this.b = b;\n        this.ast = ast;\n        this.tokens = gatherExtTokens(b, ast.tokens);\n        for (let name in this.tokens)\n            this.b.tokenOrigins[this.tokens[name].name] = { external: this };\n    }\n    getToken(expr) { return findExtToken(this.b, this.tokens, expr); }\n    create() {\n        return this.b.options.externalTokenizer(this.ast.id.name, this.b.termTable);\n    }\n    createSource(importName) {\n        let { source, id: { name } } = this.ast;\n        return importName(name, source);\n    }\n}\nclass ExternalSpecializer {\n    constructor(b, ast) {\n        this.b = b;\n        this.ast = ast;\n        this.term = null;\n        this.tokens = gatherExtTokens(b, ast.tokens);\n    }\n    finish() {\n        let terms = this.b.normalizeExpr(this.ast.token);\n        if (terms.length != 1 || terms[0].terms.length != 1 || !terms[0].terms[0].terminal)\n            this.b.raise(`The token expression to '@external ${this.ast.type}' must resolve to a token`, this.ast.token.start);\n        this.term = terms[0].terms[0];\n        for (let name in this.tokens)\n            this.b.tokenOrigins[this.tokens[name].name] = { spec: this.term, external: this };\n    }\n    getToken(expr) { return findExtToken(this.b, this.tokens, expr); }\n}\nfunction inlineRules(rules, preserve) {\n    for (let pass = 0;; pass++) {\n        let inlinable = Object.create(null), found;\n        if (pass == 0)\n            for (let rule of rules) {\n                if (rule.name.inline && !inlinable[rule.name.name]) {\n                    let group = rules.filter(r => r.name == rule.name);\n                    if (group.some(r => r.parts.includes(rule.name)))\n                        continue;\n                    found = inlinable[rule.name.name] = group;\n                }\n            }\n        for (let i = 0; i < rules.length; i++) {\n            let rule = rules[i];\n            if (!rule.name.interesting && !rule.parts.includes(rule.name) && rule.parts.length < 3 &&\n                !preserve.includes(rule.name) &&\n                (rule.parts.length == 1 || rules.every(other => other.skip == rule.skip || !other.parts.includes(rule.name))) &&\n                !rule.parts.some(p => !!inlinable[p.name]) &&\n                !rules.some((r, j) => j != i && r.name == rule.name))\n                found = inlinable[rule.name.name] = [rule];\n        }\n        if (!found)\n            return rules;\n        let newRules = [];\n        for (let rule of rules) {\n            if (inlinable[rule.name.name])\n                continue;\n            if (!rule.parts.some(p => !!inlinable[p.name])) {\n                newRules.push(rule);\n                continue;\n            }\n            function expand(at, conflicts, parts) {\n                if (at == rule.parts.length) {\n                    newRules.push(new Rule(rule.name, parts, conflicts, rule.skip));\n                    return;\n                }\n                let next = rule.parts[at], replace = inlinable[next.name];\n                if (!replace) {\n                    expand(at + 1, conflicts.concat(rule.conflicts[at + 1]), parts.concat(next));\n                    return;\n                }\n                for (let r of replace)\n                    expand(at + 1, conflicts.slice(0, conflicts.length - 1)\n                        .concat(conflicts[at].join(r.conflicts[0]))\n                        .concat(r.conflicts.slice(1, r.conflicts.length - 1))\n                        .concat(rule.conflicts[at + 1].join(r.conflicts[r.conflicts.length - 1])), parts.concat(r.parts));\n            }\n            expand(0, [rule.conflicts[0]], []);\n        }\n        rules = newRules;\n    }\n}\nfunction mergeRules(rules) {\n    let merged = Object.create(null), found;\n    for (let i = 0; i < rules.length;) {\n        let groupStart = i;\n        let name = rules[i++].name;\n        while (i < rules.length && rules[i].name == name)\n            i++;\n        let size = i - groupStart;\n        if (name.interesting)\n            continue;\n        for (let j = i; j < rules.length;) {\n            let otherStart = j, otherName = rules[j++].name;\n            while (j < rules.length && rules[j].name == otherName)\n                j++;\n            if (j - otherStart != size || otherName.interesting)\n                continue;\n            let match = true;\n            for (let k = 0; k < size && match; k++) {\n                let a = rules[groupStart + k], b = rules[otherStart + k];\n                if (a.cmpNoName(b) != 0)\n                    match = false;\n            }\n            if (match)\n                found = merged[name.name] = otherName;\n        }\n    }\n    if (!found)\n        return rules;\n    let newRules = [];\n    for (let rule of rules)\n        if (!merged[rule.name.name]) {\n            newRules.push(rule.parts.every(p => !merged[p.name]) ? rule :\n                new Rule(rule.name, rule.parts.map(p => merged[p.name] || p), rule.conflicts, rule.skip));\n        }\n    return newRules;\n}\nfunction simplifyRules(rules, preserve) {\n    return mergeRules(inlineRules(rules, preserve));\n}\n/// Build an in-memory parser instance for a given grammar. This is\n/// mostly useful for testing. If your grammar uses external\n/// tokenizers, you'll have to provide the `externalTokenizer` option\n/// for the returned parser to be able to parse anything.\nfunction buildParser(text, options = {}) {\n    let builder = new Builder(text, options), parser = builder.getParser();\n    parser.termTable = builder.termTable;\n    return parser;\n}\nconst KEYWORDS = [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\",\n    \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"while\", \"with\",\n    \"null\", \"true\", \"false\", \"instanceof\", \"typeof\", \"void\", \"delete\", \"new\", \"in\", \"this\",\n    \"const\", \"class\", \"extends\", \"export\", \"import\", \"super\", \"enum\", \"implements\", \"interface\",\n    \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\", \"require\"];\n/// Build the code that represents the parser tables for a given\n/// grammar description. The `parser` property in the return value\n/// holds the main file that exports the `Parser` instance. The\n/// `terms` property holds a declaration file that defines constants\n/// for all of the named terms in grammar, holding their ids as value.\n/// This is useful when external code, such as a tokenizer, needs to\n/// be able to use these ids. It is recommended to run a tree-shaking\n/// bundler when importing this file, since you usually only need a\n/// handful of the many terms in your code.\nfunction buildParserFile(text, options = {}) {\n    return new Builder(text, options).getParserFile();\n}\nfunction ignored(name) {\n    let first = name[0];\n    return first == \"_\" || first.toUpperCase() != first;\n}\nfunction isExported(rule) {\n    return rule.props.some(p => p.at && p.name == \"export\");\n}\n\nexport { GenError, buildParser, buildParserFile };\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { defaultHighlightStyle, HighlightStyle, syntaxHighlighting } from '@codemirror/language';\nimport { EditorView } from '@codemirror/view';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { tags as t } from '@lezer/highlight';\nexport const jupyterEditorTheme = EditorView.theme({\n    /**\n     * CodeMirror themes are handling the background/color in this way. This works\n     * fine for CodeMirror editors outside the notebook, but the notebook styles\n     * these things differently.\n     */\n    '&': {\n        background: 'var(--jp-layout-color0)',\n        color: 'var(--jp-content-font-color1)'\n    },\n    /* In the notebook, we want this styling to be handled by its container */\n    '.jp-CodeConsole &, .jp-Notebook &': {\n        background: 'transparent'\n    },\n    '.cm-content': {\n        caretColor: 'var(--jp-editor-cursor-color)'\n    },\n    /* Inherit font family from .cm-editor */\n    '.cm-scroller': {\n        fontFamily: 'inherit'\n    },\n    '.cm-cursor, .cm-dropCursor': {\n        borderLeft: 'var(--jp-code-cursor-width0) solid var(--jp-editor-cursor-color)'\n    },\n    '.cm-selectionBackground, .cm-content ::selection': {\n        backgroundColor: 'var(--jp-editor-selected-background)'\n    },\n    '&.cm-focused .cm-selectionBackground': {\n        backgroundColor: 'var(--jp-editor-selected-focused-background)'\n    },\n    '.cm-gutters': {\n        borderRight: '1px solid var(--jp-border-color2)',\n        backgroundColor: 'var(--jp-layout-color2)'\n    },\n    '.cm-gutter, .cm-activeLine': {\n        backgroundColor: 'var(--jp-layout-color2)'\n    },\n    '.cm-lineNumbers': {\n        color: 'var(--jp-ui-font-color2)'\n    },\n    '.cm-searchMatch': {\n        backgroundColor: 'var(--jp-search-unselected-match-background-color)',\n        color: 'var(--jp-search-unselected-match-color)'\n    },\n    '.cm-searchMatch.cm-searchMatch-selected': {\n        backgroundColor: 'var(--jp-search-selected-match-background-color) !important',\n        color: 'var(--jp-search-selected-match-color) !important'\n    }\n});\n// The list of available tags for syntax highlighting is available at\n// https://lezer.codemirror.net/docs/ref/#highlight.tags\nexport const jupyterHighlightStyle = HighlightStyle.define([\n    // Order matters - a rule will override the previous ones; important for example for in headings styles.\n    { tag: t.meta, color: 'var(--jp-mirror-editor-meta-color)' },\n    { tag: t.heading, color: 'var(--jp-mirror-editor-header-color)' },\n    {\n        tag: [t.heading1, t.heading2, t.heading3, t.heading4],\n        color: 'var(--jp-mirror-editor-header-color)',\n        fontWeight: 'bold'\n    },\n    {\n        tag: t.keyword,\n        color: 'var(--jp-mirror-editor-keyword-color)',\n        fontWeight: 'bold'\n    },\n    { tag: t.atom, color: 'var(--jp-mirror-editor-atom-color)' },\n    { tag: t.number, color: 'var(--jp-mirror-editor-number-color)' },\n    {\n        tag: [t.definition(t.name), t.function(t.definition(t.variableName))],\n        color: 'var(--jp-mirror-editor-def-color)'\n    },\n    {\n        tag: t.standard(t.variableName),\n        color: 'var(--jp-mirror-editor-builtin-color)'\n    },\n    {\n        tag: [t.special(t.variableName), t.self],\n        color: 'var(--jp-mirror-editor-variable-2-color)'\n    },\n    { tag: t.punctuation, color: 'var(--jp-mirror-editor-punctuation-color)' },\n    { tag: t.propertyName, color: 'var(--jp-mirror-editor-property-color)' },\n    {\n        tag: t.operator,\n        color: 'var(--jp-mirror-editor-operator-color)',\n        fontWeight: 'bold'\n    },\n    {\n        tag: t.comment,\n        color: 'var(--jp-mirror-editor-comment-color)',\n        fontStyle: 'italic'\n    },\n    { tag: t.string, color: 'var(--jp-mirror-editor-string-color)' },\n    {\n        tag: [t.labelName, t.monospace, t.special(t.string)],\n        color: 'var(--jp-mirror-editor-string-2-color)'\n    },\n    { tag: t.bracket, color: 'var(--jp-mirror-editor-bracket-color)' },\n    { tag: t.tagName, color: 'var(--jp-mirror-editor-tag-color)' },\n    { tag: t.attributeName, color: 'var(--jp-mirror-editor-attribute-color)' },\n    { tag: t.quote, color: 'var(--jp-mirror-editor-quote-color)' },\n    {\n        tag: t.link,\n        color: 'var(--jp-mirror-editor-link-color)',\n        textDecoration: 'underline'\n    },\n    { tag: [t.separator, t.derefOperator, t.paren], color: '' },\n    { tag: t.strong, fontWeight: 'bold' },\n    { tag: t.emphasis, fontStyle: 'italic' },\n    { tag: t.strikethrough, textDecoration: 'line-through' },\n    {\n        tag: t.bool,\n        color: 'var(--jp-mirror-editor-keyword-color)',\n        fontWeight: 'bold'\n    }\n]);\n/**\n * JupyterLab CodeMirror 6 theme\n */\nexport const jupyterTheme = [\n    jupyterEditorTheme,\n    syntaxHighlighting(jupyterHighlightStyle)\n];\n/**\n * CodeMirror 6 theme registry\n */\nexport class EditorThemeRegistry {\n    constructor() {\n        /**\n         * CodeMirror 6 themes\n         */\n        this._themeMap = new Map([\n            ['jupyter', Object.freeze({ name: 'jupyter', theme: jupyterTheme })]\n        ]);\n    }\n    /**\n     * Get all themes\n     */\n    get themes() {\n        return Array.from(this._themeMap.values());\n    }\n    /**\n     * Get the default CodeMirror 6 theme for JupyterLab\n     *\n     * @returns Default theme\n     */\n    defaultTheme() {\n        return this._themeMap.get('jupyter').theme;\n    }\n    /**\n     * Register a new theme.\n     *\n     * @param theme Codemirror 6 theme\n     */\n    addTheme(theme) {\n        if (this._themeMap.has(theme.name)) {\n            throw new Error(`A theme named '${theme.name}' is already registered.`);\n        }\n        this._themeMap.set(theme.name, { displayName: theme.name, ...theme });\n    }\n    /**\n     * Get a theme.\n     *\n     * #### Notes\n     * It falls back to the default theme\n     *\n     * @param name Theme name\n     * @returns Theme extension\n     */\n    getTheme(name) {\n        var _a;\n        const ext = (_a = this._themeMap.get(name)) === null || _a === void 0 ? void 0 : _a.theme;\n        return ext !== null && ext !== void 0 ? ext : this.defaultTheme();\n    }\n}\n/**\n * EditorThemeRegistry namespace\n */\n(function (EditorThemeRegistry) {\n    /**\n     * Get the default editor themes.\n     *\n     * @param translator Application translator\n     * @returns Default CodeMirror 6 themes\n     */\n    function getDefaultThemes(translator) {\n        const trans = (translator !== null && translator !== void 0 ? translator : nullTranslator).load('jupyterlab');\n        return [\n            Object.freeze({\n                name: 'codemirror',\n                displayName: trans.__('codemirror'),\n                theme: [\n                    EditorView.baseTheme({}),\n                    syntaxHighlighting(defaultHighlightStyle)\n                ]\n            })\n        ];\n    }\n    EditorThemeRegistry.getDefaultThemes = getDefaultThemes;\n})(EditorThemeRegistry || (EditorThemeRegistry = {}));\n//# sourceMappingURL=theme.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { LanguageDescription, LanguageSupport, LRLanguage, StreamLanguage } from '@codemirror/language';\nimport { IEditorMimeTypeService } from '@jupyterlab/codeeditor';\nimport { PathExt } from '@jupyterlab/coreutils';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { buildParser } from '@lezer/generator';\nimport { highlightTree } from '@lezer/highlight';\nimport { jupyterHighlightStyle } from './theme';\n/**\n * CodeMirror language registry\n */\nexport class EditorLanguageRegistry {\n    constructor() {\n        this._modeList = [];\n        // Add default language text/plain -> No expressions to parse\n        this.addLanguage({\n            name: 'none',\n            mime: 'text/plain',\n            support: new LanguageSupport(\n            // Create a dummy parser that as no expression to parse\n            LRLanguage.define({ parser: buildParser('@top Program { }') }))\n        });\n    }\n    /**\n     * Register a new language for CodeMirror\n     *\n     * @param language Language to register\n     */\n    addLanguage(language) {\n        var _a;\n        const info = (_a = this.findByName(language.name)) !== null && _a !== void 0 ? _a : this.findByMIME(language.mime, true);\n        if (info) {\n            throw new Error(`${language.mime} already registered`);\n        }\n        this._modeList.push(this.makeSpec(language));\n    }\n    /**\n     * Ensure a codemirror mode is available by name or Codemirror spec.\n     *\n     * @param language - The mode to ensure.  If it is a string, uses [findBest]\n     *   to get the appropriate spec.\n     *\n     * @returns A promise that resolves when the mode is available.\n     */\n    async getLanguage(language) {\n        const spec = this.findBest(language);\n        if (spec && !spec.support) {\n            spec.support = await spec.load();\n        }\n        return spec;\n    }\n    /**\n     * Get the raw list of available modes specs.\n     *\n     * @returns The available modes\n     */\n    getLanguages() {\n        return [...this._modeList];\n    }\n    /**\n     * Find a codemirror mode by MIME.\n     *\n     * @param mime Mime type to look for\n     * @param strict Whether xml and json should be assimilated to the generic mimetype\n     * @returns The mode or null\n     */\n    findByMIME(mime, strict = false) {\n        if (Array.isArray(mime)) {\n            for (let i = 0; i < mime.length; i++) {\n                const spec = this.findByMIME(mime[i]);\n                if (spec)\n                    return spec;\n            }\n            return null;\n        }\n        mime = mime.toLowerCase();\n        for (let i = 0; i < this._modeList.length; i++) {\n            let info = this._modeList[i];\n            if (Array.isArray(info.mime)) {\n                for (let j = 0; j < info.mime.length; j++) {\n                    if (info.mime[j] == mime) {\n                        return info;\n                    }\n                }\n            }\n            else if (info.mime == mime) {\n                return info;\n            }\n        }\n        if (!strict) {\n            if (/\\+xml$/.test(mime))\n                return this.findByMIME('application/xml');\n            if (/\\+json$/.test(mime))\n                return this.findByMIME('application/json');\n        }\n        return null;\n    }\n    /**\n     * Find a codemirror mode by name.\n     *\n     * @param name The mode name\n     * @returns The mode or null\n     */\n    findByName(name) {\n        name = name.toLowerCase();\n        for (let i = 0; i < this._modeList.length; i++) {\n            let info = this._modeList[i];\n            if (info.name.toLowerCase() == name)\n                return info;\n            if (info.alias) {\n                for (let j = 0; j < info.alias.length; j++) {\n                    if (info.alias[j].toLowerCase() == name) {\n                        return info;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Find a codemirror mode by extension.\n     *\n     * @param ext The extension name\n     * @returns The mode or null\n     */\n    findByExtension(ext) {\n        if (Array.isArray(ext)) {\n            for (let i = 0; i < ext.length; i++) {\n                const spec = this.findByExtension(ext[i]);\n                if (spec)\n                    return spec;\n            }\n            return null;\n        }\n        ext = ext.toLowerCase();\n        for (let i = 0; i < this._modeList.length; i++) {\n            let info = this._modeList[i];\n            for (let j = 0; j < info.extensions.length; j++) {\n                if (info.extensions[j].toLowerCase() == ext) {\n                    return info;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Find a codemirror mode by filename.\n     *\n     * @param name File name\n     * @returns The mode or null\n     */\n    findByFileName(name) {\n        const basename = PathExt.basename(name);\n        for (let i = 0; i < this._modeList.length; i++) {\n            let info = this._modeList[i];\n            if (info.filename && info.filename.test(basename)) {\n                return info;\n            }\n        }\n        let dot = basename.lastIndexOf('.');\n        let ext = dot > -1 && basename.substring(dot + 1, basename.length);\n        if (ext) {\n            return this.findByExtension(ext);\n        }\n        return null;\n    }\n    /**\n     * Find a codemirror mode by name or CodeMirror spec.\n     *\n     * @param language The CodeMirror mode\n     * @param fallback Whether to fallback to default mimetype spec or not\n     * @returns The mode or null\n     */\n    findBest(language, fallback = true) {\n        var _a, _b, _c, _d;\n        const modename = typeof language === 'string' ? language : language.name;\n        const mimetype = typeof language !== 'string' ? language.mime : modename;\n        const ext = typeof language !== 'string' ? (_a = language.extensions) !== null && _a !== void 0 ? _a : [] : [];\n        return ((_d = (_c = (_b = (modename ? this.findByName(modename) : null)) !== null && _b !== void 0 ? _b : (mimetype ? this.findByMIME(mimetype) : null)) !== null && _c !== void 0 ? _c : this.findByExtension(ext)) !== null && _d !== void 0 ? _d : (fallback\n            ? this.findByMIME(IEditorMimeTypeService.defaultMimeType)\n            : null));\n    }\n    /**\n     * Parse and style a string.\n     *\n     * @param code Code to highlight\n     * @param language Code language\n     * @param el HTML element into which the highlighted code will be inserted\n     */\n    async highlight(code, language, el) {\n        var _a;\n        if (language) {\n            await this.getLanguage(language);\n        }\n        const language_ = (_a = language === null || language === void 0 ? void 0 : language.support) === null || _a === void 0 ? void 0 : _a.language;\n        if (!language_) {\n            el.appendChild(document.createTextNode(code));\n            return;\n        }\n        const tree = language_.parser.parse(code);\n        // position state required because unstyled tokens are not emitted\n        // in highlightTree\n        let pos = 0;\n        highlightTree(tree, jupyterHighlightStyle, (from, to, classes) => {\n            if (from > pos) {\n                // No style applied to the token between pos and from\n                el.appendChild(document.createTextNode(code.slice(pos, from)));\n            }\n            const sp = el.appendChild(document.createElement('span'));\n            sp.className = classes;\n            sp.appendChild(document.createTextNode(code.slice(from, to)));\n            pos = to;\n        });\n        if (pos < tree.length - 1) {\n            // No style applied on the trailing text\n            el.appendChild(document.createTextNode(code.slice(pos, tree.length)));\n        }\n    }\n    // Code mirror uses two similar structures, a plain object with optional fields,\n    // and a class with the same fields but all mandatory. Maybe adopting the same\n    // pattern would be less confusing (although far more verbose)\n    makeSpec(spec) {\n        let res = LanguageDescription.of(spec);\n        // CodeMirror does not store/use mime type of a language\n        res.mime = spec.mime;\n        res.displayName = spec.displayName;\n        return res;\n    }\n}\n/**\n * EditorLanguageRegistry namespace\n */\n(function (EditorLanguageRegistry) {\n    /**\n     * Convert an CodeMirror 5 language parser to CodeMirror 6\n     *\n     * @param parser Legacy parser\n     * @returns Language object\n     */\n    function legacy(parser) {\n        return new LanguageSupport(StreamLanguage.define(parser));\n    }\n    EditorLanguageRegistry.legacy = legacy;\n    /**\n     * Create a dialect of SQL\n     *\n     * @param dialectName SQL dialect\n     * @returns Language object\n     */\n    async function sql(dialectName) {\n        const m = await import('@codemirror/lang-sql');\n        return m.sql({ dialect: m[dialectName] });\n    }\n    /**\n     * Get the default editor languages\n     *\n     * @param translator Application translator\n     * @returns Default CodeMirror 6 languages\n     */\n    function getDefaultLanguages(translator) {\n        const trans = (translator !== null && translator !== void 0 ? translator : nullTranslator).load('jupyterlab');\n        return [\n            {\n                name: 'C',\n                displayName: trans.__('C'),\n                mime: 'text/x-csrc',\n                extensions: ['c', 'h', 'ino'],\n                async load() {\n                    const m = await import('@codemirror/lang-cpp');\n                    return m.cpp();\n                }\n            },\n            {\n                name: 'C++',\n                displayName: trans.__('C++'),\n                mime: 'text/x-c++src',\n                extensions: ['cpp', 'c++', 'cc', 'cxx', 'hpp', 'h++', 'hh', 'hxx'],\n                async load() {\n                    const m = await import('@codemirror/lang-cpp');\n                    return m.cpp();\n                }\n            },\n            {\n                name: 'CQL',\n                displayName: trans.__('CQL'),\n                mime: 'text/x-cassandra',\n                extensions: ['cql'],\n                load() {\n                    return sql('Cassandra');\n                }\n            },\n            {\n                name: 'CSS',\n                displayName: trans.__('CSS'),\n                mime: 'text/css',\n                extensions: ['css'],\n                async load() {\n                    const m = await import('@codemirror/lang-css');\n                    return m.css();\n                }\n            },\n            {\n                name: 'HTML',\n                displayName: trans.__('HTML'),\n                alias: ['xhtml'],\n                mime: 'text/html',\n                extensions: ['html', 'htm', 'handlebars', 'hbs'],\n                async load() {\n                    const m = await import('@codemirror/lang-html');\n                    return m.html();\n                }\n            },\n            {\n                name: 'Java',\n                displayName: trans.__('Java'),\n                mime: 'text/x-java',\n                extensions: ['java'],\n                async load() {\n                    const m = await import('@codemirror/lang-java');\n                    return m.java();\n                }\n            },\n            {\n                name: 'Javascript',\n                displayName: trans.__('Javascript'),\n                alias: ['ecmascript', 'js', 'node'],\n                mime: [\n                    'text/javascript',\n                    'text/ecmascript',\n                    'application/javascript',\n                    'application/x-javascript',\n                    'application/ecmascript'\n                ],\n                extensions: ['js', 'mjs', 'cjs'],\n                async load() {\n                    const m = await import('@codemirror/lang-javascript');\n                    return m.javascript();\n                }\n            },\n            {\n                name: 'JSON',\n                displayName: trans.__('JSON'),\n                alias: ['json5'],\n                mime: ['application/json', 'application/x-json'],\n                extensions: ['json', 'map'],\n                async load() {\n                    const m = await import('@codemirror/lang-json');\n                    return m.json();\n                }\n            },\n            {\n                name: 'JSX',\n                displayName: trans.__('JSX'),\n                mime: 'text/jsx',\n                extensions: ['jsx'],\n                async load() {\n                    const m = await import('@codemirror/lang-javascript');\n                    return m.javascript({ jsx: true });\n                }\n            },\n            {\n                name: 'MariaDB SQL',\n                displayName: trans.__('MariaDB SQL'),\n                mime: 'text/x-mariadb',\n                load() {\n                    return sql('MariaSQL');\n                }\n            },\n            {\n                name: 'Markdown',\n                displayName: trans.__('Markdown'),\n                mime: 'text/x-markdown',\n                extensions: ['md', 'markdown', 'mkd'],\n                async load() {\n                    const m = await import('@codemirror/lang-markdown');\n                    return m.markdown({ codeLanguages: this._modeList });\n                }\n            },\n            {\n                name: 'MS SQL',\n                displayName: trans.__('MS SQL'),\n                mime: 'text/x-mssql',\n                load() {\n                    return sql('MSSQL');\n                }\n            },\n            {\n                name: 'MySQL',\n                displayName: trans.__('MySQL'),\n                mime: 'text/x-mysql',\n                load() {\n                    return sql('MySQL');\n                }\n            },\n            {\n                name: 'PHP',\n                displayName: trans.__('PHP'),\n                mime: [\n                    'text/x-php',\n                    'application/x-httpd-php',\n                    'application/x-httpd-php-open'\n                ],\n                extensions: ['php', 'php3', 'php4', 'php5', 'php7', 'phtml'],\n                async load() {\n                    const m = await import('@codemirror/lang-php');\n                    return m.php();\n                }\n            },\n            {\n                name: 'PLSQL',\n                displayName: trans.__('PLSQL'),\n                mime: 'text/x-plsql',\n                extensions: ['pls'],\n                load() {\n                    return sql('PLSQL');\n                }\n            },\n            {\n                name: 'PostgreSQL',\n                displayName: trans.__('PostgreSQL'),\n                mime: 'text/x-pgsql',\n                load() {\n                    return sql('PostgreSQL');\n                }\n            },\n            {\n                name: 'Python',\n                displayName: trans.__('Python'),\n                mime: 'text/x-python',\n                extensions: ['BUILD', 'bzl', 'py', 'pyw'],\n                filename: /^(BUCK|BUILD)$/,\n                async load() {\n                    const m = await import('@codemirror/lang-python');\n                    return m.python();\n                }\n            },\n            {\n                name: 'ipython',\n                displayName: trans.__('ipython'),\n                mime: 'text/x-ipython',\n                async load() {\n                    // FIXME Restore '?' operator - using the default python LanguageSupport allows\n                    // to activate feature such as code folding.\n                    // return Promise.resolve(legacy(mkPython({ singleOperators: /\\?/ })));\n                    const m = await import('@codemirror/lang-python');\n                    return m.python();\n                }\n            },\n            {\n                name: 'Rust',\n                displayName: trans.__('Rust'),\n                mime: 'text/x-rustsrc',\n                extensions: ['rs'],\n                async load() {\n                    const m = await import('@codemirror/lang-rust');\n                    return m.rust();\n                }\n            },\n            {\n                name: 'SQL',\n                displayName: trans.__('SQL'),\n                mime: 'text/x-sql',\n                extensions: ['sql'],\n                load() {\n                    return sql('StandardSQL');\n                }\n            },\n            {\n                name: 'SQLite',\n                displayName: trans.__('SQLite'),\n                mime: 'text/x-sqlite',\n                load() {\n                    return sql('SQLite');\n                }\n            },\n            {\n                name: 'TSX',\n                displayName: trans.__('TSX'),\n                alias: ['TypeScript-JSX'],\n                mime: 'text/typescript-jsx',\n                extensions: ['tsx'],\n                async load() {\n                    const m = await import('@codemirror/lang-javascript');\n                    return m.javascript({ jsx: true, typescript: true });\n                }\n            },\n            {\n                name: 'TypeScript',\n                displayName: trans.__('TypeScript'),\n                alias: ['ts'],\n                mime: 'application/typescript',\n                extensions: ['ts'],\n                async load() {\n                    const m = await import('@codemirror/lang-javascript');\n                    return m.javascript({ typescript: true });\n                }\n            },\n            {\n                name: 'WebAssembly',\n                displayName: trans.__('WebAssembly'),\n                mime: 'text/webassembly',\n                extensions: ['wat', 'wast'],\n                async load() {\n                    const m = await import('@codemirror/lang-wast');\n                    return m.wast();\n                }\n            },\n            {\n                name: 'XML',\n                displayName: trans.__('XML'),\n                alias: ['rss', 'wsdl', 'xsd'],\n                mime: ['application/xml', 'text/xml'],\n                extensions: ['xml', 'xsl', 'xsd', 'svg'],\n                async load() {\n                    const m = await import('@codemirror/lang-xml');\n                    return m.xml();\n                }\n            },\n            // Legacy modes ported from CodeMirror 5\n            {\n                name: 'APL',\n                displayName: trans.__('APL'),\n                mime: 'text/apl',\n                extensions: ['dyalog', 'apl'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/apl');\n                    return legacy(m.apl);\n                }\n            },\n            {\n                name: 'PGP',\n                displayName: trans.__('PGP'),\n                alias: ['asciiarmor'],\n                mime: [\n                    'application/pgp',\n                    'application/pgp-encrypted',\n                    'application/pgp-keys',\n                    'application/pgp-signature'\n                ],\n                extensions: ['asc', 'pgp', 'sig'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/asciiarmor');\n                    return legacy(m.asciiArmor);\n                }\n            },\n            {\n                name: 'ASN.1',\n                displayName: trans.__('ASN.1'),\n                mime: 'text/x-ttcn-asn',\n                extensions: ['asn', 'asn1'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/asn1');\n                    return legacy(m.asn1({}));\n                }\n            },\n            {\n                name: 'Asterisk',\n                displayName: trans.__('Asterisk'),\n                mime: 'text/x-asterisk',\n                filename: /^extensions\\.conf$/i,\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/asterisk');\n                    return legacy(m.asterisk);\n                }\n            },\n            {\n                name: 'Brainfuck',\n                displayName: trans.__('Brainfuck'),\n                mime: 'text/x-brainfuck',\n                extensions: ['b', 'bf'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/brainfuck');\n                    return legacy(m.brainfuck);\n                }\n            },\n            {\n                name: 'Cobol',\n                displayName: trans.__('Cobol'),\n                mime: 'text/x-cobol',\n                extensions: ['cob', 'cpy'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/cobol');\n                    return legacy(m.cobol);\n                }\n            },\n            {\n                name: 'C#',\n                displayName: trans.__('C#'),\n                alias: ['csharp', 'cs'],\n                mime: 'text/x-csharp',\n                extensions: ['cs'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/clike');\n                    return legacy(m.csharp);\n                }\n            },\n            {\n                name: 'Clojure',\n                displayName: trans.__('Clojure'),\n                mime: 'text/x-clojure',\n                extensions: ['clj', 'cljc', 'cljx'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/clojure');\n                    return legacy(m.clojure);\n                }\n            },\n            {\n                name: 'ClojureScript',\n                displayName: trans.__('ClojureScript'),\n                mime: 'text/x-clojurescript',\n                extensions: ['cljs'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/clojure');\n                    return legacy(m.clojure);\n                }\n            },\n            {\n                name: 'Closure Stylesheets (GSS)',\n                displayName: trans.__('Closure Stylesheets (GSS)'),\n                mime: 'text/x-gss',\n                extensions: ['gss'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/css');\n                    return legacy(m.gss);\n                }\n            },\n            {\n                name: 'CMake',\n                displayName: trans.__('CMake'),\n                mime: 'text/x-cmake',\n                extensions: ['cmake', 'cmake.in'],\n                filename: /^CMakeLists\\.txt$/,\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/cmake');\n                    return legacy(m.cmake);\n                }\n            },\n            {\n                name: 'CoffeeScript',\n                displayName: trans.__('CoffeeScript'),\n                alias: ['coffee', 'coffee-script'],\n                mime: [\n                    'application/vnd.coffeescript',\n                    'text/coffeescript',\n                    'text/x-coffeescript'\n                ],\n                extensions: ['coffee'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/coffeescript');\n                    return legacy(m.coffeeScript);\n                }\n            },\n            {\n                name: 'Common Lisp',\n                displayName: trans.__('Common Lisp'),\n                alias: ['lisp'],\n                mime: 'text/x-common-lisp',\n                extensions: ['cl', 'lisp', 'el'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/commonlisp');\n                    return legacy(m.commonLisp);\n                }\n            },\n            {\n                name: 'Cypher',\n                displayName: trans.__('Cypher'),\n                mime: 'application/x-cypher-query',\n                extensions: ['cyp', 'cypher'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/cypher');\n                    return legacy(m.cypher);\n                }\n            },\n            {\n                name: 'Cython',\n                displayName: trans.__('Cython'),\n                mime: 'text/x-cython',\n                extensions: ['pyx', 'pxd', 'pxi'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/python');\n                    return legacy(m.cython);\n                }\n            },\n            {\n                name: 'Crystal',\n                displayName: trans.__('Crystal'),\n                mime: 'text/x-crystal',\n                extensions: ['cr'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/crystal');\n                    return legacy(m.crystal);\n                }\n            },\n            {\n                name: 'D',\n                displayName: trans.__('D'),\n                mime: 'text/x-d',\n                extensions: ['d'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/d');\n                    return legacy(m.d);\n                }\n            },\n            {\n                name: 'Dart',\n                displayName: trans.__('Dart'),\n                mime: ['application/dart', 'text/x-dart'],\n                extensions: ['dart'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/clike');\n                    return legacy(m.dart);\n                }\n            },\n            {\n                name: 'diff',\n                displayName: trans.__('diff'),\n                mime: 'text/x-diff',\n                extensions: ['diff', 'patch'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/diff');\n                    return legacy(m.diff);\n                }\n            },\n            {\n                name: 'Dockerfile',\n                displayName: trans.__('Dockerfile'),\n                mime: 'text/x-dockerfile',\n                filename: /^Dockerfile$/,\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/dockerfile');\n                    return legacy(m.dockerFile);\n                }\n            },\n            {\n                name: 'DTD',\n                displayName: trans.__('DTD'),\n                mime: 'application/xml-dtd',\n                extensions: ['dtd'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/dtd');\n                    return legacy(m.dtd);\n                }\n            },\n            {\n                name: 'Dylan',\n                displayName: trans.__('Dylan'),\n                mime: 'text/x-dylan',\n                extensions: ['dylan', 'dyl', 'intr'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/dylan');\n                    return legacy(m.dylan);\n                }\n            },\n            {\n                name: 'EBNF',\n                displayName: trans.__('EBNF'),\n                mime: 'text/x-ebnf',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/ebnf');\n                    return legacy(m.ebnf);\n                }\n            },\n            {\n                name: 'ECL',\n                displayName: trans.__('ECL'),\n                mime: 'text/x-ecl',\n                extensions: ['ecl'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/ecl');\n                    return legacy(m.ecl);\n                }\n            },\n            {\n                name: 'edn',\n                displayName: trans.__('edn'),\n                mime: 'application/edn',\n                extensions: ['edn'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/clojure');\n                    return legacy(m.clojure);\n                }\n            },\n            {\n                name: 'Eiffel',\n                displayName: trans.__('Eiffel'),\n                mime: 'text/x-eiffel',\n                extensions: ['e'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/eiffel');\n                    return legacy(m.eiffel);\n                }\n            },\n            {\n                name: 'Elm',\n                displayName: trans.__('Elm'),\n                mime: 'text/x-elm',\n                extensions: ['elm'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/elm');\n                    return legacy(m.elm);\n                }\n            },\n            {\n                name: 'Erlang',\n                displayName: trans.__('Erlang'),\n                mime: 'text/x-erlang',\n                extensions: ['erl'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/erlang');\n                    return legacy(m.erlang);\n                }\n            },\n            {\n                name: 'Esper',\n                displayName: trans.__('Esper'),\n                mime: 'text/x-esper',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/sql');\n                    return legacy(m.esper);\n                }\n            },\n            {\n                name: 'Factor',\n                displayName: trans.__('Factor'),\n                mime: 'text/x-factor',\n                extensions: ['factor'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/factor');\n                    return legacy(m.factor);\n                }\n            },\n            {\n                name: 'FCL',\n                displayName: trans.__('FCL'),\n                mime: 'text/x-fcl',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/fcl');\n                    return legacy(m.fcl);\n                }\n            },\n            {\n                name: 'Forth',\n                displayName: trans.__('Forth'),\n                mime: 'text/x-forth',\n                extensions: ['forth', 'fth', '4th'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/forth');\n                    return legacy(m.forth);\n                }\n            },\n            {\n                name: 'Fortran',\n                displayName: trans.__('Fortran'),\n                mime: 'text/x-fortran',\n                extensions: ['f', 'for', 'f77', 'f90', 'f95'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/fortran');\n                    return legacy(m.fortran);\n                }\n            },\n            {\n                name: 'F#',\n                displayName: trans.__('F#'),\n                alias: ['fsharp'],\n                mime: 'text/x-fsharp',\n                extensions: ['fs'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/mllike');\n                    return legacy(m.fSharp);\n                }\n            },\n            {\n                name: 'Gas',\n                displayName: trans.__('Gas'),\n                mime: 'text/x-gas',\n                extensions: ['s'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/gas');\n                    return legacy(m.gas);\n                }\n            },\n            {\n                name: 'Gherkin',\n                displayName: trans.__('Gherkin'),\n                mime: 'text/x-feature',\n                extensions: ['feature'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/gherkin');\n                    return legacy(m.gherkin);\n                }\n            },\n            {\n                name: 'Go',\n                displayName: trans.__('Go'),\n                mime: 'text/x-go',\n                extensions: ['go'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/go');\n                    return legacy(m.go);\n                }\n            },\n            {\n                name: 'Groovy',\n                displayName: trans.__('Groovy'),\n                mime: 'text/x-groovy',\n                extensions: ['groovy', 'gradle'],\n                filename: /^Jenkinsfile$/,\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/groovy');\n                    return legacy(m.groovy);\n                }\n            },\n            {\n                name: 'Haskell',\n                displayName: trans.__('Haskell'),\n                mime: 'text/x-haskell',\n                extensions: ['hs'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/haskell');\n                    return legacy(m.haskell);\n                }\n            },\n            {\n                name: 'Haxe',\n                displayName: trans.__('Haxe'),\n                mime: 'text/x-haxe',\n                extensions: ['hx'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/haxe');\n                    return legacy(m.haxe);\n                }\n            },\n            {\n                name: 'HXML',\n                displayName: trans.__('HXML'),\n                mime: 'text/x-hxml',\n                extensions: ['hxml'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/haxe');\n                    return legacy(m.hxml);\n                }\n            },\n            {\n                name: 'HTTP',\n                displayName: trans.__('HTTP'),\n                mime: 'message/http',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/http');\n                    return legacy(m.http);\n                }\n            },\n            {\n                name: 'IDL',\n                displayName: trans.__('IDL'),\n                mime: 'text/x-idl',\n                extensions: ['pro'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/idl');\n                    return legacy(m.idl);\n                }\n            },\n            {\n                name: 'JSON-LD',\n                displayName: trans.__('JSON-LD'),\n                alias: ['jsonld'],\n                mime: 'application/ld+json',\n                extensions: ['jsonld'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/javascript');\n                    return legacy(m.jsonld);\n                }\n            },\n            {\n                name: 'Jinja2',\n                displayName: trans.__('Jinja2'),\n                mime: 'text/jinja2',\n                extensions: ['j2', 'jinja', 'jinja2'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/jinja2');\n                    return legacy(m.jinja2);\n                }\n            },\n            {\n                name: 'Julia',\n                displayName: trans.__('Julia'),\n                mime: 'text/x-julia',\n                extensions: ['jl'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/julia');\n                    return legacy(m.julia);\n                }\n            },\n            {\n                name: 'Kotlin',\n                displayName: trans.__('Kotlin'),\n                mime: 'text/x-kotlin',\n                extensions: ['kt'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/clike');\n                    return legacy(m.kotlin);\n                }\n            },\n            {\n                name: 'LESS',\n                displayName: trans.__('LESS'),\n                mime: 'text/x-less',\n                extensions: ['less'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/css');\n                    return legacy(m.less);\n                }\n            },\n            {\n                name: 'LiveScript',\n                displayName: trans.__('LiveScript'),\n                alias: ['ls'],\n                mime: 'text/x-livescript',\n                extensions: ['ls'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/livescript');\n                    return legacy(m.liveScript);\n                }\n            },\n            {\n                name: 'Lua',\n                displayName: trans.__('Lua'),\n                mime: 'text/x-lua',\n                extensions: ['lua'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/lua');\n                    return legacy(m.lua);\n                }\n            },\n            {\n                name: 'mIRC',\n                displayName: trans.__('mIRC'),\n                mime: 'text/mirc',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/mirc');\n                    return legacy(m.mirc);\n                }\n            },\n            {\n                name: 'Mathematica',\n                displayName: trans.__('Mathematica'),\n                mime: 'text/x-mathematica',\n                extensions: ['m', 'nb', 'wl', 'wls'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/mathematica');\n                    return legacy(m.mathematica);\n                }\n            },\n            {\n                name: 'Modelica',\n                displayName: trans.__('Modelica'),\n                mime: 'text/x-modelica',\n                extensions: ['mo'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/modelica');\n                    return legacy(m.modelica);\n                }\n            },\n            {\n                name: 'MUMPS',\n                displayName: trans.__('MUMPS'),\n                mime: 'text/x-mumps',\n                extensions: ['mps'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/mumps');\n                    return legacy(m.mumps);\n                }\n            },\n            {\n                name: 'mbox',\n                displayName: trans.__('mbox'),\n                mime: 'application/mbox',\n                extensions: ['mbox'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/mbox');\n                    return legacy(m.mbox);\n                }\n            },\n            {\n                name: 'Nginx',\n                displayName: trans.__('Nginx'),\n                mime: 'text/x-nginx-conf',\n                filename: /nginx.*\\.conf$/i,\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/nginx');\n                    return legacy(m.nginx);\n                }\n            },\n            {\n                name: 'NSIS',\n                displayName: trans.__('NSIS'),\n                mime: 'text/x-nsis',\n                extensions: ['nsh', 'nsi'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/nsis');\n                    return legacy(m.nsis);\n                }\n            },\n            {\n                name: 'NTriples',\n                displayName: trans.__('NTriples'),\n                mime: [\n                    'application/n-triples',\n                    'application/n-quads',\n                    'text/n-triples'\n                ],\n                extensions: ['nt', 'nq'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/ntriples');\n                    return legacy(m.ntriples);\n                }\n            },\n            {\n                name: 'Objective-C',\n                displayName: trans.__('Objective-C'),\n                alias: ['objective-c', 'objc'],\n                mime: 'text/x-objectivec',\n                extensions: ['m'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/clike');\n                    return legacy(m.objectiveC);\n                }\n            },\n            {\n                name: 'Objective-C++',\n                displayName: trans.__('Objective-C++'),\n                alias: ['objective-c++', 'objc++'],\n                mime: 'text/x-objectivec++',\n                extensions: ['mm'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/clike');\n                    return legacy(m.objectiveCpp);\n                }\n            },\n            {\n                name: 'OCaml',\n                displayName: trans.__('OCaml'),\n                mime: 'text/x-ocaml',\n                extensions: ['ml', 'mli', 'mll', 'mly'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/mllike');\n                    return legacy(m.oCaml);\n                }\n            },\n            {\n                name: 'Octave',\n                displayName: trans.__('Octave'),\n                mime: 'text/x-octave',\n                extensions: ['m'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/octave');\n                    return legacy(m.octave);\n                }\n            },\n            {\n                name: 'Oz',\n                displayName: trans.__('Oz'),\n                mime: 'text/x-oz',\n                extensions: ['oz'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/oz');\n                    return legacy(m.oz);\n                }\n            },\n            {\n                name: 'Pascal',\n                displayName: trans.__('Pascal'),\n                mime: 'text/x-pascal',\n                extensions: ['p', 'pas'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/pascal');\n                    return legacy(m.pascal);\n                }\n            },\n            {\n                name: 'Perl',\n                displayName: trans.__('Perl'),\n                mime: 'text/x-perl',\n                extensions: ['pl', 'pm'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/perl');\n                    return legacy(m.perl);\n                }\n            },\n            {\n                name: 'Pig',\n                displayName: trans.__('Pig'),\n                mime: 'text/x-pig',\n                extensions: ['pig'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/pig');\n                    return legacy(m.pig);\n                }\n            },\n            {\n                name: 'PowerShell',\n                displayName: trans.__('PowerShell'),\n                mime: 'application/x-powershell',\n                extensions: ['ps1', 'psd1', 'psm1'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/powershell');\n                    return legacy(m.powerShell);\n                }\n            },\n            {\n                name: 'Properties files',\n                displayName: trans.__('Properties files'),\n                alias: ['ini', 'properties'],\n                mime: 'text/x-properties',\n                extensions: ['properties', 'ini', 'in'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/properties');\n                    return legacy(m.properties);\n                }\n            },\n            {\n                name: 'ProtoBuf',\n                displayName: trans.__('ProtoBuf'),\n                mime: 'text/x-protobuf',\n                extensions: ['proto'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/protobuf');\n                    return legacy(m.protobuf);\n                }\n            },\n            {\n                name: 'Puppet',\n                displayName: trans.__('Puppet'),\n                mime: 'text/x-puppet',\n                extensions: ['pp'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/puppet');\n                    return legacy(m.puppet);\n                }\n            },\n            {\n                name: 'Q',\n                displayName: trans.__('Q'),\n                mime: 'text/x-q',\n                extensions: ['q'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/q');\n                    return legacy(m.q);\n                }\n            },\n            {\n                name: 'R',\n                displayName: trans.__('R'),\n                alias: ['rscript'],\n                mime: 'text/x-rsrc',\n                extensions: ['r', 'R'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/r');\n                    return legacy(m.r);\n                }\n            },\n            {\n                name: 'RPM Changes',\n                displayName: trans.__('RPM Changes'),\n                mime: 'text/x-rpm-changes',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/rpm');\n                    return legacy(m.rpmChanges);\n                }\n            },\n            {\n                name: 'RPM Spec',\n                displayName: trans.__('RPM Spec'),\n                mime: 'text/x-rpm-spec',\n                extensions: ['spec'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/rpm');\n                    return legacy(m.rpmSpec);\n                }\n            },\n            {\n                name: 'Ruby',\n                displayName: trans.__('Ruby'),\n                alias: ['jruby', 'macruby', 'rake', 'rb', 'rbx'],\n                mime: 'text/x-ruby',\n                extensions: ['rb'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/ruby');\n                    return legacy(m.ruby);\n                }\n            },\n            {\n                name: 'SAS',\n                displayName: trans.__('SAS'),\n                mime: 'text/x-sas',\n                extensions: ['sas'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/sas');\n                    return legacy(m.sas);\n                }\n            },\n            {\n                name: 'Scala',\n                displayName: trans.__('Scala'),\n                mime: 'text/x-scala',\n                extensions: ['scala'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/clike');\n                    return legacy(m.scala);\n                }\n            },\n            {\n                name: 'Scheme',\n                displayName: trans.__('Scheme'),\n                mime: 'text/x-scheme',\n                extensions: ['scm', 'ss'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/scheme');\n                    return legacy(m.scheme);\n                }\n            },\n            {\n                name: 'SCSS',\n                displayName: trans.__('SCSS'),\n                mime: 'text/x-scss',\n                extensions: ['scss'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/css');\n                    return legacy(m.sCSS);\n                }\n            },\n            {\n                name: 'Shell',\n                displayName: trans.__('Shell'),\n                alias: ['bash', 'sh', 'zsh'],\n                mime: ['text/x-sh', 'application/x-sh'],\n                extensions: ['sh', 'ksh', 'bash'],\n                filename: /^PKGBUILD$/,\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/shell');\n                    return legacy(m.shell);\n                }\n            },\n            {\n                name: 'Sieve',\n                displayName: trans.__('Sieve'),\n                mime: 'application/sieve',\n                extensions: ['siv', 'sieve'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/sieve');\n                    return legacy(m.sieve);\n                }\n            },\n            {\n                name: 'Smalltalk',\n                displayName: trans.__('Smalltalk'),\n                mime: 'text/x-stsrc',\n                extensions: ['st'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/smalltalk');\n                    return legacy(m.smalltalk);\n                }\n            },\n            {\n                name: 'Solr',\n                displayName: trans.__('Solr'),\n                mime: 'text/x-solr',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/solr');\n                    return legacy(m.solr);\n                }\n            },\n            {\n                name: 'SML',\n                displayName: trans.__('SML'),\n                mime: 'text/x-sml',\n                extensions: ['sml', 'sig', 'fun', 'smackspec'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/mllike');\n                    return legacy(m.sml);\n                }\n            },\n            {\n                name: 'SPARQL',\n                displayName: trans.__('SPARQL'),\n                alias: ['sparul'],\n                mime: 'application/sparql-query',\n                extensions: ['rq', 'sparql'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/sparql');\n                    return legacy(m.sparql);\n                }\n            },\n            {\n                name: 'Spreadsheet',\n                displayName: trans.__('Spreadsheet'),\n                alias: ['excel', 'formula'],\n                mime: 'text/x-spreadsheet',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/spreadsheet');\n                    return legacy(m.spreadsheet);\n                }\n            },\n            {\n                name: 'Squirrel',\n                displayName: trans.__('Squirrel'),\n                mime: 'text/x-squirrel',\n                extensions: ['nut'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/clike');\n                    return legacy(m.squirrel);\n                }\n            },\n            {\n                name: 'Stylus',\n                displayName: trans.__('Stylus'),\n                mime: 'text/x-styl',\n                extensions: ['styl'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/stylus');\n                    return legacy(m.stylus);\n                }\n            },\n            {\n                name: 'Swift',\n                displayName: trans.__('Swift'),\n                mime: 'text/x-swift',\n                extensions: ['swift'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/swift');\n                    return legacy(m.swift);\n                }\n            },\n            {\n                name: 'sTeX',\n                displayName: trans.__('sTeX'),\n                mime: 'text/x-stex',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/stex');\n                    return legacy(m.stex);\n                }\n            },\n            {\n                name: 'LaTeX',\n                displayName: trans.__('LaTeX'),\n                alias: ['tex'],\n                mime: 'text/x-latex',\n                extensions: ['text', 'ltx', 'tex'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/stex');\n                    return legacy(m.stex);\n                }\n            },\n            {\n                name: 'SystemVerilog',\n                displayName: trans.__('SystemVerilog'),\n                mime: 'text/x-systemverilog',\n                extensions: ['v', 'sv', 'svh'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/verilog');\n                    return legacy(m.verilog);\n                }\n            },\n            {\n                name: 'Tcl',\n                displayName: trans.__('Tcl'),\n                mime: 'text/x-tcl',\n                extensions: ['tcl'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/tcl');\n                    return legacy(m.tcl);\n                }\n            },\n            {\n                name: 'Textile',\n                displayName: trans.__('Textile'),\n                mime: 'text/x-textile',\n                extensions: ['textile'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/textile');\n                    return legacy(m.textile);\n                }\n            },\n            {\n                name: 'TiddlyWiki',\n                displayName: trans.__('TiddlyWiki'),\n                mime: 'text/x-tiddlywiki',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/tiddlywiki');\n                    return legacy(m.tiddlyWiki);\n                }\n            },\n            {\n                name: 'Tiki wiki',\n                displayName: trans.__('Tiki wiki'),\n                mime: 'text/tiki',\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/tiki');\n                    return legacy(m.tiki);\n                }\n            },\n            {\n                name: 'TOML',\n                displayName: trans.__('TOML'),\n                mime: 'text/x-toml',\n                extensions: ['toml'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/toml');\n                    return legacy(m.toml);\n                }\n            },\n            {\n                name: 'troff',\n                displayName: trans.__('troff'),\n                mime: 'text/troff',\n                extensions: ['1', '2', '3', '4', '5', '6', '7', '8', '9'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/troff');\n                    return legacy(m.troff);\n                }\n            },\n            {\n                name: 'TTCN',\n                displayName: trans.__('TTCN'),\n                mime: 'text/x-ttcn',\n                extensions: ['ttcn', 'ttcn3', 'ttcnpp'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/ttcn');\n                    return legacy(m.ttcn);\n                }\n            },\n            {\n                name: 'TTCN_CFG',\n                displayName: trans.__('TTCN_CFG'),\n                mime: 'text/x-ttcn-cfg',\n                extensions: ['cfg'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/ttcn-cfg');\n                    return legacy(m.ttcnCfg);\n                }\n            },\n            {\n                name: 'Turtle',\n                displayName: trans.__('Turtle'),\n                mime: 'text/turtle',\n                extensions: ['ttl'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/turtle');\n                    return legacy(m.turtle);\n                }\n            },\n            {\n                name: 'Web IDL',\n                displayName: trans.__('Web IDL'),\n                mime: 'text/x-webidl',\n                extensions: ['webidl'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/webidl');\n                    return legacy(m.webIDL);\n                }\n            },\n            {\n                name: 'VB.NET',\n                displayName: trans.__('VB.NET'),\n                mime: 'text/x-vb',\n                extensions: ['vb'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/vb');\n                    return legacy(m.vb);\n                }\n            },\n            {\n                name: 'VBScript',\n                displayName: trans.__('VBScript'),\n                mime: 'text/vbscript',\n                extensions: ['vbs'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/vbscript');\n                    return legacy(m.vbScript);\n                }\n            },\n            {\n                name: 'Velocity',\n                displayName: trans.__('Velocity'),\n                mime: 'text/velocity',\n                extensions: ['vtl'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/velocity');\n                    return legacy(m.velocity);\n                }\n            },\n            {\n                name: 'Verilog',\n                displayName: trans.__('Verilog'),\n                mime: 'text/x-verilog',\n                extensions: ['v'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/verilog');\n                    return legacy(m.verilog);\n                }\n            },\n            {\n                name: 'VHDL',\n                displayName: trans.__('VHDL'),\n                mime: 'text/x-vhdl',\n                extensions: ['vhd', 'vhdl'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/vhdl');\n                    return legacy(m.vhdl);\n                }\n            },\n            {\n                name: 'XQuery',\n                displayName: trans.__('XQuery'),\n                mime: 'application/xquery',\n                extensions: ['xy', 'xquery'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/xquery');\n                    return legacy(m.xQuery);\n                }\n            },\n            {\n                name: 'Yacas',\n                displayName: trans.__('Yacas'),\n                mime: 'text/x-yacas',\n                extensions: ['ys'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/yacas');\n                    return legacy(m.yacas);\n                }\n            },\n            {\n                name: 'YAML',\n                displayName: trans.__('YAML'),\n                alias: ['yml'],\n                mime: ['text/x-yaml', 'text/yaml'],\n                extensions: ['yaml', 'yml'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/yaml');\n                    return legacy(m.yaml);\n                }\n            },\n            {\n                name: 'Z80',\n                displayName: trans.__('Z80'),\n                mime: 'text/x-z80',\n                extensions: ['z80'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/z80');\n                    return legacy(m.z80);\n                }\n            },\n            {\n                name: 'mscgen',\n                displayName: trans.__('mscgen'),\n                mime: 'text/x-mscgen',\n                extensions: ['mscgen', 'mscin', 'msc'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/mscgen');\n                    return legacy(m.mscgen);\n                }\n            },\n            {\n                name: 'xu',\n                displayName: trans.__('xu'),\n                mime: 'text/x-xu',\n                extensions: ['xu'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/mscgen');\n                    return legacy(m.xu);\n                }\n            },\n            {\n                name: 'msgenny',\n                displayName: trans.__('msgenny'),\n                mime: 'text/x-msgenny',\n                extensions: ['msgenny'],\n                async load() {\n                    const m = await import('@codemirror/legacy-modes/mode/mscgen');\n                    return legacy(m.msgenny);\n                }\n            }\n        ];\n    }\n    EditorLanguageRegistry.getDefaultLanguages = getDefaultLanguages;\n})(EditorLanguageRegistry || (EditorLanguageRegistry = {}));\n//# sourceMappingURL=language.js.map","/* eslint-disable @typescript-eslint/ban-types */\n// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { insertNewlineAndIndent } from '@codemirror/commands';\nimport { ensureSyntaxTree } from '@codemirror/language';\nimport { Compartment, EditorSelection, EditorState, Prec } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\nimport { UUID } from '@lumino/coreutils';\nimport { Signal } from '@lumino/signaling';\nimport { ExtensionsHandler } from './extension';\nimport { EditorLanguageRegistry } from './language';\n/**\n * The class name added to CodeMirrorWidget instances.\n */\nconst EDITOR_CLASS = 'jp-CodeMirrorEditor';\n/**\n * The key code for the up arrow key.\n */\nconst UP_ARROW = 38;\n/**\n * The key code for the down arrow key.\n */\nconst DOWN_ARROW = 40;\n/**\n * CodeMirror editor.\n */\nexport class CodeMirrorEditor {\n    /**\n     * Construct a CodeMirror editor.\n     */\n    constructor(options) {\n        var _a, _b, _c, _d, _e, _f;\n        /**\n         * A signal emitted when either the top or bottom edge is requested.\n         */\n        this.edgeRequested = new Signal(this);\n        this._isDisposed = false;\n        this._language = new Compartment();\n        this._uuid = '';\n        this._languages = (_a = options.languages) !== null && _a !== void 0 ? _a : new EditorLanguageRegistry();\n        this._configurator =\n            (_d = (_b = options.extensionsRegistry) === null || _b === void 0 ? void 0 : _b.createNew({\n                ...options,\n                inline: (_c = options.inline) !== null && _c !== void 0 ? _c : false\n            })) !== null && _d !== void 0 ? _d : new ExtensionsHandler();\n        const host = (this.host = options.host);\n        host.classList.add(EDITOR_CLASS);\n        host.classList.add('jp-Editor');\n        host.addEventListener('focus', this, true);\n        host.addEventListener('blur', this, true);\n        host.addEventListener('scroll', this, true);\n        this._uuid = (_e = options.uuid) !== null && _e !== void 0 ? _e : UUID.uuid4();\n        const model = (this._model = options.model);\n        // Default keydown handler - it will have low priority\n        const onKeyDown = EditorView.domEventHandlers({\n            keydown: (event, view) => {\n                return this.onKeydown(event);\n            }\n        });\n        const updateListener = EditorView.updateListener.of((update) => {\n            this._onDocChanged(update);\n        });\n        this._editor = Private.createEditor(host, this._configurator, [\n            // We need to set the order to high, otherwise the keybinding for ArrowUp/ArrowDown\n            // will process the event shunting our edge detection code.\n            Prec.high(onKeyDown),\n            updateListener,\n            // Initialize with empty extension\n            this._language.of([]),\n            ...((_f = options.extensions) !== null && _f !== void 0 ? _f : [])\n        ], model.sharedModel.source);\n        this._onMimeTypeChanged();\n        this._onCursorActivity();\n        this._configurator.configChanged.connect(this.onConfigChanged, this);\n        model.mimeTypeChanged.connect(this._onMimeTypeChanged, this);\n    }\n    /**\n     * The uuid of this editor;\n     */\n    get uuid() {\n        return this._uuid;\n    }\n    set uuid(value) {\n        this._uuid = value;\n    }\n    /**\n     * Get the codemirror editor wrapped by the editor.\n     */\n    get editor() {\n        return this._editor;\n    }\n    /**\n     * Get the codemirror doc wrapped by the widget.\n     */\n    get doc() {\n        return this._editor.state.doc;\n    }\n    /**\n     * Get the number of lines in the editor.\n     */\n    get lineCount() {\n        return this.doc.lines;\n    }\n    /**\n     * Returns a model for this editor.\n     */\n    get model() {\n        return this._model;\n    }\n    /**\n     * The height of a line in the editor in pixels.\n     */\n    get lineHeight() {\n        return this._editor.defaultLineHeight;\n    }\n    /**\n     * The widget of a character in the editor in pixels.\n     */\n    get charWidth() {\n        return this._editor.defaultCharacterWidth;\n    }\n    /**\n     * Tests whether the editor is disposed.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Dispose of the resources held by the widget.\n     */\n    dispose() {\n        if (this.isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        this.host.removeEventListener('focus', this, true);\n        this.host.removeEventListener('blur', this, true);\n        this.host.removeEventListener('scroll', this, true);\n        this._configurator.dispose();\n        Signal.clearData(this);\n        this.editor.destroy();\n    }\n    /**\n     * Get a config option for the editor.\n     */\n    getOption(option) {\n        return this._configurator.getOption(option);\n    }\n    /**\n     * Whether the option exists or not.\n     */\n    hasOption(option) {\n        return this._configurator.hasOption(option);\n    }\n    /**\n     * Set a config option for the editor.\n     */\n    setOption(option, value) {\n        this._configurator.setOption(option, value);\n    }\n    /**\n     * Set config options for the editor.\n     *\n     * This method is preferred when setting several options. The\n     * options are set within an operation, which only performs\n     * the costly update at the end, and not after every option\n     * is set.\n     */\n    setOptions(options) {\n        this._configurator.setOptions(options);\n    }\n    /**\n     * Inject an extension into the editor\n     *\n     * @alpha\n     * @experimental\n     * @param ext CodeMirror 6 extension\n     */\n    injectExtension(ext) {\n        this._configurator.injectExtension(this._editor, ext);\n    }\n    /**\n     * Returns the content for the given line number.\n     */\n    getLine(line) {\n        // TODO: CM6 remove +1 when CM6 first line number has propagated\n        line = line + 1;\n        return line <= this.doc.lines ? this.doc.line(line).text : undefined;\n    }\n    /**\n     * Find an offset for the given position.\n     */\n    getOffsetAt(position) {\n        // TODO: CM6 remove +1 when CM6 first line number has propagated\n        return this.doc.line(position.line + 1).from + position.column;\n    }\n    /**\n     * Find a position for the given offset.\n     */\n    getPositionAt(offset) {\n        // TODO: CM6 remove -1 when CM6 first line number has propagated\n        const line = this.doc.lineAt(offset);\n        return { line: line.number - 1, column: offset - line.from };\n    }\n    /**\n     * Undo one edit (if any undo events are stored).\n     */\n    undo() {\n        this.model.sharedModel.undo();\n    }\n    /**\n     * Redo one undone edit.\n     */\n    redo() {\n        this.model.sharedModel.redo();\n    }\n    /**\n     * Clear the undo history.\n     */\n    clearHistory() {\n        this.model.sharedModel.clearUndoHistory();\n    }\n    /**\n     * Brings browser focus to this editor text.\n     */\n    focus() {\n        this._editor.focus();\n    }\n    /**\n     * Test whether the editor has keyboard focus.\n     */\n    hasFocus() {\n        return this._editor.hasFocus;\n    }\n    /**\n     * Explicitly blur the editor.\n     */\n    blur() {\n        this._editor.contentDOM.blur();\n    }\n    get state() {\n        return this._editor.state;\n    }\n    firstLine() {\n        // TODO: return 1 when CM6 first line number has propagated\n        return 0;\n    }\n    lastLine() {\n        return this.doc.lines - 1;\n    }\n    cursorCoords(where, mode) {\n        const selection = this.state.selection.main;\n        const pos = where ? selection.from : selection.to;\n        const rect = this.editor.coordsAtPos(pos);\n        return rect;\n    }\n    getRange(from, to, separator) {\n        const fromOffset = this.getOffsetAt(this._toPosition(from));\n        const toOffset = this.getOffsetAt(this._toPosition(to));\n        return this.state.sliceDoc(fromOffset, toOffset);\n    }\n    /**\n     * Reveal the given position in the editor.\n     */\n    revealPosition(position) {\n        const offset = this.getOffsetAt(position);\n        this._editor.dispatch({\n            effects: EditorView.scrollIntoView(offset)\n        });\n    }\n    /**\n     * Reveal the given selection in the editor.\n     */\n    revealSelection(selection) {\n        const start = this.getOffsetAt(selection.start);\n        const end = this.getOffsetAt(selection.end);\n        this._editor.dispatch({\n            effects: EditorView.scrollIntoView(EditorSelection.range(start, end))\n        });\n    }\n    /**\n     * Get the window coordinates given a cursor position.\n     */\n    getCoordinateForPosition(position) {\n        const offset = this.getOffsetAt(position);\n        const rect = this.editor.coordsAtPos(offset);\n        return rect;\n    }\n    /**\n     * Get the cursor position given window coordinates.\n     *\n     * @param coordinate - The desired coordinate.\n     *\n     * @returns The position of the coordinates, or null if not\n     *   contained in the editor.\n     */\n    getPositionForCoordinate(coordinate) {\n        const offset = this.editor.posAtCoords({\n            x: coordinate.left,\n            y: coordinate.top\n        });\n        return this.getPositionAt(offset) || null;\n    }\n    /**\n     * Returns the primary position of the cursor, never `null`.\n     */\n    getCursorPosition() {\n        const offset = this.state.selection.main.head;\n        return this.getPositionAt(offset);\n    }\n    /**\n     * Set the primary position of the cursor.\n     *\n     * #### Notes\n     * This will remove any secondary cursors.\n     */\n    setCursorPosition(position, options) {\n        const offset = this.getOffsetAt(position);\n        this.editor.dispatch({\n            selection: { anchor: offset },\n            scrollIntoView: true\n        });\n        // If the editor does not have focus, this cursor change\n        // will get screened out in _onCursorsChanged(). Make an\n        // exception for this method.\n        if (!this.editor.hasFocus) {\n            this.model.selections.set(this.uuid, this.getSelections());\n        }\n    }\n    /**\n     * Returns the primary selection, never `null`.\n     */\n    getSelection() {\n        return this.getSelections()[0];\n    }\n    /**\n     * Set the primary selection. This will remove any secondary cursors.\n     */\n    setSelection(selection) {\n        this.setSelections([selection]);\n    }\n    /**\n     * Gets the selections for all the cursors, never `null` or empty.\n     */\n    getSelections() {\n        const selections = this.state.selection.ranges; //= [{anchor: number, head: number}]\n        if (selections.length > 0) {\n            const sel = selections.map(r => ({\n                anchor: this._toCodeMirrorPosition(this.getPositionAt(r.from)),\n                head: this._toCodeMirrorPosition(this.getPositionAt(r.to))\n            }));\n            return sel.map(selection => this._toSelection(selection));\n        }\n        const cursor = this._toCodeMirrorPosition(this.getPositionAt(this.state.selection.main.head));\n        const selection = this._toSelection({ anchor: cursor, head: cursor });\n        return [selection];\n    }\n    /**\n     * Sets the selections for all the cursors, should not be empty.\n     * Cursors will be removed or added, as necessary.\n     * Passing an empty array resets a cursor position to the start of a document.\n     */\n    setSelections(selections) {\n        const sel = selections.length\n            ? selections.map(r => EditorSelection.range(this.getOffsetAt(r.start), this.getOffsetAt(r.end)))\n            : [EditorSelection.range(0, 0)];\n        this.editor.dispatch({ selection: EditorSelection.create(sel) });\n    }\n    /**\n     * Replaces the current selection with the given text.\n     *\n     * Behaviour for multiple selections is undefined.\n     *\n     * @param text The text to be inserted.\n     */\n    replaceSelection(text) {\n        const firstSelection = this.getSelections()[0];\n        this.model.sharedModel.updateSource(this.getOffsetAt(firstSelection.start), this.getOffsetAt(firstSelection.end), text);\n        const newPosition = this.getPositionAt(this.getOffsetAt(firstSelection.start) + text.length);\n        this.setSelection({ start: newPosition, end: newPosition });\n    }\n    /**\n     * Get a list of tokens for the current editor text content.\n     */\n    getTokens() {\n        const tokens = [];\n        const tree = ensureSyntaxTree(this.state, this.doc.length);\n        if (tree) {\n            tree.iterate({\n                enter: (ref) => {\n                    if (ref.node.firstChild === null) {\n                        tokens.push({\n                            value: this.state.sliceDoc(ref.from, ref.to),\n                            offset: ref.from,\n                            type: ref.name\n                        });\n                    }\n                    return true;\n                }\n            });\n        }\n        return tokens;\n    }\n    /**\n     * Get the token at a given editor position.\n     */\n    getTokenAt(offset) {\n        const tree = ensureSyntaxTree(this.state, offset);\n        let token = null;\n        if (tree) {\n            tree.iterate({\n                enter: (ref) => {\n                    // If a token has already been discovered, stop iterating.\n                    if (token) {\n                        return false;\n                    }\n                    // If it is not a leaf, keep iterating.\n                    if (ref.node.firstChild) {\n                        return true;\n                    }\n                    // If the relevant leaf token has been found, stop iterating.\n                    if (offset >= ref.from && offset <= ref.to) {\n                        token = {\n                            value: this.state.sliceDoc(ref.from, ref.to),\n                            offset: ref.from,\n                            type: ref.name\n                        };\n                        return false;\n                    }\n                    return true;\n                }\n            });\n        }\n        return token || { offset, value: '' };\n    }\n    /**\n     * Get the token a the cursor position.\n     */\n    getTokenAtCursor() {\n        return this.getTokenAt(this.state.selection.main.head);\n    }\n    /**\n     * Insert a new indented line at the current cursor position.\n     */\n    newIndentedLine() {\n        insertNewlineAndIndent({\n            state: this.state,\n            dispatch: this.editor.dispatch\n        });\n    }\n    /**\n     * Execute a codemirror command on the editor.\n     *\n     * @param command - The name of the command to execute.\n     */\n    execCommand(command) {\n        command(this.editor);\n    }\n    onConfigChanged(configurator, changes) {\n        configurator.reconfigureExtensions(this._editor, changes);\n    }\n    /**\n     * Handle keydown events from the editor.\n     */\n    onKeydown(event) {\n        const position = this.state.selection.main.head;\n        if (position === 0 && event.keyCode === UP_ARROW) {\n            if (!event.shiftKey) {\n                this.edgeRequested.emit('top');\n            }\n            return false;\n        }\n        const line = this.doc.lineAt(position).number;\n        if (line === 1 && event.keyCode === UP_ARROW) {\n            if (!event.shiftKey) {\n                this.edgeRequested.emit('topLine');\n            }\n            return false;\n        }\n        const length = this.doc.length;\n        if (position === length && event.keyCode === DOWN_ARROW) {\n            if (!event.shiftKey) {\n                this.edgeRequested.emit('bottom');\n            }\n            return false;\n        }\n        return false;\n    }\n    /**\n     * Handles a mime type change.\n     */\n    _onMimeTypeChanged() {\n        // TODO: should we provide a hook for when the mode is done being set?\n        this._languages\n            .getLanguage(this._model.mimeType)\n            .then(language => {\n            var _a;\n            this._editor.dispatch({\n                effects: this._language.reconfigure((_a = language === null || language === void 0 ? void 0 : language.support) !== null && _a !== void 0 ? _a : [])\n            });\n        })\n            .catch(reason => {\n            console.log(`Failed to load language for '${this._model.mimeType}'.`, reason);\n            this._editor.dispatch({\n                effects: this._language.reconfigure([])\n            });\n        });\n    }\n    /**\n     * Handles a cursor activity event.\n     */\n    _onCursorActivity() {\n        // Only add selections if the editor has focus. This avoids unwanted\n        // triggering of cursor activity due to collaborator actions.\n        if (this._editor.hasFocus) {\n            const selections = this.getSelections();\n            this.model.selections.set(this.uuid, selections);\n        }\n    }\n    /**\n     * Converts a code mirror selection to an editor selection.\n     */\n    _toSelection(selection) {\n        return {\n            uuid: this.uuid,\n            start: this._toPosition(selection.anchor),\n            end: this._toPosition(selection.head)\n        };\n    }\n    /**\n     * Convert a code mirror position to an editor position.\n     */\n    _toPosition(position) {\n        return {\n            line: position.line,\n            column: position.ch\n        };\n    }\n    /**\n     * Convert an editor position to a code mirror position.\n     */\n    _toCodeMirrorPosition(position) {\n        return {\n            line: position.line,\n            ch: position.column\n        };\n    }\n    /**\n     * Handles document changes.\n     */\n    _onDocChanged(update) {\n        if (update.transactions.length && update.transactions[0].selection) {\n            this._onCursorActivity();\n        }\n    }\n    /**\n     * Handle the DOM events for the editor.\n     *\n     * @param event - The DOM event sent to the editor.\n     *\n     * #### Notes\n     * This method implements the DOM `EventListener` interface and is\n     * called in response to events on the editor's DOM node. It should\n     * not be called directly by user code.\n     */\n    handleEvent(event) {\n        switch (event.type) {\n            case 'focus':\n                this._evtFocus(event);\n                break;\n            case 'blur':\n                this._evtBlur(event);\n                break;\n            default:\n                break;\n        }\n    }\n    /**\n     * Handle `focus` events for the editor.\n     */\n    _evtFocus(event) {\n        this.host.classList.add('jp-mod-focused');\n        // Update the selections on editor gaining focus because\n        // the onCursorActivity function filters usual cursor events\n        // based on the editor's focus.\n        this._onCursorActivity();\n    }\n    /**\n     * Handle `blur` events for the editor.\n     */\n    _evtBlur(event) {\n        this.host.classList.remove('jp-mod-focused');\n    }\n}\n/**\n * The namespace for module private data.\n */\nvar Private;\n(function (Private) {\n    function createEditor(host, editorConfig, additionalExtensions, doc) {\n        const extensions = editorConfig.getInitialExtensions();\n        extensions.push(...additionalExtensions);\n        const view = new EditorView({\n            state: EditorState.create({\n                doc,\n                extensions\n            }),\n            parent: host\n        });\n        return view;\n    }\n    Private.createEditor = createEditor;\n})(Private || (Private = {}));\n//# sourceMappingURL=editor.js.map","export default function crelt() {\n  var elt = arguments[0]\n  if (typeof elt == \"string\") elt = document.createElement(elt)\n  var i = 1, next = arguments[1]\n  if (next && typeof next == \"object\" && next.nodeType == null && !Array.isArray(next)) {\n    for (var name in next) if (Object.prototype.hasOwnProperty.call(next, name)) {\n      var value = next[name]\n      if (typeof value == \"string\") elt.setAttribute(name, value)\n      else if (value != null) elt[name] = value\n    }\n    i++\n  }\n  for (; i < arguments.length; i++) add(elt, arguments[i])\n  return elt\n}\n\nfunction add(elt, child) {\n  if (typeof child == \"string\") {\n    elt.appendChild(document.createTextNode(child))\n  } else if (child == null) {\n  } else if (child.nodeType != null) {\n    elt.appendChild(child)\n  } else if (Array.isArray(child)) {\n    for (var i = 0; i < child.length; i++) add(elt, child[i])\n  } else {\n    throw new RangeError(\"Unsupported child node: \" + child)\n  }\n}\n","import { showPanel, EditorView, getPanel, Decoration, ViewPlugin, runScopeHandlers } from '@codemirror/view';\nimport { codePointAt, fromCodePoint, codePointSize, StateEffect, StateField, EditorSelection, Facet, combineConfig, CharCategory, RangeSetBuilder, Prec, EditorState, findClusterBreak } from '@codemirror/state';\nimport elt from 'crelt';\n\nconst basicNormalize = typeof String.prototype.normalize == \"function\"\n    ? x => x.normalize(\"NFKD\") : x => x;\n/**\nA search cursor provides an iterator over text matches in a\ndocument.\n*/\nclass SearchCursor {\n    /**\n    Create a text cursor. The query is the search string, `from` to\n    `to` provides the region to search.\n    \n    When `normalize` is given, it will be called, on both the query\n    string and the content it is matched against, before comparing.\n    You can, for example, create a case-insensitive search by\n    passing `s => s.toLowerCase()`.\n    \n    Text is always normalized with\n    [`.normalize(\"NFKD\")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)\n    (when supported).\n    */\n    constructor(text, query, from = 0, to = text.length, normalize, test) {\n        this.test = test;\n        /**\n        The current match (only holds a meaningful value after\n        [`next`](https://codemirror.net/6/docs/ref/#search.SearchCursor.next) has been called and when\n        `done` is false).\n        */\n        this.value = { from: 0, to: 0 };\n        /**\n        Whether the end of the iterated region has been reached.\n        */\n        this.done = false;\n        this.matches = [];\n        this.buffer = \"\";\n        this.bufferPos = 0;\n        this.iter = text.iterRange(from, to);\n        this.bufferStart = from;\n        this.normalize = normalize ? x => normalize(basicNormalize(x)) : basicNormalize;\n        this.query = this.normalize(query);\n    }\n    peek() {\n        if (this.bufferPos == this.buffer.length) {\n            this.bufferStart += this.buffer.length;\n            this.iter.next();\n            if (this.iter.done)\n                return -1;\n            this.bufferPos = 0;\n            this.buffer = this.iter.value;\n        }\n        return codePointAt(this.buffer, this.bufferPos);\n    }\n    /**\n    Look for the next match. Updates the iterator's\n    [`value`](https://codemirror.net/6/docs/ref/#search.SearchCursor.value) and\n    [`done`](https://codemirror.net/6/docs/ref/#search.SearchCursor.done) properties. Should be called\n    at least once before using the cursor.\n    */\n    next() {\n        while (this.matches.length)\n            this.matches.pop();\n        return this.nextOverlapping();\n    }\n    /**\n    The `next` method will ignore matches that partially overlap a\n    previous match. This method behaves like `next`, but includes\n    such matches.\n    */\n    nextOverlapping() {\n        for (;;) {\n            let next = this.peek();\n            if (next < 0) {\n                this.done = true;\n                return this;\n            }\n            let str = fromCodePoint(next), start = this.bufferStart + this.bufferPos;\n            this.bufferPos += codePointSize(next);\n            let norm = this.normalize(str);\n            for (let i = 0, pos = start;; i++) {\n                let code = norm.charCodeAt(i);\n                let match = this.match(code, pos);\n                if (match) {\n                    this.value = match;\n                    return this;\n                }\n                if (i == norm.length - 1)\n                    break;\n                if (pos == start && i < str.length && str.charCodeAt(i) == code)\n                    pos++;\n            }\n        }\n    }\n    match(code, pos) {\n        let match = null;\n        for (let i = 0; i < this.matches.length; i += 2) {\n            let index = this.matches[i], keep = false;\n            if (this.query.charCodeAt(index) == code) {\n                if (index == this.query.length - 1) {\n                    match = { from: this.matches[i + 1], to: pos + 1 };\n                }\n                else {\n                    this.matches[i]++;\n                    keep = true;\n                }\n            }\n            if (!keep) {\n                this.matches.splice(i, 2);\n                i -= 2;\n            }\n        }\n        if (this.query.charCodeAt(0) == code) {\n            if (this.query.length == 1)\n                match = { from: pos, to: pos + 1 };\n            else\n                this.matches.push(1, pos);\n        }\n        if (match && this.test && !this.test(match.from, match.to, this.buffer, this.bufferPos))\n            match = null;\n        return match;\n    }\n}\nif (typeof Symbol != \"undefined\")\n    SearchCursor.prototype[Symbol.iterator] = function () { return this; };\n\nconst empty = { from: -1, to: -1, match: /*@__PURE__*//.*/.exec(\"\") };\nconst baseFlags = \"gm\" + (/x/.unicode == null ? \"\" : \"u\");\n/**\nThis class is similar to [`SearchCursor`](https://codemirror.net/6/docs/ref/#search.SearchCursor)\nbut searches for a regular expression pattern instead of a plain\nstring.\n*/\nclass RegExpCursor {\n    /**\n    Create a cursor that will search the given range in the given\n    document. `query` should be the raw pattern (as you'd pass it to\n    `new RegExp`).\n    */\n    constructor(text, query, options, from = 0, to = text.length) {\n        this.text = text;\n        this.to = to;\n        this.curLine = \"\";\n        /**\n        Set to `true` when the cursor has reached the end of the search\n        range.\n        */\n        this.done = false;\n        /**\n        Will contain an object with the extent of the match and the\n        match object when [`next`](https://codemirror.net/6/docs/ref/#search.RegExpCursor.next)\n        sucessfully finds a match.\n        */\n        this.value = empty;\n        if (/\\\\[sWDnr]|\\n|\\r|\\[\\^/.test(query))\n            return new MultilineRegExpCursor(text, query, options, from, to);\n        this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n        this.test = options === null || options === void 0 ? void 0 : options.test;\n        this.iter = text.iter();\n        let startLine = text.lineAt(from);\n        this.curLineStart = startLine.from;\n        this.matchPos = toCharEnd(text, from);\n        this.getLine(this.curLineStart);\n    }\n    getLine(skip) {\n        this.iter.next(skip);\n        if (this.iter.lineBreak) {\n            this.curLine = \"\";\n        }\n        else {\n            this.curLine = this.iter.value;\n            if (this.curLineStart + this.curLine.length > this.to)\n                this.curLine = this.curLine.slice(0, this.to - this.curLineStart);\n            this.iter.next();\n        }\n    }\n    nextLine() {\n        this.curLineStart = this.curLineStart + this.curLine.length + 1;\n        if (this.curLineStart > this.to)\n            this.curLine = \"\";\n        else\n            this.getLine(0);\n    }\n    /**\n    Move to the next match, if there is one.\n    */\n    next() {\n        for (let off = this.matchPos - this.curLineStart;;) {\n            this.re.lastIndex = off;\n            let match = this.matchPos <= this.to && this.re.exec(this.curLine);\n            if (match) {\n                let from = this.curLineStart + match.index, to = from + match[0].length;\n                this.matchPos = toCharEnd(this.text, to + (from == to ? 1 : 0));\n                if (from == this.curLineStart + this.curLine.length)\n                    this.nextLine();\n                if ((from < to || from > this.value.to) && (!this.test || this.test(from, to, match))) {\n                    this.value = { from, to, match };\n                    return this;\n                }\n                off = this.matchPos - this.curLineStart;\n            }\n            else if (this.curLineStart + this.curLine.length < this.to) {\n                this.nextLine();\n                off = 0;\n            }\n            else {\n                this.done = true;\n                return this;\n            }\n        }\n    }\n}\nconst flattened = /*@__PURE__*/new WeakMap();\n// Reusable (partially) flattened document strings\nclass FlattenedDoc {\n    constructor(from, text) {\n        this.from = from;\n        this.text = text;\n    }\n    get to() { return this.from + this.text.length; }\n    static get(doc, from, to) {\n        let cached = flattened.get(doc);\n        if (!cached || cached.from >= to || cached.to <= from) {\n            let flat = new FlattenedDoc(from, doc.sliceString(from, to));\n            flattened.set(doc, flat);\n            return flat;\n        }\n        if (cached.from == from && cached.to == to)\n            return cached;\n        let { text, from: cachedFrom } = cached;\n        if (cachedFrom > from) {\n            text = doc.sliceString(from, cachedFrom) + text;\n            cachedFrom = from;\n        }\n        if (cached.to < to)\n            text += doc.sliceString(cached.to, to);\n        flattened.set(doc, new FlattenedDoc(cachedFrom, text));\n        return new FlattenedDoc(from, text.slice(from - cachedFrom, to - cachedFrom));\n    }\n}\nclass MultilineRegExpCursor {\n    constructor(text, query, options, from, to) {\n        this.text = text;\n        this.to = to;\n        this.done = false;\n        this.value = empty;\n        this.matchPos = toCharEnd(text, from);\n        this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n        this.test = options === null || options === void 0 ? void 0 : options.test;\n        this.flat = FlattenedDoc.get(text, from, this.chunkEnd(from + 5000 /* Base */));\n    }\n    chunkEnd(pos) {\n        return pos >= this.to ? this.to : this.text.lineAt(pos).to;\n    }\n    next() {\n        for (;;) {\n            let off = this.re.lastIndex = this.matchPos - this.flat.from;\n            let match = this.re.exec(this.flat.text);\n            // Skip empty matches directly after the last match\n            if (match && !match[0] && match.index == off) {\n                this.re.lastIndex = off + 1;\n                match = this.re.exec(this.flat.text);\n            }\n            if (match) {\n                let from = this.flat.from + match.index, to = from + match[0].length;\n                // If a match goes almost to the end of a noncomplete chunk, try\n                // again, since it'll likely be able to match more\n                if ((this.flat.to >= this.to || match.index + match[0].length <= this.flat.text.length - 10) &&\n                    (!this.test || this.test(from, to, match))) {\n                    this.value = { from, to, match };\n                    this.matchPos = toCharEnd(this.text, to + (from == to ? 1 : 0));\n                    return this;\n                }\n            }\n            if (this.flat.to == this.to) {\n                this.done = true;\n                return this;\n            }\n            // Grow the flattened doc\n            this.flat = FlattenedDoc.get(this.text, this.flat.from, this.chunkEnd(this.flat.from + this.flat.text.length * 2));\n        }\n    }\n}\nif (typeof Symbol != \"undefined\") {\n    RegExpCursor.prototype[Symbol.iterator] = MultilineRegExpCursor.prototype[Symbol.iterator] =\n        function () { return this; };\n}\nfunction validRegExp(source) {\n    try {\n        new RegExp(source, baseFlags);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction toCharEnd(text, pos) {\n    if (pos >= text.length)\n        return pos;\n    let line = text.lineAt(pos), next;\n    while (pos < line.to && (next = line.text.charCodeAt(pos - line.from)) >= 0xDC00 && next < 0xE000)\n        pos++;\n    return pos;\n}\n\nfunction createLineDialog(view) {\n    let input = elt(\"input\", { class: \"cm-textfield\", name: \"line\" });\n    let dom = elt(\"form\", {\n        class: \"cm-gotoLine\",\n        onkeydown: (event) => {\n            if (event.keyCode == 27) { // Escape\n                event.preventDefault();\n                view.dispatch({ effects: dialogEffect.of(false) });\n                view.focus();\n            }\n            else if (event.keyCode == 13) { // Enter\n                event.preventDefault();\n                go();\n            }\n        },\n        onsubmit: (event) => {\n            event.preventDefault();\n            go();\n        }\n    }, elt(\"label\", view.state.phrase(\"Go to line\"), \": \", input), \" \", elt(\"button\", { class: \"cm-button\", type: \"submit\" }, view.state.phrase(\"go\")));\n    function go() {\n        let match = /^([+-])?(\\d+)?(:\\d+)?(%)?$/.exec(input.value);\n        if (!match)\n            return;\n        let { state } = view, startLine = state.doc.lineAt(state.selection.main.head);\n        let [, sign, ln, cl, percent] = match;\n        let col = cl ? +cl.slice(1) : 0;\n        let line = ln ? +ln : startLine.number;\n        if (ln && percent) {\n            let pc = line / 100;\n            if (sign)\n                pc = pc * (sign == \"-\" ? -1 : 1) + (startLine.number / state.doc.lines);\n            line = Math.round(state.doc.lines * pc);\n        }\n        else if (ln && sign) {\n            line = line * (sign == \"-\" ? -1 : 1) + startLine.number;\n        }\n        let docLine = state.doc.line(Math.max(1, Math.min(state.doc.lines, line)));\n        view.dispatch({\n            effects: dialogEffect.of(false),\n            selection: EditorSelection.cursor(docLine.from + Math.max(0, Math.min(col, docLine.length))),\n            scrollIntoView: true\n        });\n        view.focus();\n    }\n    return { dom };\n}\nconst dialogEffect = /*@__PURE__*/StateEffect.define();\nconst dialogField = /*@__PURE__*/StateField.define({\n    create() { return true; },\n    update(value, tr) {\n        for (let e of tr.effects)\n            if (e.is(dialogEffect))\n                value = e.value;\n        return value;\n    },\n    provide: f => showPanel.from(f, val => val ? createLineDialog : null)\n});\n/**\nCommand that shows a dialog asking the user for a line number, and\nwhen a valid position is provided, moves the cursor to that line.\n\nSupports line numbers, relative line offsets prefixed with `+` or\n`-`, document percentages suffixed with `%`, and an optional\ncolumn position by adding `:` and a second number after the line\nnumber.\n*/\nconst gotoLine = view => {\n    let panel = getPanel(view, createLineDialog);\n    if (!panel) {\n        let effects = [dialogEffect.of(true)];\n        if (view.state.field(dialogField, false) == null)\n            effects.push(StateEffect.appendConfig.of([dialogField, baseTheme$1]));\n        view.dispatch({ effects });\n        panel = getPanel(view, createLineDialog);\n    }\n    if (panel)\n        panel.dom.querySelector(\"input\").focus();\n    return true;\n};\nconst baseTheme$1 = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-panel.cm-gotoLine\": {\n        padding: \"2px 6px 4px\",\n        \"& label\": { fontSize: \"80%\" }\n    }\n});\n\nconst defaultHighlightOptions = {\n    highlightWordAroundCursor: false,\n    minSelectionLength: 1,\n    maxMatches: 100,\n    wholeWords: false\n};\nconst highlightConfig = /*@__PURE__*/Facet.define({\n    combine(options) {\n        return combineConfig(options, defaultHighlightOptions, {\n            highlightWordAroundCursor: (a, b) => a || b,\n            minSelectionLength: Math.min,\n            maxMatches: Math.min\n        });\n    }\n});\n/**\nThis extension highlights text that matches the selection. It uses\nthe `\"cm-selectionMatch\"` class for the highlighting. When\n`highlightWordAroundCursor` is enabled, the word at the cursor\nitself will be highlighted with `\"cm-selectionMatch-main\"`.\n*/\nfunction highlightSelectionMatches(options) {\n    let ext = [defaultTheme, matchHighlighter];\n    if (options)\n        ext.push(highlightConfig.of(options));\n    return ext;\n}\nconst matchDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-selectionMatch\" });\nconst mainMatchDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-selectionMatch cm-selectionMatch-main\" });\n// Whether the characters directly outside the given positions are non-word characters\nfunction insideWordBoundaries(check, state, from, to) {\n    return (from == 0 || check(state.sliceDoc(from - 1, from)) != CharCategory.Word) &&\n        (to == state.doc.length || check(state.sliceDoc(to, to + 1)) != CharCategory.Word);\n}\n// Whether the characters directly at the given positions are word characters\nfunction insideWord(check, state, from, to) {\n    return check(state.sliceDoc(from, from + 1)) == CharCategory.Word\n        && check(state.sliceDoc(to - 1, to)) == CharCategory.Word;\n}\nconst matchHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.selectionSet || update.docChanged || update.viewportChanged)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let conf = view.state.facet(highlightConfig);\n        let { state } = view, sel = state.selection;\n        if (sel.ranges.length > 1)\n            return Decoration.none;\n        let range = sel.main, query, check = null;\n        if (range.empty) {\n            if (!conf.highlightWordAroundCursor)\n                return Decoration.none;\n            let word = state.wordAt(range.head);\n            if (!word)\n                return Decoration.none;\n            check = state.charCategorizer(range.head);\n            query = state.sliceDoc(word.from, word.to);\n        }\n        else {\n            let len = range.to - range.from;\n            if (len < conf.minSelectionLength || len > 200)\n                return Decoration.none;\n            if (conf.wholeWords) {\n                query = state.sliceDoc(range.from, range.to); // TODO: allow and include leading/trailing space?\n                check = state.charCategorizer(range.head);\n                if (!(insideWordBoundaries(check, state, range.from, range.to)\n                    && insideWord(check, state, range.from, range.to)))\n                    return Decoration.none;\n            }\n            else {\n                query = state.sliceDoc(range.from, range.to).trim();\n                if (!query)\n                    return Decoration.none;\n            }\n        }\n        let deco = [];\n        for (let part of view.visibleRanges) {\n            let cursor = new SearchCursor(state.doc, query, part.from, part.to);\n            while (!cursor.next().done) {\n                let { from, to } = cursor.value;\n                if (!check || insideWordBoundaries(check, state, from, to)) {\n                    if (range.empty && from <= range.from && to >= range.to)\n                        deco.push(mainMatchDeco.range(from, to));\n                    else if (from >= range.to || to <= range.from)\n                        deco.push(matchDeco.range(from, to));\n                    if (deco.length > conf.maxMatches)\n                        return Decoration.none;\n                }\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\nconst defaultTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-selectionMatch\": { backgroundColor: \"#99ff7780\" },\n    \".cm-searchMatch .cm-selectionMatch\": { backgroundColor: \"transparent\" }\n});\n// Select the words around the cursors.\nconst selectWord = ({ state, dispatch }) => {\n    let { selection } = state;\n    let newSel = EditorSelection.create(selection.ranges.map(range => state.wordAt(range.head) || EditorSelection.cursor(range.head)), selection.mainIndex);\n    if (newSel.eq(selection))\n        return false;\n    dispatch(state.update({ selection: newSel }));\n    return true;\n};\n// Find next occurrence of query relative to last cursor. Wrap around\n// the document if there are no more matches.\nfunction findNextOccurrence(state, query) {\n    let { main, ranges } = state.selection;\n    let word = state.wordAt(main.head), fullWord = word && word.from == main.from && word.to == main.to;\n    for (let cycled = false, cursor = new SearchCursor(state.doc, query, ranges[ranges.length - 1].to);;) {\n        cursor.next();\n        if (cursor.done) {\n            if (cycled)\n                return null;\n            cursor = new SearchCursor(state.doc, query, 0, Math.max(0, ranges[ranges.length - 1].from - 1));\n            cycled = true;\n        }\n        else {\n            if (cycled && ranges.some(r => r.from == cursor.value.from))\n                continue;\n            if (fullWord) {\n                let word = state.wordAt(cursor.value.from);\n                if (!word || word.from != cursor.value.from || word.to != cursor.value.to)\n                    continue;\n            }\n            return cursor.value;\n        }\n    }\n}\n/**\nSelect next occurrence of the current selection. Expand selection\nto the surrounding word when the selection is empty.\n*/\nconst selectNextOccurrence = ({ state, dispatch }) => {\n    let { ranges } = state.selection;\n    if (ranges.some(sel => sel.from === sel.to))\n        return selectWord({ state, dispatch });\n    let searchedText = state.sliceDoc(ranges[0].from, ranges[0].to);\n    if (state.selection.ranges.some(r => state.sliceDoc(r.from, r.to) != searchedText))\n        return false;\n    let range = findNextOccurrence(state, searchedText);\n    if (!range)\n        return false;\n    dispatch(state.update({\n        selection: state.selection.addRange(EditorSelection.range(range.from, range.to), false),\n        effects: EditorView.scrollIntoView(range.to)\n    }));\n    return true;\n};\n\nconst searchConfigFacet = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            top: false,\n            caseSensitive: false,\n            literal: false,\n            regexp: false,\n            wholeWord: false,\n            createPanel: view => new SearchPanel(view),\n            scrollToMatch: range => EditorView.scrollIntoView(range)\n        });\n    }\n});\n/**\nAdd search state to the editor configuration, and optionally\nconfigure the search extension.\n([`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel) will automatically\nenable this if it isn't already on).\n*/\nfunction search(config) {\n    return config ? [searchConfigFacet.of(config), searchExtensions] : searchExtensions;\n}\n/**\nA search query. Part of the editor's search state.\n*/\nclass SearchQuery {\n    /**\n    Create a query object.\n    */\n    constructor(config) {\n        this.search = config.search;\n        this.caseSensitive = !!config.caseSensitive;\n        this.literal = !!config.literal;\n        this.regexp = !!config.regexp;\n        this.replace = config.replace || \"\";\n        this.valid = !!this.search && (!this.regexp || validRegExp(this.search));\n        this.unquoted = this.unquote(this.search);\n        this.wholeWord = !!config.wholeWord;\n    }\n    /**\n    @internal\n    */\n    unquote(text) {\n        return this.literal ? text :\n            text.replace(/\\\\([nrt\\\\])/g, (_, ch) => ch == \"n\" ? \"\\n\" : ch == \"r\" ? \"\\r\" : ch == \"t\" ? \"\\t\" : \"\\\\\");\n    }\n    /**\n    Compare this query to another query.\n    */\n    eq(other) {\n        return this.search == other.search && this.replace == other.replace &&\n            this.caseSensitive == other.caseSensitive && this.regexp == other.regexp &&\n            this.wholeWord == other.wholeWord;\n    }\n    /**\n    @internal\n    */\n    create() {\n        return this.regexp ? new RegExpQuery(this) : new StringQuery(this);\n    }\n    /**\n    Get a search cursor for this query, searching through the given\n    range in the given state.\n    */\n    getCursor(state, from = 0, to) {\n        let st = state.doc ? state : EditorState.create({ doc: state });\n        if (to == null)\n            to = st.doc.length;\n        return this.regexp ? regexpCursor(this, st, from, to) : stringCursor(this, st, from, to);\n    }\n}\nclass QueryType {\n    constructor(spec) {\n        this.spec = spec;\n    }\n}\nfunction stringCursor(spec, state, from, to) {\n    return new SearchCursor(state.doc, spec.unquoted, from, to, spec.caseSensitive ? undefined : x => x.toLowerCase(), spec.wholeWord ? stringWordTest(state.doc, state.charCategorizer(state.selection.main.head)) : undefined);\n}\nfunction stringWordTest(doc, categorizer) {\n    return (from, to, buf, bufPos) => {\n        if (bufPos > from || bufPos + buf.length < to) {\n            bufPos = Math.max(0, from - 2);\n            buf = doc.sliceString(bufPos, Math.min(doc.length, to + 2));\n        }\n        return (categorizer(charBefore(buf, from - bufPos)) != CharCategory.Word ||\n            categorizer(charAfter(buf, from - bufPos)) != CharCategory.Word) &&\n            (categorizer(charAfter(buf, to - bufPos)) != CharCategory.Word ||\n                categorizer(charBefore(buf, to - bufPos)) != CharCategory.Word);\n    };\n}\nclass StringQuery extends QueryType {\n    constructor(spec) {\n        super(spec);\n    }\n    nextMatch(state, curFrom, curTo) {\n        let cursor = stringCursor(this.spec, state, curTo, state.doc.length).nextOverlapping();\n        if (cursor.done)\n            cursor = stringCursor(this.spec, state, 0, curFrom).nextOverlapping();\n        return cursor.done ? null : cursor.value;\n    }\n    // Searching in reverse is, rather than implementing an inverted search\n    // cursor, done by scanning chunk after chunk forward.\n    prevMatchInRange(state, from, to) {\n        for (let pos = to;;) {\n            let start = Math.max(from, pos - 10000 /* ChunkSize */ - this.spec.unquoted.length);\n            let cursor = stringCursor(this.spec, state, start, pos), range = null;\n            while (!cursor.nextOverlapping().done)\n                range = cursor.value;\n            if (range)\n                return range;\n            if (start == from)\n                return null;\n            pos -= 10000 /* ChunkSize */;\n        }\n    }\n    prevMatch(state, curFrom, curTo) {\n        return this.prevMatchInRange(state, 0, curFrom) ||\n            this.prevMatchInRange(state, curTo, state.doc.length);\n    }\n    getReplacement(_result) { return this.spec.unquote(this.spec.replace); }\n    matchAll(state, limit) {\n        let cursor = stringCursor(this.spec, state, 0, state.doc.length), ranges = [];\n        while (!cursor.next().done) {\n            if (ranges.length >= limit)\n                return null;\n            ranges.push(cursor.value);\n        }\n        return ranges;\n    }\n    highlight(state, from, to, add) {\n        let cursor = stringCursor(this.spec, state, Math.max(0, from - this.spec.unquoted.length), Math.min(to + this.spec.unquoted.length, state.doc.length));\n        while (!cursor.next().done)\n            add(cursor.value.from, cursor.value.to);\n    }\n}\nfunction regexpCursor(spec, state, from, to) {\n    return new RegExpCursor(state.doc, spec.search, {\n        ignoreCase: !spec.caseSensitive,\n        test: spec.wholeWord ? regexpWordTest(state.charCategorizer(state.selection.main.head)) : undefined\n    }, from, to);\n}\nfunction charBefore(str, index) {\n    return str.slice(findClusterBreak(str, index, false), index);\n}\nfunction charAfter(str, index) {\n    return str.slice(index, findClusterBreak(str, index));\n}\nfunction regexpWordTest(categorizer) {\n    return (_from, _to, match) => !match[0].length ||\n        (categorizer(charBefore(match.input, match.index)) != CharCategory.Word ||\n            categorizer(charAfter(match.input, match.index)) != CharCategory.Word) &&\n            (categorizer(charAfter(match.input, match.index + match[0].length)) != CharCategory.Word ||\n                categorizer(charBefore(match.input, match.index + match[0].length)) != CharCategory.Word);\n}\nclass RegExpQuery extends QueryType {\n    nextMatch(state, curFrom, curTo) {\n        let cursor = regexpCursor(this.spec, state, curTo, state.doc.length).next();\n        if (cursor.done)\n            cursor = regexpCursor(this.spec, state, 0, curFrom).next();\n        return cursor.done ? null : cursor.value;\n    }\n    prevMatchInRange(state, from, to) {\n        for (let size = 1;; size++) {\n            let start = Math.max(from, to - size * 10000 /* ChunkSize */);\n            let cursor = regexpCursor(this.spec, state, start, to), range = null;\n            while (!cursor.next().done)\n                range = cursor.value;\n            if (range && (start == from || range.from > start + 10))\n                return range;\n            if (start == from)\n                return null;\n        }\n    }\n    prevMatch(state, curFrom, curTo) {\n        return this.prevMatchInRange(state, 0, curFrom) ||\n            this.prevMatchInRange(state, curTo, state.doc.length);\n    }\n    getReplacement(result) {\n        return this.spec.unquote(this.spec.replace.replace(/\\$([$&\\d+])/g, (m, i) => i == \"$\" ? \"$\"\n            : i == \"&\" ? result.match[0]\n                : i != \"0\" && +i < result.match.length ? result.match[i]\n                    : m));\n    }\n    matchAll(state, limit) {\n        let cursor = regexpCursor(this.spec, state, 0, state.doc.length), ranges = [];\n        while (!cursor.next().done) {\n            if (ranges.length >= limit)\n                return null;\n            ranges.push(cursor.value);\n        }\n        return ranges;\n    }\n    highlight(state, from, to, add) {\n        let cursor = regexpCursor(this.spec, state, Math.max(0, from - 250 /* HighlightMargin */), Math.min(to + 250 /* HighlightMargin */, state.doc.length));\n        while (!cursor.next().done)\n            add(cursor.value.from, cursor.value.to);\n    }\n}\n/**\nA state effect that updates the current search query. Note that\nthis only has an effect if the search state has been initialized\n(by including [`search`](https://codemirror.net/6/docs/ref/#search.search) in your configuration or\nby running [`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel) at least\nonce).\n*/\nconst setSearchQuery = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst searchState = /*@__PURE__*/StateField.define({\n    create(state) {\n        return new SearchState(defaultQuery(state).create(), null);\n    },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setSearchQuery))\n                value = new SearchState(effect.value.create(), value.panel);\n            else if (effect.is(togglePanel))\n                value = new SearchState(value.query, effect.value ? createSearchPanel : null);\n        }\n        return value;\n    },\n    provide: f => showPanel.from(f, val => val.panel)\n});\n/**\nGet the current search query from an editor state.\n*/\nfunction getSearchQuery(state) {\n    let curState = state.field(searchState, false);\n    return curState ? curState.query.spec : defaultQuery(state);\n}\n/**\nQuery whether the search panel is open in the given editor state.\n*/\nfunction searchPanelOpen(state) {\n    var _a;\n    return ((_a = state.field(searchState, false)) === null || _a === void 0 ? void 0 : _a.panel) != null;\n}\nclass SearchState {\n    constructor(query, panel) {\n        this.query = query;\n        this.panel = panel;\n    }\n}\nconst matchMark = /*@__PURE__*/Decoration.mark({ class: \"cm-searchMatch\" }), selectedMatchMark = /*@__PURE__*/Decoration.mark({ class: \"cm-searchMatch cm-searchMatch-selected\" });\nconst searchHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.decorations = this.highlight(view.state.field(searchState));\n    }\n    update(update) {\n        let state = update.state.field(searchState);\n        if (state != update.startState.field(searchState) || update.docChanged || update.selectionSet || update.viewportChanged)\n            this.decorations = this.highlight(state);\n    }\n    highlight({ query, panel }) {\n        if (!panel || !query.spec.valid)\n            return Decoration.none;\n        let { view } = this;\n        let builder = new RangeSetBuilder();\n        for (let i = 0, ranges = view.visibleRanges, l = ranges.length; i < l; i++) {\n            let { from, to } = ranges[i];\n            while (i < l - 1 && to > ranges[i + 1].from - 2 * 250 /* HighlightMargin */)\n                to = ranges[++i].to;\n            query.highlight(view.state, from, to, (from, to) => {\n                let selected = view.state.selection.ranges.some(r => r.from == from && r.to == to);\n                builder.add(from, to, selected ? selectedMatchMark : matchMark);\n            });\n        }\n        return builder.finish();\n    }\n}, {\n    decorations: v => v.decorations\n});\nfunction searchCommand(f) {\n    return view => {\n        let state = view.state.field(searchState, false);\n        return state && state.query.spec.valid ? f(view, state) : openSearchPanel(view);\n    };\n}\n/**\nOpen the search panel if it isn't already open, and move the\nselection to the first match after the current main selection.\nWill wrap around to the start of the document when it reaches the\nend.\n*/\nconst findNext = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { to } = view.state.selection.main;\n    let next = query.nextMatch(view.state, to, to);\n    if (!next)\n        return false;\n    let selection = EditorSelection.single(next.from, next.to);\n    let config = view.state.facet(searchConfigFacet);\n    view.dispatch({\n        selection,\n        effects: [announceMatch(view, next), config.scrollToMatch(selection.main, view)],\n        userEvent: \"select.search\"\n    });\n    selectSearchInput(view);\n    return true;\n});\n/**\nMove the selection to the previous instance of the search query,\nbefore the current main selection. Will wrap past the start\nof the document to start searching at the end again.\n*/\nconst findPrevious = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { state } = view, { from } = state.selection.main;\n    let prev = query.prevMatch(state, from, from);\n    if (!prev)\n        return false;\n    let selection = EditorSelection.single(prev.from, prev.to);\n    let config = view.state.facet(searchConfigFacet);\n    view.dispatch({\n        selection,\n        effects: [announceMatch(view, prev), config.scrollToMatch(selection.main, view)],\n        userEvent: \"select.search\"\n    });\n    selectSearchInput(view);\n    return true;\n});\n/**\nSelect all instances of the search query.\n*/\nconst selectMatches = /*@__PURE__*/searchCommand((view, { query }) => {\n    let ranges = query.matchAll(view.state, 1000);\n    if (!ranges || !ranges.length)\n        return false;\n    view.dispatch({\n        selection: EditorSelection.create(ranges.map(r => EditorSelection.range(r.from, r.to))),\n        userEvent: \"select.search.matches\"\n    });\n    return true;\n});\n/**\nSelect all instances of the currently selected text.\n*/\nconst selectSelectionMatches = ({ state, dispatch }) => {\n    let sel = state.selection;\n    if (sel.ranges.length > 1 || sel.main.empty)\n        return false;\n    let { from, to } = sel.main;\n    let ranges = [], main = 0;\n    for (let cur = new SearchCursor(state.doc, state.sliceDoc(from, to)); !cur.next().done;) {\n        if (ranges.length > 1000)\n            return false;\n        if (cur.value.from == from)\n            main = ranges.length;\n        ranges.push(EditorSelection.range(cur.value.from, cur.value.to));\n    }\n    dispatch(state.update({\n        selection: EditorSelection.create(ranges, main),\n        userEvent: \"select.search.matches\"\n    }));\n    return true;\n};\n/**\nReplace the current match of the search query.\n*/\nconst replaceNext = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { state } = view, { from, to } = state.selection.main;\n    if (state.readOnly)\n        return false;\n    let next = query.nextMatch(state, from, from);\n    if (!next)\n        return false;\n    let changes = [], selection, replacement;\n    let effects = [];\n    if (next.from == from && next.to == to) {\n        replacement = state.toText(query.getReplacement(next));\n        changes.push({ from: next.from, to: next.to, insert: replacement });\n        next = query.nextMatch(state, next.from, next.to);\n        effects.push(EditorView.announce.of(state.phrase(\"replaced match on line $\", state.doc.lineAt(from).number) + \".\"));\n    }\n    if (next) {\n        let off = changes.length == 0 || changes[0].from >= next.to ? 0 : next.to - next.from - replacement.length;\n        selection = EditorSelection.single(next.from - off, next.to - off);\n        effects.push(announceMatch(view, next));\n        effects.push(state.facet(searchConfigFacet).scrollToMatch(selection.main, view));\n    }\n    view.dispatch({\n        changes, selection, effects,\n        userEvent: \"input.replace\"\n    });\n    return true;\n});\n/**\nReplace all instances of the search query with the given\nreplacement.\n*/\nconst replaceAll = /*@__PURE__*/searchCommand((view, { query }) => {\n    if (view.state.readOnly)\n        return false;\n    let changes = query.matchAll(view.state, 1e9).map(match => {\n        let { from, to } = match;\n        return { from, to, insert: query.getReplacement(match) };\n    });\n    if (!changes.length)\n        return false;\n    let announceText = view.state.phrase(\"replaced $ matches\", changes.length) + \".\";\n    view.dispatch({\n        changes,\n        effects: EditorView.announce.of(announceText),\n        userEvent: \"input.replace.all\"\n    });\n    return true;\n});\nfunction createSearchPanel(view) {\n    return view.state.facet(searchConfigFacet).createPanel(view);\n}\nfunction defaultQuery(state, fallback) {\n    var _a, _b, _c, _d, _e;\n    let sel = state.selection.main;\n    let selText = sel.empty || sel.to > sel.from + 100 ? \"\" : state.sliceDoc(sel.from, sel.to);\n    if (fallback && !selText)\n        return fallback;\n    let config = state.facet(searchConfigFacet);\n    return new SearchQuery({\n        search: ((_a = fallback === null || fallback === void 0 ? void 0 : fallback.literal) !== null && _a !== void 0 ? _a : config.literal) ? selText : selText.replace(/\\n/g, \"\\\\n\"),\n        caseSensitive: (_b = fallback === null || fallback === void 0 ? void 0 : fallback.caseSensitive) !== null && _b !== void 0 ? _b : config.caseSensitive,\n        literal: (_c = fallback === null || fallback === void 0 ? void 0 : fallback.literal) !== null && _c !== void 0 ? _c : config.literal,\n        regexp: (_d = fallback === null || fallback === void 0 ? void 0 : fallback.regexp) !== null && _d !== void 0 ? _d : config.regexp,\n        wholeWord: (_e = fallback === null || fallback === void 0 ? void 0 : fallback.wholeWord) !== null && _e !== void 0 ? _e : config.wholeWord\n    });\n}\nfunction getSearchInput(view) {\n    let panel = getPanel(view, createSearchPanel);\n    return panel && panel.dom.querySelector(\"[main-field]\");\n}\nfunction selectSearchInput(view) {\n    let input = getSearchInput(view);\n    if (input && input == view.root.activeElement)\n        input.select();\n}\n/**\nMake sure the search panel is open and focused.\n*/\nconst openSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (state && state.panel) {\n        let searchInput = getSearchInput(view);\n        if (searchInput && searchInput != view.root.activeElement) {\n            let query = defaultQuery(view.state, state.query.spec);\n            if (query.valid)\n                view.dispatch({ effects: setSearchQuery.of(query) });\n            searchInput.focus();\n            searchInput.select();\n        }\n    }\n    else {\n        view.dispatch({ effects: [\n                togglePanel.of(true),\n                state ? setSearchQuery.of(defaultQuery(view.state, state.query.spec)) : StateEffect.appendConfig.of(searchExtensions)\n            ] });\n    }\n    return true;\n};\n/**\nClose the search panel.\n*/\nconst closeSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (!state || !state.panel)\n        return false;\n    let panel = getPanel(view, createSearchPanel);\n    if (panel && panel.dom.contains(view.root.activeElement))\n        view.focus();\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nDefault search-related key bindings.\n\n - Mod-f: [`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel)\n - F3, Mod-g: [`findNext`](https://codemirror.net/6/docs/ref/#search.findNext)\n - Shift-F3, Shift-Mod-g: [`findPrevious`](https://codemirror.net/6/docs/ref/#search.findPrevious)\n - Alt-g: [`gotoLine`](https://codemirror.net/6/docs/ref/#search.gotoLine)\n - Mod-d: [`selectNextOccurrence`](https://codemirror.net/6/docs/ref/#search.selectNextOccurrence)\n*/\nconst searchKeymap = [\n    { key: \"Mod-f\", run: openSearchPanel, scope: \"editor search-panel\" },\n    { key: \"F3\", run: findNext, shift: findPrevious, scope: \"editor search-panel\", preventDefault: true },\n    { key: \"Mod-g\", run: findNext, shift: findPrevious, scope: \"editor search-panel\", preventDefault: true },\n    { key: \"Escape\", run: closeSearchPanel, scope: \"editor search-panel\" },\n    { key: \"Mod-Shift-l\", run: selectSelectionMatches },\n    { key: \"Alt-g\", run: gotoLine },\n    { key: \"Mod-d\", run: selectNextOccurrence, preventDefault: true },\n];\nclass SearchPanel {\n    constructor(view) {\n        this.view = view;\n        let query = this.query = view.state.field(searchState).query.spec;\n        this.commit = this.commit.bind(this);\n        this.searchField = elt(\"input\", {\n            value: query.search,\n            placeholder: phrase(view, \"Find\"),\n            \"aria-label\": phrase(view, \"Find\"),\n            class: \"cm-textfield\",\n            name: \"search\",\n            form: \"\",\n            \"main-field\": \"true\",\n            onchange: this.commit,\n            onkeyup: this.commit\n        });\n        this.replaceField = elt(\"input\", {\n            value: query.replace,\n            placeholder: phrase(view, \"Replace\"),\n            \"aria-label\": phrase(view, \"Replace\"),\n            class: \"cm-textfield\",\n            name: \"replace\",\n            form: \"\",\n            onchange: this.commit,\n            onkeyup: this.commit\n        });\n        this.caseField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"case\",\n            form: \"\",\n            checked: query.caseSensitive,\n            onchange: this.commit\n        });\n        this.reField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"re\",\n            form: \"\",\n            checked: query.regexp,\n            onchange: this.commit\n        });\n        this.wordField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"word\",\n            form: \"\",\n            checked: query.wholeWord,\n            onchange: this.commit\n        });\n        function button(name, onclick, content) {\n            return elt(\"button\", { class: \"cm-button\", name, onclick, type: \"button\" }, content);\n        }\n        this.dom = elt(\"div\", { onkeydown: (e) => this.keydown(e), class: \"cm-search\" }, [\n            this.searchField,\n            button(\"next\", () => findNext(view), [phrase(view, \"next\")]),\n            button(\"prev\", () => findPrevious(view), [phrase(view, \"previous\")]),\n            button(\"select\", () => selectMatches(view), [phrase(view, \"all\")]),\n            elt(\"label\", null, [this.caseField, phrase(view, \"match case\")]),\n            elt(\"label\", null, [this.reField, phrase(view, \"regexp\")]),\n            elt(\"label\", null, [this.wordField, phrase(view, \"by word\")]),\n            ...view.state.readOnly ? [] : [\n                elt(\"br\"),\n                this.replaceField,\n                button(\"replace\", () => replaceNext(view), [phrase(view, \"replace\")]),\n                button(\"replaceAll\", () => replaceAll(view), [phrase(view, \"replace all\")])\n            ],\n            elt(\"button\", {\n                name: \"close\",\n                onclick: () => closeSearchPanel(view),\n                \"aria-label\": phrase(view, \"close\"),\n                type: \"button\"\n            }, [\"×\"])\n        ]);\n    }\n    commit() {\n        let query = new SearchQuery({\n            search: this.searchField.value,\n            caseSensitive: this.caseField.checked,\n            regexp: this.reField.checked,\n            wholeWord: this.wordField.checked,\n            replace: this.replaceField.value,\n        });\n        if (!query.eq(this.query)) {\n            this.query = query;\n            this.view.dispatch({ effects: setSearchQuery.of(query) });\n        }\n    }\n    keydown(e) {\n        if (runScopeHandlers(this.view, e, \"search-panel\")) {\n            e.preventDefault();\n        }\n        else if (e.keyCode == 13 && e.target == this.searchField) {\n            e.preventDefault();\n            (e.shiftKey ? findPrevious : findNext)(this.view);\n        }\n        else if (e.keyCode == 13 && e.target == this.replaceField) {\n            e.preventDefault();\n            replaceNext(this.view);\n        }\n    }\n    update(update) {\n        for (let tr of update.transactions)\n            for (let effect of tr.effects) {\n                if (effect.is(setSearchQuery) && !effect.value.eq(this.query))\n                    this.setQuery(effect.value);\n            }\n    }\n    setQuery(query) {\n        this.query = query;\n        this.searchField.value = query.search;\n        this.replaceField.value = query.replace;\n        this.caseField.checked = query.caseSensitive;\n        this.reField.checked = query.regexp;\n        this.wordField.checked = query.wholeWord;\n    }\n    mount() {\n        this.searchField.select();\n    }\n    get pos() { return 80; }\n    get top() { return this.view.state.facet(searchConfigFacet).top; }\n}\nfunction phrase(view, phrase) { return view.state.phrase(phrase); }\nconst AnnounceMargin = 30;\nconst Break = /[\\s\\.,:;?!]/;\nfunction announceMatch(view, { from, to }) {\n    let line = view.state.doc.lineAt(from), lineEnd = view.state.doc.lineAt(to).to;\n    let start = Math.max(line.from, from - AnnounceMargin), end = Math.min(lineEnd, to + AnnounceMargin);\n    let text = view.state.sliceDoc(start, end);\n    if (start != line.from) {\n        for (let i = 0; i < AnnounceMargin; i++)\n            if (!Break.test(text[i + 1]) && Break.test(text[i])) {\n                text = text.slice(i);\n                break;\n            }\n    }\n    if (end != lineEnd) {\n        for (let i = text.length - 1; i > text.length - AnnounceMargin; i--)\n            if (!Break.test(text[i - 1]) && Break.test(text[i])) {\n                text = text.slice(0, i);\n                break;\n            }\n    }\n    return EditorView.announce.of(`${view.state.phrase(\"current match\")}. ${text} ${view.state.phrase(\"on line\")} ${line.number}.`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-panel.cm-search\": {\n        padding: \"2px 6px 4px\",\n        position: \"relative\",\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"4px\",\n            backgroundColor: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        },\n        \"& input, & button, & label\": {\n            margin: \".2em .6em .2em 0\"\n        },\n        \"& input[type=checkbox]\": {\n            marginRight: \".2em\"\n        },\n        \"& label\": {\n            fontSize: \"80%\",\n            whiteSpace: \"pre\"\n        }\n    },\n    \"&light .cm-searchMatch\": { backgroundColor: \"#ffff0054\" },\n    \"&dark .cm-searchMatch\": { backgroundColor: \"#00ffff8a\" },\n    \"&light .cm-searchMatch-selected\": { backgroundColor: \"#ff6a0054\" },\n    \"&dark .cm-searchMatch-selected\": { backgroundColor: \"#ff00ff8a\" }\n});\nconst searchExtensions = [\n    searchState,\n    /*@__PURE__*/Prec.lowest(searchHighlighter),\n    baseTheme\n];\n\nexport { RegExpCursor, SearchCursor, SearchQuery, closeSearchPanel, findNext, findPrevious, getSearchQuery, gotoLine, highlightSelectionMatches, openSearchPanel, replaceAll, replaceNext, search, searchKeymap, searchPanelOpen, selectMatches, selectNextOccurrence, selectSelectionMatches, setSearchQuery };\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { EditorExtensionRegistry } from './extension';\nimport { CodeMirrorEditor } from './editor';\nimport { EditorLanguageRegistry } from './language';\nimport { keymap } from '@codemirror/view';\nimport { searchKeymap } from '@codemirror/search';\n/**\n * CodeMirror editor factory.\n */\nexport class CodeMirrorEditorFactory {\n    /**\n     * Construct an IEditorFactoryService for CodeMirrorEditors.\n     */\n    constructor(options = {}) {\n        var _a, _b, _c;\n        /**\n         * Create a new editor for inline code.\n         */\n        this.newInlineEditor = (options) => {\n            var _a;\n            options.host.dataset.type = 'inline';\n            return this.newEditor({\n                ...options,\n                config: { ...this.inlineCodeMirrorConfig, ...(options.config || {}) },\n                inline: true,\n                // FIXME the search keymap should be added in the search plugin\n                extensions: [keymap.of(searchKeymap)].concat((_a = options.extensions) !== null && _a !== void 0 ? _a : [])\n            });\n        };\n        /**\n         * Create a new editor for a full document.\n         */\n        this.newDocumentEditor = (options) => {\n            var _a, _b;\n            options.host.dataset.type = 'document';\n            return this.newEditor({\n                ...options,\n                config: { ...this.documentCodeMirrorConfig, ...((_a = options.config) !== null && _a !== void 0 ? _a : {}) },\n                inline: false,\n                extensions: [\n                    keymap.of([\n                        {\n                            key: 'Shift-Enter',\n                            run: (target) => {\n                                return true;\n                            }\n                        }\n                    ])\n                ].concat((_b = options.extensions) !== null && _b !== void 0 ? _b : [])\n            });\n        };\n        this.languages = (_a = options.languages) !== null && _a !== void 0 ? _a : new EditorLanguageRegistry();\n        this.extensions = (_b = options.extensions) !== null && _b !== void 0 ? _b : new EditorExtensionRegistry();\n        this.translator = (_c = options.translator) !== null && _c !== void 0 ? _c : nullTranslator;\n        this.inlineCodeMirrorConfig = {};\n        this.documentCodeMirrorConfig = {\n            lineNumbers: true,\n            scrollPastEnd: true\n        };\n    }\n    /**\n     * Create a new editor\n     *\n     * @param options Editor options\n     * @returns The editor\n     */\n    newEditor(options) {\n        const editor = new CodeMirrorEditor({\n            extensionsRegistry: this.extensions,\n            languages: this.languages,\n            translator: this.translator,\n            ...options\n        });\n        return editor;\n    }\n}\n//# sourceMappingURL=factory.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { IEditorMimeTypeService } from '@jupyterlab/codeeditor';\nimport { PathExt } from '@jupyterlab/coreutils';\n/**\n * The mime type service for CodeMirror.\n */\nexport class CodeMirrorMimeTypeService {\n    constructor(languages) {\n        this.languages = languages;\n    }\n    /**\n     * Returns a mime type for the given language info.\n     *\n     * #### Notes\n     * If a mime type cannot be found returns the default mime type `text/plain`, never `null`.\n     */\n    getMimeTypeByLanguage(info) {\n        const ext = info.file_extension || '';\n        const mode = this.languages.findBest(info.codemirror_mode || {\n            mimetype: info.mimetype,\n            name: info.name,\n            ext: [ext.split('.').slice(-1)[0]]\n        });\n        return mode\n            ? mode.mime\n            : IEditorMimeTypeService.defaultMimeType;\n    }\n    /**\n     * Returns a mime type for the given file path.\n     *\n     * #### Notes\n     * If a mime type cannot be found returns the default mime type `text/plain`, never `null`.\n     */\n    getMimeTypeByFilePath(path) {\n        var _a;\n        const ext = PathExt.extname(path);\n        if (ext === '.ipy') {\n            return 'text/x-python';\n        }\n        else if (ext === '.md') {\n            return 'text/x-ipythongfm';\n        }\n        const mode = this.languages.findByFileName(path);\n        return mode\n            ? Array.isArray(mode.mime)\n                ? (_a = mode.mime[0]) !== null && _a !== void 0 ? _a : IEditorMimeTypeService.defaultMimeType\n                : mode.mime\n            : IEditorMimeTypeService.defaultMimeType;\n    }\n}\n//# sourceMappingURL=mimetype.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { EditorSelection, StateEffect, StateField } from '@codemirror/state';\nimport { Decoration, EditorView } from '@codemirror/view';\nimport { GenericSearchProvider, TextSearchEngine } from '@jupyterlab/documentsearch';\nimport { Signal } from '@lumino/signaling';\n/**\n * Search provider for editors.\n */\nexport class EditorSearchProvider {\n    /**\n     * Constructor\n     */\n    constructor() {\n        /**\n         * Current match index\n         */\n        this.currentIndex = null;\n        /**\n         * Current search query\n         */\n        this.query = null;\n        this._isActive = true;\n        this._inSelection = null;\n        this._isDisposed = false;\n        this._cmHandler = null;\n        this.currentIndex = null;\n        this._stateChanged = new Signal(this);\n    }\n    /**\n     * CodeMirror search highlighter\n     */\n    get cmHandler() {\n        if (!this._cmHandler) {\n            this._cmHandler = new CodeMirrorSearchHighlighter(this.editor);\n        }\n        return this._cmHandler;\n    }\n    /**\n     * Changed signal to be emitted when search matches change.\n     */\n    get stateChanged() {\n        return this._stateChanged;\n    }\n    /**\n     * Current match index\n     */\n    get currentMatchIndex() {\n        return this.isActive ? this.currentIndex : null;\n    }\n    /**\n     * Whether the cell search is active.\n     *\n     * This is used when applying search only on selected cells.\n     */\n    get isActive() {\n        return this._isActive;\n    }\n    /**\n     * Whether the search provider is disposed or not.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Number of matches in the cell.\n     */\n    get matchesCount() {\n        return this.isActive ? this.cmHandler.matches.length : 0;\n    }\n    /**\n     * Clear currently highlighted match\n     */\n    clearHighlight() {\n        this.currentIndex = null;\n        this.cmHandler.clearHighlight();\n        return Promise.resolve();\n    }\n    /**\n     * Dispose the search provider\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._isDisposed = true;\n        Signal.clearData(this);\n        if (this.isActive) {\n            this.endQuery().catch(reason => {\n                console.error(`Failed to end search query on cells.`, reason);\n            });\n        }\n    }\n    /**\n     * Set `isActive` status.\n     *\n     * #### Notes\n     * It will start or end the search\n     *\n     * @param v New value\n     */\n    async setIsActive(v) {\n        if (this._isActive === v) {\n            return;\n        }\n        this._isActive = v;\n        if (this._isActive) {\n            if (this.query !== null) {\n                await this.startQuery(this.query, this.filters);\n            }\n        }\n        else {\n            await this.endQuery();\n        }\n    }\n    /**\n     * Set whether search should be limitted to specified text selection.\n     */\n    async setSearchSelection(selection) {\n        if (this._inSelection === selection) {\n            return;\n        }\n        this._inSelection = selection;\n        await this.updateCodeMirror(this.model.sharedModel.getSource());\n        this._stateChanged.emit();\n    }\n    /**\n     * Set whether user selection should be protected from modifications.\n     *\n     * If disabled, the selection will be updated on search and on editor focus\n     * to cover the current match. We need to protect selection from modifications\n     * for both: search in text and search in cells; since `setSearchSelection`\n     * is only telling us about search in text, we need to have an additional\n     * way to signal that either search in text or in cells is active, or for\n     * any other reason selection range should be protected.\n     */\n    setProtectSelection(v) {\n        this.cmHandler.protectSelection = v;\n    }\n    /**\n     * Initialize the search using the provided options. Should update the UI\n     * to highlight all matches and \"select\" the first match.\n     *\n     * @param query A RegExp to be use to perform the search\n     * @param filters Filter parameters to pass to provider\n     */\n    async startQuery(query, filters) {\n        this.query = query;\n        this.filters = filters;\n        // Search input\n        const content = this.model.sharedModel.getSource();\n        await this.updateCodeMirror(content);\n        this.model.sharedModel.changed.connect(this.onSharedModelChanged, this);\n    }\n    /**\n     * Stop the search and clean any UI elements.\n     */\n    async endQuery() {\n        await this.clearHighlight();\n        await this.cmHandler.endQuery();\n        this.currentIndex = null;\n    }\n    /**\n     * Highlight the next match.\n     *\n     * @returns The next match if there is one.\n     */\n    async highlightNext(loop = true, options) {\n        if (this.matchesCount === 0 || !this.isActive) {\n            this.currentIndex = null;\n        }\n        else {\n            let match = await this.cmHandler.highlightNext(options);\n            if (match) {\n                this.currentIndex = this.cmHandler.currentIndex;\n            }\n            else {\n                // Note: the loop logic is only used in single-editor (e.g. file editor)\n                // provider sub-classes, notebook has it's own loop logic and ignores\n                // `currentIndex` as set here.\n                this.currentIndex = loop ? 0 : null;\n            }\n            return match;\n        }\n        return Promise.resolve(this.getCurrentMatch());\n    }\n    /**\n     * Highlight the previous match.\n     *\n     * @returns The previous match if there is one.\n     */\n    async highlightPrevious(loop = true, options) {\n        if (this.matchesCount === 0 || !this.isActive) {\n            this.currentIndex = null;\n        }\n        else {\n            let match = await this.cmHandler.highlightPrevious(options);\n            if (match) {\n                this.currentIndex = this.cmHandler.currentIndex;\n            }\n            else {\n                this.currentIndex = loop ? this.matchesCount - 1 : null;\n            }\n            return match;\n        }\n        return Promise.resolve(this.getCurrentMatch());\n    }\n    /**\n     * Replace the currently selected match with the provided text.\n     *\n     * If no match is selected, it won't do anything.\n     *\n     * The caller of this method is expected to call `highlightNext` if after\n     * calling `replaceCurrentMatch()` attribute `this.currentIndex` is null.\n     * It is necesary to let the caller handle highlighting because this\n     * method is used in composition pattern (search engine of notebook cells)\n     * and highligthing on the composer (notebook) level needs to switch to next\n     * engine (cell) with matches.\n     *\n     * @param newText The replacement text.\n     * @returns Whether a replace occurred.\n     */\n    replaceCurrentMatch(newText, loop, options) {\n        if (!this.isActive) {\n            return Promise.resolve(false);\n        }\n        let occurred = false;\n        if (this.currentIndex !== null &&\n            this.currentIndex < this.cmHandler.matches.length) {\n            const match = this.getCurrentMatch();\n            // If cursor there is no match selected, highlight the next match\n            if (!match) {\n                this.currentIndex = null;\n            }\n            else {\n                this.cmHandler.matches.splice(this.currentIndex, 1);\n                this.currentIndex =\n                    this.currentIndex < this.cmHandler.matches.length\n                        ? Math.max(this.currentIndex - 1, 0)\n                        : null;\n                const substitutedText = (options === null || options === void 0 ? void 0 : options.regularExpression)\n                    ? match.text.replace(this.query, newText)\n                    : newText;\n                const insertText = (options === null || options === void 0 ? void 0 : options.preserveCase)\n                    ? GenericSearchProvider.preserveCase(match.text, substitutedText)\n                    : substitutedText;\n                this.model.sharedModel.updateSource(match.position, match.position + match.text.length, insertText);\n                occurred = true;\n            }\n        }\n        return Promise.resolve(occurred);\n    }\n    /**\n     * Replace all matches in the cell source with the provided text\n     *\n     * @param newText The replacement text.\n     * @returns Whether a replace occurred.\n     */\n    replaceAllMatches(newText, options) {\n        if (!this.isActive) {\n            return Promise.resolve(false);\n        }\n        let occurred = this.cmHandler.matches.length > 0;\n        let src = this.model.sharedModel.getSource();\n        let lastEnd = 0;\n        const finalSrc = this.cmHandler.matches.reduce((agg, match) => {\n            const start = match.position;\n            const end = start + match.text.length;\n            const substitutedText = (options === null || options === void 0 ? void 0 : options.regularExpression)\n                ? match.text.replace(this.query, newText)\n                : newText;\n            const insertText = (options === null || options === void 0 ? void 0 : options.preserveCase)\n                ? GenericSearchProvider.preserveCase(match.text, substitutedText)\n                : substitutedText;\n            const newStep = `${agg}${src.slice(lastEnd, start)}${insertText}`;\n            lastEnd = end;\n            return newStep;\n        }, '');\n        if (occurred) {\n            this.cmHandler.matches = [];\n            this.currentIndex = null;\n            this.model.sharedModel.setSource(`${finalSrc}${src.slice(lastEnd)}`);\n        }\n        return Promise.resolve(occurred);\n    }\n    /**\n     * Get the current match if it exists.\n     *\n     * @returns The current match\n     */\n    getCurrentMatch() {\n        if (this.currentIndex === null) {\n            return undefined;\n        }\n        else {\n            let match = undefined;\n            if (this.currentIndex < this.cmHandler.matches.length) {\n                match = this.cmHandler.matches[this.currentIndex];\n            }\n            return match;\n        }\n    }\n    /**\n     * Callback on source change\n     *\n     * @param emitter Source of the change\n     * @param changes Source change\n     */\n    async onSharedModelChanged(emitter, changes) {\n        if (changes.sourceChange) {\n            await this.updateCodeMirror(emitter.getSource());\n            this._stateChanged.emit();\n        }\n    }\n    /**\n     * Update matches\n     */\n    async updateCodeMirror(content) {\n        if (this.query !== null && this.isActive) {\n            const allMatches = await TextSearchEngine.search(this.query, content);\n            if (this._inSelection) {\n                const editor = this.editor;\n                const start = editor.getOffsetAt(this._inSelection.start);\n                const end = editor.getOffsetAt(this._inSelection.end);\n                this.cmHandler.matches = allMatches.filter(match => match.position >= start && match.position <= end);\n                // A special case to always have a current match when in line selection mode.\n                if (this.cmHandler.currentIndex === null &&\n                    this.cmHandler.matches.length > 0) {\n                    await this.cmHandler.highlightNext({\n                        from: 'selection',\n                        select: false,\n                        scroll: false\n                    });\n                }\n                this.currentIndex = this.cmHandler.currentIndex;\n            }\n            else {\n                this.cmHandler.matches = allMatches;\n            }\n        }\n        else {\n            this.cmHandler.matches = [];\n        }\n    }\n}\n/**\n * Helper class to highlight texts in a code mirror editor.\n *\n * Highlighted texts (aka `matches`) must be provided through\n * the `matches` attributes.\n *\n * **NOTES:**\n * - to retain the selection visibility `drawSelection` extension is needed.\n * - highlighting starts from the cursor (if editor is focused and `from` is set\n *   to `'auto'`, cursor moved, or `from` argument is set to `'selection'` or\n *   `'selection-start'`), or from last \"current\" match otherwise.\n * - `currentIndex` is the (readonly) source of truth for the current match.\n */\nexport class CodeMirrorSearchHighlighter {\n    /**\n     * Constructor\n     *\n     * @param editor The CodeMirror editor\n     */\n    constructor(editor) {\n        this._current = null;\n        this._cm = editor;\n        this._matches = new Array();\n        this._currentIndex = null;\n        this._highlightEffect = StateEffect.define({\n            map: (value, mapping) => {\n                const transform = (v) => ({\n                    text: v.text,\n                    position: mapping.mapPos(v.position)\n                });\n                return {\n                    matches: value.matches.map(transform),\n                    currentMatch: value.currentMatch\n                        ? transform(value.currentMatch)\n                        : null\n                };\n            }\n        });\n        this._highlightMark = Decoration.mark({ class: 'cm-searching' });\n        this._currentMark = Decoration.mark({ class: 'jp-current-match' });\n        this._highlightField = StateField.define({\n            create: () => {\n                return Decoration.none;\n            },\n            update: (highlights, transaction) => {\n                highlights = highlights.map(transaction.changes);\n                for (let ef of transaction.effects) {\n                    if (ef.is(this._highlightEffect)) {\n                        const e = ef;\n                        if (e.value.matches.length) {\n                            // Note: nesting will vary; sometimes `.cm-searching` will be\n                            // inside `.jp-current-match`, sometime the other way round.\n                            highlights = highlights.update({\n                                add: e.value.matches.map(m => this._highlightMark.range(m.position, m.position + m.text.length)),\n                                // filter out old marks\n                                filter: () => false\n                            });\n                            highlights = highlights.update({\n                                add: e.value.currentMatch\n                                    ? [\n                                        this._currentMark.range(e.value.currentMatch.position, e.value.currentMatch.position +\n                                            e.value.currentMatch.text.length)\n                                    ]\n                                    : []\n                            });\n                        }\n                        else {\n                            highlights = Decoration.none;\n                        }\n                    }\n                }\n                return highlights;\n            },\n            provide: f => EditorView.decorations.from(f)\n        });\n        this._domEventHandlers = EditorView.domEventHandlers({\n            focus: () => {\n                // Set cursor on active match when editor gets focused.\n                this._selectCurrentMatch();\n            }\n        });\n    }\n    /**\n     * The current index of the selected match.\n     */\n    get currentIndex() {\n        return this._currentIndex;\n    }\n    /**\n     * The list of matches\n     */\n    get matches() {\n        return this._matches;\n    }\n    set matches(v) {\n        this._matches = v;\n        if (this._currentIndex !== null &&\n            this._currentIndex > this._matches.length) {\n            this._currentIndex = this._matches.length > 0 ? 0 : null;\n        }\n        this._highlightCurrentMatch({ select: false });\n    }\n    /**\n     * Whether the cursor/selection should not be modified.\n     */\n    get protectSelection() {\n        return this._protectSelection;\n    }\n    set protectSelection(v) {\n        this._protectSelection = v;\n    }\n    /**\n     * Clear all highlighted matches\n     */\n    clearHighlight() {\n        this._currentIndex = null;\n        this._highlightCurrentMatch();\n    }\n    /**\n     * Clear the highlighted matches.\n     */\n    endQuery() {\n        this._currentIndex = null;\n        this._matches = [];\n        if (this._cm) {\n            this._cm.editor.dispatch({\n                effects: this._highlightEffect.of({ matches: [], currentMatch: null })\n            });\n        }\n        return Promise.resolve();\n    }\n    /**\n     * Highlight the next match\n     *\n     * @returns The next match if available\n     */\n    highlightNext(options) {\n        var _a;\n        this._currentIndex = this._findNext(false, (_a = options === null || options === void 0 ? void 0 : options.from) !== null && _a !== void 0 ? _a : 'auto');\n        this._highlightCurrentMatch(options);\n        return Promise.resolve(this._currentIndex !== null\n            ? this._matches[this._currentIndex]\n            : undefined);\n    }\n    /**\n     * Highlight the previous match\n     *\n     * @returns The previous match if available\n     */\n    highlightPrevious(options) {\n        var _a;\n        this._currentIndex = this._findNext(true, (_a = options === null || options === void 0 ? void 0 : options.from) !== null && _a !== void 0 ? _a : 'auto');\n        this._highlightCurrentMatch(options);\n        return Promise.resolve(this._currentIndex !== null\n            ? this._matches[this._currentIndex]\n            : undefined);\n    }\n    /**\n     * Set the editor\n     *\n     * @param editor Editor\n     */\n    setEditor(editor) {\n        if (this._cm) {\n            throw new Error('CodeMirrorEditor already set.');\n        }\n        else {\n            this._cm = editor;\n            if (this._currentIndex !== null) {\n                this._highlightCurrentMatch();\n            }\n            this._cm.editor.dispatch({\n                effects: StateEffect.appendConfig.of(this._domEventHandlers)\n            });\n            this._refresh();\n        }\n    }\n    _selectCurrentMatch(scroll = true) {\n        // This method has two responsibilities:\n        // 1) Scroll the current match into the view - useful for long lines,\n        //    and file editors with more lines that fit on the screen\n        // 2) When user has focus on the editor (not search box) and presses\n        //    ctrl + g/ctrl + shift + g to jump to next match they want their\n        //    cursor to jump too.\n        // We execute (1) and (2) together as CodeMirror has a special code path\n        // to handle both in a single dispatch.\n        // The (2) case is inapplicable to search in selection mode, as it would\n        // invalidate the query selection, so in that case we only execute (1).\n        const match = this._current;\n        if (!match) {\n            return;\n        }\n        if (!this._cm) {\n            return;\n        }\n        const cursor = {\n            anchor: match.position,\n            head: match.position + match.text.length\n        };\n        const selection = this._cm.editor.state.selection.main;\n        if ((selection.from === match.position &&\n            selection.to === match.position + match.text.length) ||\n            this._protectSelection) {\n            // Correct selection is already set or search is restricted to selection:\n            // scroll without changing the selection.\n            if (scroll) {\n                this._cm.editor.dispatch({\n                    effects: EditorView.scrollIntoView(EditorSelection.range(cursor.anchor, cursor.head))\n                });\n                return;\n            }\n        }\n        else {\n            this._cm.editor.dispatch({\n                selection: cursor,\n                scrollIntoView: scroll\n            });\n        }\n    }\n    _highlightCurrentMatch(options) {\n        var _a, _b, _c;\n        if (!this._cm) {\n            // no-op\n            return;\n        }\n        // Highlight the current index\n        if (this._currentIndex !== null) {\n            const match = this.matches[this._currentIndex];\n            this._current = match;\n            // We do not change selection nor scroll if:\n            // - user is selecting text,\n            // - document was modified\n            if ((_a = options === null || options === void 0 ? void 0 : options.select) !== null && _a !== void 0 ? _a : true) {\n                if (this._cm.hasFocus()) {\n                    // If editor is focused we actually set the cursor on the match.\n                    this._selectCurrentMatch((_b = options === null || options === void 0 ? void 0 : options.scroll) !== null && _b !== void 0 ? _b : true);\n                }\n                else if ((_c = options === null || options === void 0 ? void 0 : options.scroll) !== null && _c !== void 0 ? _c : true) {\n                    // otherwise we just scroll to preserve the selection.\n                    this._cm.editor.dispatch({\n                        effects: EditorView.scrollIntoView(match.position)\n                    });\n                }\n            }\n        }\n        else {\n            this._current = null;\n        }\n        this._refresh();\n    }\n    _refresh() {\n        if (!this._cm) {\n            // no-op\n            return;\n        }\n        let effects = [\n            this._highlightEffect.of({\n                matches: this.matches,\n                currentMatch: this._current\n            })\n        ];\n        if (!this._cm.state.field(this._highlightField, false)) {\n            effects.push(StateEffect.appendConfig.of([this._highlightField]));\n        }\n        this._cm.editor.dispatch({ effects });\n    }\n    _findNext(reverse, from = 'auto') {\n        if (this._matches.length === 0) {\n            // No-op\n            return null;\n        }\n        let lastPosition = 0;\n        if ((from === 'auto' && this._cm.hasFocus()) || from === 'selection') {\n            const cursor = this._cm.state.selection.main;\n            lastPosition = reverse ? cursor.anchor : cursor.head;\n        }\n        else if (from === 'selection-start') {\n            const cursor = this._cm.state.selection.main;\n            lastPosition = Math.min(cursor.anchor, cursor.head);\n        }\n        else if (from === 'start') {\n            lastPosition = 0;\n        }\n        else if (this._current) {\n            lastPosition = reverse\n                ? this._current.position\n                : this._current.position + this._current.text.length;\n        }\n        if (lastPosition === 0 && reverse && this.currentIndex === null) {\n            // The default position is (0, 0) but we want to start from the end in that case\n            lastPosition = this._cm.doc.length;\n        }\n        const position = lastPosition;\n        let found = Utils.findNext(this._matches, position, 0, this._matches.length - 1);\n        if (found === null) {\n            // Don't loop\n            return reverse ? this._matches.length - 1 : null;\n        }\n        if (reverse) {\n            found -= 1;\n            if (found < 0) {\n                // Don't loop\n                return null;\n            }\n        }\n        return found;\n    }\n}\n/**\n * Helpers namespace\n */\nvar Utils;\n(function (Utils) {\n    /**\n     * Find the closest match at `position` just after it.\n     *\n     * #### Notes\n     * Search is done using a binary search algorithm\n     *\n     * @param matches List of matches\n     * @param position Searched position\n     * @param lowerBound Lower range index\n     * @param higherBound High range index\n     * @returns The next match or null if none exists\n     */\n    function findNext(matches, position, lowerBound = 0, higherBound = Infinity) {\n        higherBound = Math.min(matches.length - 1, higherBound);\n        while (lowerBound <= higherBound) {\n            let middle = Math.floor(0.5 * (lowerBound + higherBound));\n            const currentPosition = matches[middle].position;\n            if (currentPosition < position) {\n                lowerBound = middle + 1;\n                if (lowerBound < matches.length &&\n                    matches[lowerBound].position > position) {\n                    return lowerBound;\n                }\n            }\n            else if (currentPosition > position) {\n                higherBound = middle - 1;\n                if (higherBound > 0 && matches[higherBound].position < position) {\n                    return middle;\n                }\n            }\n            else {\n                return middle;\n            }\n        }\n        // Next could be the first item\n        const first = lowerBound > 0 ? lowerBound - 1 : 0;\n        const match = matches[first];\n        return match.position >= position ? first : null;\n    }\n    Utils.findNext = findNext;\n})(Utils || (Utils = {}));\n//# sourceMappingURL=searchprovider.js.map","/*\n * Copyright (c) Jupyter Development Team.\n * Distributed under the terms of the Modified BSD License.\n */\nimport { Token } from '@lumino/coreutils';\n/**\n * Editor language token.\n */\nexport const IEditorExtensionRegistry = new Token('@jupyterlab/codemirror:IEditorExtensionRegistry', `A registry for CodeMirror extension factories.`);\n/**\n * Editor language token.\n */\nexport const IEditorLanguageRegistry = new Token('@jupyterlab/codemirror:IEditorLanguageRegistry', 'A registry for CodeMirror languages.');\n/**\n * Editor theme token.\n */\nexport const IEditorThemeRegistry = new Token('@jupyterlab/codemirror:IEditorThemeRegistry', 'A registry for CodeMirror theme.');\n//# sourceMappingURL=token.js.map"],"names":["command","f","option","state","dispatch","readOnly","tr","update","toggleLineComment","changeLineComment","toggleBlockComment","changeBlockComment","toggleBlockCommentByLine","o","s","ranges","r","selection","fromLine","doc","lineAt","from","toLine","to","last","length","push","exec","text","selectedLineRanges","getConfig","pos","data","languageDataAt","SearchMargin","tokens","map","block","every","c","comments","i","open","close","startText","endText","textBefore","sliceDoc","textAfter","spaceBefore","spaceAfter","beforeOff","slice","margin","startSpace","endSpace","endOff","test","charAt","findBlockComment","changes","range","insert","some","comment","token","lines","prevLine","startI","minIndent","line","indent","empty","single","l","changeSet","fromHistory","define","invertedEffects","HistEvent","constructor","effects","mapped","startSelection","selectionsAfter","this","setSelAfter","after","toJSON","_a","_b","_c","fromJSON","json","fromTransaction","none","invert","startState","facet","result","concat","undefined","selections","updateBranch","branch","maxLen","newEvent","start","newBranch","conc","a","b","popSelection","addMappingToBranch","mapping","event","mapEvent","extraSelections","mappedChanges","before","mapDesc","fullMapping","composeDesc","mapEffects","joinableUserEvent","HistoryState","done","undone","prevTime","prevUserEvent","isolate","addChanges","time","userEvent","config","lastEvent","newGroupDelay","joinToEvent","isAdjacent","iterChangedRanges","t","_f","_t","minDepth","compose","addSelection","filter","sels","Math","max","eq","addMapping","pop","side","annotations","of","rest","scrollIntoView","updateSel","sel","by","create","mainIndex","setSel","moveSel","how","rangeEnd","forward","cursor","cursorByChar","view","moveByChar","ltrAtCursor","textDirectionAt","main","head","LTR","cursorCharLeft","cursorCharRight","cursorByGroup","moveByGroup","interestingNode","node","bracketProp","type","prop","len","firstChild","moveBySyntax","match","newPos","syntaxTree","resolveInner","closedBy","openedBy","at","next","childAfter","childBefore","matchBrackets","matched","end","cursorByLine","moved","moveVertically","moveToLineBoundary","cursorLineUp","cursorLineDown","pageInfo","height","selfScroll","scrollDOM","clientHeight","scrollHeight","marginTop","marginBottom","source","scrollMargins","margins","top","bottom","dom","ownerDocument","defaultView","window","innerHeight","defaultLineHeight","cursorByPage","effect","page","startPos","coordsAtPos","scrollRect","getBoundingClientRect","scrollTop","scrollBottom","y","yMargin","cursorPageUp","cursorPageDown","moveByLineBoundary","lineBlockAt","space","min","extendSel","anchor","goalColumn","bidiLevel","selectByChar","selectCharLeft","selectCharRight","selectByGroup","selectByLine","selectLineUp","selectLineDown","selectByPage","selectPageUp","selectPageDown","cursorDocStart","cursorDocEnd","selectDocStart","selectDocEnd","deleteBy","target","changeByRange","towards","skipAtomic","announce","phrase","atomicRanges","between","deleteByChar","targetPos","drop","tabSize","getIndentUnit","number","deleteCharBackward","deleteCharForward","deleteByGroup","categorize","charCategorizer","cat","nextChar","nextCat","deleteGroupBackward","deleteToLineEnd","lineEnd","selectedLineBlocks","blocks","upto","startLine","endLine","prev","moveLine","nextLine","size","lineBreak","copyLine","insertNewlineAndIndent","newlineAndIndent","atEof","explode","context","indexOf","name","isBetweenBrackets","cx","IndentContext","simulateBreak","simulateDoubleBreak","getIndentation","indentString","lineIndent","changeBySelectedLine","atLine","mapPos","indentMore","indentUnit","indentLess","col","keep","charCodeAt","defaultKeymap","key","mac","run","shift","cur","parent","preventDefault","updated","Object","overrideIndentation","found","norm","extend","matching","toMatchingBracket","lineStart","append","StateCommands","indentMoreOrInsertTab","arg","toString","replaceSelection","insertTab","customThemeConfig","combine","configs","fontFamily","fontSize","lineHeight","setEditorStyle","style","customTheme","editorAttributes","INLINE_MATH_DOLLAR","INLINE_MATH_BRACKET","BLOCK_MATH_DOLLAR","BLOCK_MATH_BRACKET","DELIMITER_LENGTH","DELIMITERS","keys","reduce","agg","mark","resolve","parseMathIPython","latexParser","defineNodes","Array","forEach","tags","emphasis","processingInstruction","parseInline","parse","char","addDelimiter","includes","wrap","input","delimiterLength","parser","overlay","RULERS_CLASSNAME","baseTheme","borderRight","opacity","rulerConfig","value","arr","v","idx","lastIndexOf","fromClass","rulersContainer","appendChild","document","createElement","cssText","defaultCharacterWidth","widths","rulers","width","ruler","classList","add","viewportChanged","JSONExt","deepEqual","rulerIdx","left","destroy","remove","YRange","yanchor","yhead","relativePositionToJSON","createRelativePositionFromJSON","YSyncConfig","ytext","toYPos","assoc","createRelativePositionFromTypeIndex","fromYPos","rpos","createAbsolutePositionFromRelativePosition","Error","index","toYRange","fromYRange","yrange","ySyncFacet","inputs","ySyncAnnotation","ySync","conf","_observer","origin","delta","d","delete","retain","_ytext","observe","docChanged","transactions","annotation","transact","adj","iterChanges","fromA","toA","fromB","toB","insertText","sliceString","unobserve","ybinding","undoManager","ySyncConfig","addTrackedOrigin","removeTrackedOrigin","ExtensionsHandler","baseConfiguration","defaultExtensions","_configChanged","Signal","_disposed","_isDisposed","_immutables","Set","_baseConfig","_config","_configurableBuilderMap","Map","configurables","configChanged","disposed","isDisposed","dispose","emit","clearData","getOption","hasOption","setOption","setBaseOptions","options","changed","_getChangedOptions","customizedKeys","notOverridden","k","setOptions","reconfigureExtension","getEffect","reconfigureExtensions","configuration","has","injectExtension","extension","appendConfig","getInitialExtensions","extensions","get","instance","ext","builder","reconfigure","newConfig","oldConfig","newKeys","entries","EditorExtensionRegistry","configurationBuilder","configurationSchema","defaultOptions","handlers","immutableExtensions","_baseConfiguration","handler","defaultConfiguration","freeze","settingsSchema","deepCopy","addExtension","factory","set","default","schema","createNew","connect","ConfigurableExtension","_compartment","_builder","ImmutableExtension","_extension","createConfigurableExtension","createConditionalExtension","truthy","falsy","createImmutableExtension","getDefaultExtensions","themes","translator","trans","nullTranslator","load","title","__","foldGutter","cursorBlinkRate","description","repeat","parseInt","enum","lineWrapping","bracketMatching","class","items","minimum","inline","indentOnInput","allowMultipleSelections","properties","maximum","additionalProperties","getTheme","unfold","go","Find","Replace","previous","all","replace","Completions","Diagnostics","phrases","Node","GrammarDeclaration","rules","topRules","localTokens","externalTokens","externalSpecializers","externalPropSources","precedences","mainSkip","scopedSkip","dialects","externalProps","autoDelim","super","values","join","RuleDeclaration","id","props","params","expr","PrecDeclaration","TokenPrecDeclaration","TokenConflictDeclaration","TokenDeclaration","conflicts","literals","LocalTokenDeclaration","fallback","LiteralDeclaration","literal","ContextDeclaration","ExternalTokenDeclaration","ExternalSpecializeDeclaration","ExternalPropSourceDeclaration","ExternalPropDeclaration","externalID","Identifier","Expression","walk","_other","prototype","prec","NameExpression","args","other","exprsEq","walkExprs","SpecializeExpression","content","Prop","eqProps","exprEq","InlineRuleExpression","rule","oRule","ChoiceExpression","exprs","e","maybeParens","SequenceExpression","markers","m","om","x","ConflictMarker","RepeatExpression","kind","LiteralExpression","JSON","stringify","SetExpression","inverted","String","fromCodePoint","AnyExpression","CharClasses","asciiLetter","asciiLowercase","asciiUppercase","digit","whitespace","eof","CharClass","p","PropPart","GenError","hasProps","_p","termHash","Term","flags","nodeName","hash","nodeType","repeated","terminal","error","interesting","preserve","cmp","TermSet","terms","names","tops","term","makeTop","makeTerminal","makeNonTerminal","makeRepeat","uniqueName","finish","parts","nodeTypes","nextID","minRepeatTerm","maxTerm","cmpSet","diff","none$3","Conflicts","precedence","ambigGroups","cut","union","sort","ruleID","Rule","skip","cmpNoName","isRepeatWrap","sameReduce","Edge","charFor","n","fromCharCode","isEquivalent","partition","edges","eA","eB","applyMinimization","states","edge","stateID","State$1","accepting","nullEdge","compile","labeled","localID","explore","newState","ids","out","transitions","separate","closure","MergedEdge","mergeEdges","merged","targets","byAccepting","group","split","newPartition","groups","minimize","seen","sameSet$1","findConflicts","occurTogether","cycleTerms","soft","aEdges","bEdges","find","Conflict$1","exampleFromEdges","reachable","j","es","hasCycle","orig","work","table","haveCycle","entry","toArray","groupMasks","offsets","acceptEnd","stateMask","Uint16Array","mask","exampleA","exampleB","str","elts","elt","word","_","none$2","Input","string","fileName","lineInfo","ch","message","msg","posInfo","info","raise","re","readString","lastIndex","eat","unexpected","expect","val","external","specialized","propSources","sawTop","parseRule","parseIdent","parseTokens","parseLocalTokens","parseExternalTokens","parseExternalProp","parseExternalSpecialize","parseExternalPropSource","first","parsePrecedence","parseBracedExpr","parseGrammar","named","parseProps","parseProp","parseExprChoice","SET_MARKER","parseExprInner","unescaped","code","codePointAt","addRange","hasOwnProperty","cls","parseArgs","parseExprSuffix","endOfSequence","parseExprSequence","markerType","localStart","ms","tokenRules","parseTokenPrecedence","parseTokenConflict","parseExternalTokenSet","point","u1","u2","u3","unknown","hashString","h","verbose","process","env","LOG","timing","label","t0","Date","now","console","log","toFixed","_label","Pos","ahead","ambigAhead","skipAhead","via","advance","cmpStr","eqSimple","splice","sameSet","trail","reverse","addOrigins","conflictsAt","compareRepeatPrec","posB","termsAhead","cont","addTo","eqSet","Shift","Reduce","hashPositions","State","startRule","actions","actionPositions","goto","tokenGroup","defaultReduce","g","addActionInner","positions","check","action","fullPos","actionFullPos","actionConflicts","addAction","conflict","conflictPos","root","hist","unshift","p2","findConflictOrigin","Conflict","getGoto","hasSet","dThis","dOther","array","Core","applyCut","canMergeInner","canMerge","mergeStates","newStates","newID","Group","member","members","samePosSet","none$1","digitToChar","encode","low","encodeArray","Parts","ensureConflicts","otherConflicts","withConflicts","BuiltRule","matches","matchesRepeat","Builder","tokenOrigins","built","ruleNames","namespaces","namedTerms","termTable","knownProps","dynamicRulePrecedences","definedGroups","astRules","currentSkip","ast","NP","perNode","externalProp","MainTokenSet","LocalTokenSet","ExternalTokenSet","decl","ExternalSpecializer","noSkip","newName","defineRule","scoped","findIndex","sc","isEmpty","unique","skipRules","normalizeExpr","used","nodeInfo","isExported","buildRule","warn","takePrecedences","takeConflicts","lt","defineGroup","checkGroups","base","prepareParser","groupStart","otherStart","otherName","newRules","mergeRules","pass","inlinable","expand","inlineRules","simplifyRules","termNames","startTerms","change","nt","startLen","part","computeFirstSets","skipInfo","startTokens","fullTable","cores","getState","core","coreHash","byHash","known","added","redo","addFor","existing","origIndex","startTerm","startSkip","filled","byTerm","byTermPos","atEnd","replaced","count","buildFullAutomaton","grp","buildLocalGroup","tokenGroups","tokenPrec","tokenData","buildTokenGroups","didMerge","mergeIdentical","assignGroups","spill","groupIndex","idA","idB","collapseAutomaton","skipState","startRules","nonSkip","findSkipStates","buildSpecializeTable","tokStart","tokenizer","tokenizers","DataBuilder","skipData","storeArray","Uint32Array","forceReductions","computeForceReductions","finishCx","FinishStateContext","byDialect","dynamicPrecedences","precTable","nodeProps","skippedTypes","gatherNodeProps","stateData","computeGotoTable","nodeNames","repeatNodeCount","getParser","rawNodeProps","rawSpecialized","externalSpecializer","stack","deserialize","version","externalPropSource","skippedNodes","tok","contextTracker","getParserFile","rawTokenizers","rawDialects","mod","moduleStyle","gen","imports","imported","defined","KEYWORDS","exportName","getName","prefix","importName","spec","src","varName","lrParser","createSource","serializePropValue","specHead","tableName","parserStr","includeNames","gatherNonSkippedNodes","notSkipped","rec","tag","reductions","candidates","gotoEdges","parents","length1Reductions","createsCycle","parentIntersection","reduceAction","setSize","substituteArgs","substituteArgsInProps","substituteInValue","conflictsFor","here","marker","precs","item","choices","choice","getToken","normalizeRepeat","normalizeSequence","complete","endConflicts","full","getLiteral","resolveSpecialization","dynamicPrec","explicitInline","exported","registerDynamicPrec","allow","defaultName","defaultProps","toUpperCase","ignored","dialect","finishProp","dialectID","builtin","delim","findDelimiters","addToProp","param","sp","findToken","lastToken","bracket","firstToken","recur","getNamed","stateArray","sharedActions","findSharedActions","shared","scratch","fill","addr","storeActions","skipReduce","isSkip","forcedReduce","skipID","skipTable","skipTerms","addToSet","tokenizerMask","groupID","depth","search","findArray","num","offset","list","TokenGroup","buildTokenMasks","masks","groupMask","TokenArg","scope","BuildingRule","TokenSet","building","precedenceRelations","build","loop","MAX_CODE","invertRanges","rangeEdges","mid","MAX_CHAR","rel","level","addRel","precededBy","buildPrecTable","softConflicts","record","arguments","explicitConflicts","startID","allConflicts","cache","hasTerm","cached","checkTogether","errors","incompatible","stateTerms","conflicting","example","usesThis","usesOther","precOffset","fullData","ASTRAL","GAP_START","GAP_END","LOW_SURR_B","HIGH_SURR_B","hi","lowStr","hiStr","lowA","lowB","hiA","hiB","hop","midStart","midEnd","gatherExtTokens","findExtToken","externalTokenizer","buildParser","jupyterEditorTheme","theme","background","color","caretColor","borderLeft","backgroundColor","jupyterHighlightStyle","HighlightStyle","meta","heading","heading1","heading2","heading3","heading4","fontWeight","keyword","atom","definition","function","variableName","standard","special","self","punctuation","propertyName","operator","fontStyle","labelName","monospace","tagName","attributeName","quote","link","textDecoration","separator","derefOperator","paren","strong","strikethrough","bool","jupyterTheme","syntaxHighlighting","EditorThemeRegistry","_themeMap","defaultTheme","addTheme","displayName","getDefaultThemes","defaultHighlightStyle","EditorLanguageRegistry","_modeList","addLanguage","mime","support","LanguageSupport","LRLanguage","language","findByName","findByMIME","makeSpec","getLanguage","findBest","getLanguages","strict","isArray","toLowerCase","alias","findByExtension","findByFileName","basename","PathExt","filename","dot","substring","_d","modename","mimetype","IEditorMimeTypeService","defaultMimeType","highlight","el","language_","createTextNode","tree","highlightTree","classes","className","res","LanguageDescription","legacy","StreamLanguage","async","sql","dialectName","getDefaultLanguages","cpp","css","html","java","javascript","jsx","markdown","codeLanguages","php","python","rust","typescript","wast","xml","apl","asciiArmor","asn1","asterisk","brainfuck","cobol","csharp","clojure","gss","cmake","coffeeScript","commonLisp","cypher","cython","crystal","dart","dockerFile","dtd","dylan","ebnf","ecl","eiffel","elm","erlang","esper","factor","fcl","forth","fortran","fSharp","gas","gherkin","groovy","haskell","haxe","hxml","http","idl","jsonld","jinja2","julia","kotlin","less","liveScript","lua","mirc","mathematica","modelica","mumps","mbox","nginx","nsis","ntriples","objectiveC","objectiveCpp","oCaml","octave","oz","pascal","perl","pig","powerShell","protobuf","puppet","q","rpmChanges","rpmSpec","ruby","sas","scala","scheme","sCSS","shell","sieve","smalltalk","solr","sml","sparql","spreadsheet","squirrel","stylus","swift","stex","verilog","tcl","textile","tiddlyWiki","tiki","toml","troff","ttcn","ttcnCfg","turtle","webIDL","vb","vbScript","velocity","vhdl","xQuery","yacas","yaml","z80","mscgen","xu","msgenny","CodeMirrorEditor","_e","edgeRequested","_language","_uuid","_languages","languages","_configurator","extensionsRegistry","host","addEventListener","uuid","UUID","uuid4","model","_model","onKeyDown","domEventHandlers","keydown","onKeydown","updateListener","_onDocChanged","_editor","Private","createEditor","high","sharedModel","_onMimeTypeChanged","_onCursorActivity","onConfigChanged","mimeTypeChanged","editor","lineCount","charWidth","removeEventListener","getLine","getOffsetAt","position","column","getPositionAt","undo","clearHistory","clearUndoHistory","focus","hasFocus","blur","contentDOM","firstLine","lastLine","cursorCoords","where","mode","getRange","fromOffset","_toPosition","toOffset","revealPosition","revealSelection","getCoordinateForPosition","getPositionForCoordinate","coordinate","posAtCoords","getCursorPosition","setCursorPosition","getSelections","getSelection","setSelection","setSelections","_toCodeMirrorPosition","_toSelection","firstSelection","updateSource","newPosition","getTokens","ensureSyntaxTree","iterate","enter","ref","getTokenAt","getTokenAtCursor","newIndentedLine","execCommand","configurator","keyCode","shiftKey","mimeType","then","catch","reason","handleEvent","_evtFocus","_evtBlur","crelt","call","setAttribute","child","RangeError","editorConfig","additionalExtensions","basicNormalize","normalize","SearchCursor","query","buffer","bufferPos","iter","iterRange","bufferStart","peek","nextOverlapping","Symbol","iterator","baseFlags","unicode","RegExpCursor","curLine","MultilineRegExpCursor","RegExp","ignoreCase","curLineStart","matchPos","toCharEnd","off","flattened","WeakMap","FlattenedDoc","flat","cachedFrom","chunkEnd","createLineDialog","sign","ln","cl","percent","pc","round","docLine","dialogEffect","onkeydown","onsubmit","dialogField","is","provide","baseTheme$1","padding","searchConfigFacet","caseSensitive","regexp","wholeWord","createPanel","SearchPanel","scrollToMatch","SearchQuery","valid","validRegExp","unquoted","unquote","RegExpQuery","StringQuery","getCursor","st","regexpCursor","stringCursor","QueryType","categorizer","buf","bufPos","charBefore","Word","charAfter","nextMatch","curFrom","curTo","prevMatchInRange","prevMatch","getReplacement","_result","matchAll","limit","_from","_to","setSearchQuery","togglePanel","searchState","SearchState","defaultQuery","panel","createSearchPanel","matchMark","selectedMatchMark","searchHighlighter","decorations","field","selectionSet","visibleRanges","selected","searchCommand","openSearchPanel","findNext","announceMatch","selectSearchInput","findPrevious","selectMatches","replaceNext","replacement","toText","replaceAll","announceText","selText","getSearchInput","querySelector","activeElement","select","searchInput","searchExtensions","closeSearchPanel","contains","searchKeymap","newSel","wordAt","selectWord","searchedText","fullWord","cycled","findNextOccurrence","button","onclick","commit","bind","searchField","placeholder","form","onchange","onkeyup","replaceField","caseField","checked","reField","wordField","setQuery","mount","AnnounceMargin","Break","right","border","font","marginRight","whiteSpace","lowest","CodeMirrorEditorFactory","newInlineEditor","dataset","newEditor","inlineCodeMirrorConfig","newDocumentEditor","documentCodeMirrorConfig","lineNumbers","scrollPastEnd","CodeMirrorMimeTypeService","getMimeTypeByLanguage","file_extension","codemirror_mode","getMimeTypeByFilePath","path","extname","Utils","EditorSearchProvider","currentIndex","_isActive","_inSelection","_cmHandler","_stateChanged","cmHandler","CodeMirrorSearchHighlighter","stateChanged","currentMatchIndex","isActive","matchesCount","clearHighlight","Promise","endQuery","setIsActive","startQuery","filters","setSearchSelection","updateCodeMirror","getSource","setProtectSelection","protectSelection","onSharedModelChanged","highlightNext","getCurrentMatch","highlightPrevious","replaceCurrentMatch","newText","occurred","substitutedText","regularExpression","preserveCase","GenericSearchProvider","replaceAllMatches","lastEnd","finalSrc","newStep","setSource","emitter","sourceChange","allMatches","TextSearchEngine","scroll","_current","_cm","_matches","_currentIndex","_highlightEffect","transform","currentMatch","_highlightMark","_currentMark","_highlightField","highlights","transaction","ef","_domEventHandlers","_selectCurrentMatch","_highlightCurrentMatch","_protectSelection","_findNext","setEditor","_refresh","lastPosition","lowerBound","higherBound","Infinity","middle","floor","currentPosition","IEditorExtensionRegistry","Token","IEditorLanguageRegistry","IEditorThemeRegistry"],"sourceRoot":""}